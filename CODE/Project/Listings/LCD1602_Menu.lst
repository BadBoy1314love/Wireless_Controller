C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602_MENU
OBJECT MODULE PLACED IN ..\Output\LCD1602_Menu.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\Source\Application\LCD1602_Menu.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\Sou
                    -rce\Application;..\Source\Device_Driver;..\Source\System;D:\Keil\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\Listings\LCD160
                    -2_Menu.lst) TABS(2) OBJECT(..\Output\LCD1602_Menu.obj)

line level    source

   1          /******************************************************************************/
   2          // 包含头文件
   3          /******************************************************************************/
   4          #include "config.h"
   5          #include "LCD1602.h"
   6          #include "LCD1602_Menu.h"
   7          #include "ESP8266.h"
   8          #include "EEPROM_Application.h"
   9          
  10          /******************************************************************************/
  11          // 变量初始化
  12          /******************************************************************************/
  13          u8 Menu_Index = 0;   //菜单索引号
  14          u8 Menu_Flag = 0;    //菜单标志位
  15                               //0:EC11旋转切换条目，按键按下菜单级别转移
  16                               //1:EC11旋转切换条目，按键按下为返回执行返回操作，即退出菜单(第一级RETURN)
  17                               //2:EC11旋转切换条目，按键按下更新任务状态
  18                               //3:EC11旋转切换条目，按键按下进入第一个编辑位
  19                               //4:EC11旋转修改值，按键按下切换编辑位
  20          u8 Menu_Edit_Tips = 0; //编辑提示控制变量，计数函数进入的次数，
  21                                 //改变编辑提示控制位
  22          bit Menu_Edit_Show = 0;  //编辑提示控制位，判断此位，显示或者不显示
  23          u8 Menu_Edit = 0;  //编辑显示位,通过此变量来确定当前页面的显示位
  24                             //0:为菜单条目，不闪烁编辑位
  25                             //1:为编辑位1号，闪烁此编辑位
  26                             //2:为编辑为2号，闪烁此编辑位
  27                             //3:...
  28          s8 Menu_Edit_Value = 0;  //菜单编辑位当前值
  29          
  30          bit isReset = 0;  //系统复位控制位  0：此时为非复位 1：此时为复位
  31          
  32          /*显示用指针*/
  33          u8 *LCD1602_First_Line;  //1602第一行的显示，填充第一行
  34          u8 *LCD1602_Second_Line;  //1602第二行的显示，填充第二行
  35          u8 *LCD1602_First_Line_16; //1602第一行第16位的显示
  36          u8 *LCD1602_First_Line_6; //1602第一行第6位的显示
  37          
  38          
  39          //菜单字符指针
  40          /*第一级菜单*/
  41          u8 code Menu_TASKS_CTRL_Select[] =">> TASKS CTRL <<";
  42          u8 code Menu_TASKS_SET_Select[]  =">> TASKS SET  <<";
  43          u8 code Menu_PORT_SET_Select[]   =">>  PORT SET  <<";
  44          u8 code Menu_TIME_SET_Select[]   =">>  TIME SET  <<";
  45          u8 code Menu_WIFI_SET_Select[]   =">>  WIFI SET  <<";
  46          u8 code RETURN_Select[]          =">>   RETURN   <<";
  47          
  48          u8 code Menu_TASKS_CTRL[] ="   TASKS CTRL   ";
  49          u8 code Menu_TASKS_SET[]  ="   TASKS SET    ";
  50          u8 code Menu_PORT_SET[]   ="    PORT SET    ";
  51          u8 code Menu_TIME_SET[]   ="    TIME SET    ";
  52          u8 code Menu_WIFI_SET[]   ="    WIFI SET    ";
  53          u8 code RETURN[]          ="     RETURN     ";
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 2   

  54          //补充菜单条目
  55          u8 code SYSTEM_RESET_Select[]=">> SYS RESET  <<";
  56          u8 code SYSTEM_RESET[]       ="   SYS RESET    ";
  57          u8 code SYSTEM_RESET_ASK[]   ="SYSTEM RESET ???";
  58          u8 code SYSTEM_RESET_YES[]   =">> YES <<  NO   ";
  59          u8 code SYSTEM_RESET_NO[]    ="   YES  >> NO <<";
  60          /*第二级菜单*/
  61          //TASKS_CTRL_1_0下项目
  62          
  63          //TASK1_CTRL
  64          u8 code Menu_TASK1_CTRL_Run_Select[]  =">>  RUN TASK1 <<";
  65          u8 code Menu_TASK1_CTRL_Run[]         ="    RUN TASK1   ";
  66          u8 code Menu_TASK1_CTRL_Stop_Select[] =">> STOP TASK1 <<";
  67          u8 code Menu_TASK1_CTRL_Stop[]        ="   STOP TASK1   ";
  68          
  69          //TASK2_CTRL
  70          u8 code Menu_TASK2_CTRL_Run_Select[]  =">>  RUN TASK2 <<";
  71          u8 code Menu_TASK2_CTRL_Run[]         ="    RUN TASK2   ";
  72          u8 code Menu_TASK2_CTRL_Stop_Select[] =">> STOP TASK2 <<";
  73          u8 code Menu_TASK2_CTRL_Stop[]        ="   STOP TASK2   ";
  74          
  75          //TASK3_CTRL
  76          u8 code Menu_TASK3_CTRL_Run_Select[]  =">>  RUN TASK3 <<";
  77          u8 code Menu_TASK3_CTRL_Run[]         ="    RUN TASK3   ";
  78          u8 code Menu_TASK3_CTRL_Stop_Select[] =">> STOP TASK3 <<";
  79          u8 code Menu_TASK3_CTRL_Stop[]        ="   STOP TASK3   ";
  80          
  81          //TASK4_CTRL
  82          u8 code Menu_TASK4_CTRL_Run_Select[]  =">>  RUN TASK4 <<";
  83          u8 code Menu_TASK4_CTRL_Run[]         ="    RUN TASK4   ";
  84          u8 code Menu_TASK4_CTRL_Stop_Select[] =">> STOP TASK4 <<";
  85          u8 code Menu_TASK4_CTRL_Stop[]        ="   STOP TASK4   ";
  86          
  87          //TASK5_CTRL
  88          u8 code Menu_TASK5_CTRL_Run_Select[]  =">>  RUN TASK5 <<";
  89          u8 code Menu_TASK5_CTRL_Run[]         ="    RUN TASK5   ";
  90          u8 code Menu_TASK5_CTRL_Stop_Select[] =">> STOP TASK5 <<";
  91          u8 code Menu_TASK5_CTRL_Stop[]        ="   STOP TASK5   ";
  92          
  93          //TASK6_CTRL
  94          u8 code Menu_TASK6_CTRL_Run_Select[]  =">>  RUN TASK6 <<";
  95          u8 code Menu_TASK6_CTRL_Run[]         ="    RUN TASK6   ";
  96          u8 code Menu_TASK6_CTRL_Stop_Select[] =">> STOP TASK6 <<";
  97          u8 code Menu_TASK6_CTRL_Stop[]        ="   STOP TASK6   ";
  98          
  99          u8 code Menu_Empty_Line[]             ="                ";
 100          
 101          /*第二级菜单*/
 102          //TASKS_SET_1_1下项目
 103          
 104          u8 code Menu_TASK1_SET_Select[]   =">> TASK1 SET  <<";
 105          u8 code Menu_TASK2_SET_Select[]   =">> TASK2 SET  <<";
 106          u8 code Menu_TASK3_SET_Select[]   =">> TASK3 SET  <<";
 107          u8 code Menu_TASK4_SET_Select[]   =">> TASK4 SET  <<";
 108          u8 code Menu_TASK5_SET_Select[]   =">> TASK5 SET  <<";
 109          u8 code Menu_TASK6_SET_Select[]   =">> TASK6 SET  <<";
 110          
 111          u8 code Menu_TASK1_SET[]   ="   TASK1 SET    ";
 112          u8 code Menu_TASK2_SET[]   ="   TASK2 SET    ";
 113          u8 code Menu_TASK3_SET[]   ="   TASK3 SET    ";
 114          u8 code Menu_TASK4_SET[]   ="   TASK4 SET    ";
 115          u8 code Menu_TASK5_SET[]   ="   TASK5 SET    ";
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 3   

 116          u8 code Menu_TASK6_SET[]   ="   TASK6 SET    ";
 117          
 118          //PORT_SET_1_2下项目
 119          
 120          //对所有端口
 121          u8 code Trigger_Mode_0[]="  TRIGGER MODE:0"; 
 122          u8 code Trigger_Mode_1[]="  TRIGGER MODE:1";
 123          u8 code Trigger_Mode_Empty[]="  TRIGGER MODE: ";
 124          u8 code Empty_Number[] = " ";
 125          
 126          //PIN(10-17,20-24,35-37) SET
 127          u8 xdata PIN_SET_Input[]  =">>PIN  -->TASK:";
 128          u8 xdata PIN_SET_Output[] =">>PIN  <--TASK:";
 129          u8 xdata PIN_SET_Empty[]  =">>PIN     TASK:";
 130          
 131          //TIME_SET_1_3下项目
 132          u8 xdata SET_DATE[]  ="DATE:2022/07/17 ";
 133          u8 xdata SET_TIME[]  ="TIME: 00:00:00  ";
 134          
 135          u8 code SET_TIME_MANUAL[]        ="   MANUAL SET   ";
 136          u8 code SET_TIME_MANUAL_Select[] =">> MANUAL SET <<";
 137          
 138          u8 code SET_TIME_AUTO[]        ="    AUTO SET    ";
 139          u8 code SET_TIME_AUTO_Select[] =">>  AUTO SET  <<";
 140          
 141          /*第二级菜单*/
 142          //WIFI_SET_1_4下项目
 143          u8 code TCP_PORT_SET_Select[]=">>  TCP PORT  <<";
 144          u8 code TCP_PORT_SET[]       ="    TCP PORT    ";
 145          u8 code TCP_SERVER_PORT[]   ="TCP SERVER PORT:";
 146          u8 xdata TCP_PORT_Number[]   ="-->  65535   <--";
 147          
 148          u8 code STA_IP_Select[] =">>   STA IP   <<";
 149          u8 code STA_IP[]        ="     STA IP     ";
 150          u8 code STA_IP_ADDRESS[]="STA IP ADDRESS: ";
 151          
 152          u8 code AP_IP_Select[] =">>    AP IP   <<";
 153          u8 code AP_IP[]        ="      AP IP     ";
 154          u8 code AP_IP_ADDRESS[]="AP IP ADDRESS:  ";
 155          
 156          /*第三级菜单*/
 157          //TASK_SET下项目（TASK1-TASK1复用）
 158          u8 xdata TASK_StartTime[]="TASK  StartTime:"; 
 159          u8 xdata TASK_EndTime[]  ="TASK    EndTime:";
 160          u8 xdata TASK_OverTime[] ="TASK   OverTime:";
 161          u8 code TASK_OverTime_AutoReset_ON[]  ="AutoReset--->ON ";
 162          u8 code TASK_OverTime_AutoReset_OFF[] ="AutoReset--->OFF";
 163          u8 code TASK_OverTime_AutoReset_Empty[] ="AutoReset--->   ";
 164          u8 xdata TASK_OnTime[]   ="TASK     OnTime:";
 165          u8 xdata TASK_OffTime[]  ="TASK    OffTime:";
 166          u8 xdata Time_Minute[]   ="   00:00        ";
 167          u8 xdata Time_100MS[]    =" 0000:00:00:00  ";
 168          
 169          u8 xdata TASK_SET_Number =0;
 170          
 171          
 172          /*任务号的显示数据*/
 173          u8 idata Pin10_Number[1] = {0};
 174          u8 idata Pin11_Number[1] = {0};
 175          u8 idata Pin12_Number[1] = {0};
 176          u8 idata Pin13_Number[1] = {0};
 177          u8 idata Pin14_Number[1] = {0};
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 4   

 178          u8 idata Pin15_Number[1] = {0};
 179          u8 idata Pin16_Number[1] = {0};
 180          u8 idata Pin17_Number[1] = {0};
 181          
 182          u8 idata Pin20_Number[1] = {0};
 183          u8 idata Pin21_Number[1] = {0};
 184          u8 idata Pin22_Number[1] = {0};
 185          u8 idata Pin23_Number[1] = {0};
 186          u8 idata Pin24_Number[1] = {0};
 187          
 188          u8 idata Pin35_Number[1] = {0};
 189          u8 idata Pin36_Number[1] = {0};
 190          u8 idata Pin37_Number[1] = {0};
 191          
 192          extern u8 EC11_State;   //引用EC11的状态
 193          extern s8 EC11_Value;   //引用EC11的表示值
 194          
 195          extern u8 LCD1602_Show_State;
 196          
 197          /*引用任务控制位*/
 198          extern bit Task1;
 199          extern bit Task2;
 200          extern bit Task3;
 201          extern bit Task4;
 202          extern bit Task5;
 203          extern bit Task6;
 204          
 205          /*输入模式时作为端口触发更新任务号*/ 
 206          /*输出模式时选择关联任务号*/
 207          /*端口模式（0为输入模式）（1为输出模式）*/
 208          extern s8 xdata Pin10_Task_Number;  extern bit Pin10_Mode;
 209          extern s8 xdata Pin11_Task_Number;  extern bit Pin11_Mode;
 210          
 211          extern s8 xdata Pin12_Task_Number;  extern bit Pin12_Mode; 
 212          extern s8 xdata Pin13_Task_Number;  extern bit Pin13_Mode;
 213          extern s8 xdata Pin14_Task_Number;  extern bit Pin14_Mode;
 214          extern s8 xdata Pin15_Task_Number;  extern bit Pin15_Mode;
 215          extern s8 xdata Pin16_Task_Number;  extern bit Pin16_Mode;
 216          extern s8 xdata Pin17_Task_Number;  extern bit Pin17_Mode;
 217          
 218          extern s8 xdata Pin20_Task_Number;  extern bit Pin20_Mode;
 219          extern s8 xdata Pin21_Task_Number;  extern bit Pin21_Mode;
 220          extern s8 xdata Pin22_Task_Number;  extern bit Pin22_Mode;
 221          extern s8 xdata Pin23_Task_Number;  extern bit Pin23_Mode;
 222          extern s8 xdata Pin24_Task_Number;  extern bit Pin24_Mode;
 223          
 224          extern s8 xdata Pin35_Task_Number;  extern bit Pin35_Mode;
 225          extern s8 xdata Pin36_Task_Number;  extern bit Pin36_Mode;
 226          extern s8 xdata Pin37_Task_Number;  extern bit Pin37_Mode;
 227          
 228          /*端口的触发模式*/
 229          /*触发模式（0为自锁模式）（1为立即模式）*/
 230          //自锁模式：按键按下，释放才会更新任务状态
 231          //立即模式：按键按下，立刻更新任务状态，按键释放才可重新更新
 232          extern bit Pin10_Trigger_Mode;
 233          extern bit Pin11_Trigger_Mode;
 234          
 235          extern bit Pin12_Trigger_Mode;
 236          extern bit Pin13_Trigger_Mode;
 237          extern bit Pin14_Trigger_Mode;
 238          extern bit Pin15_Trigger_Mode;
 239          extern bit Pin16_Trigger_Mode;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 5   

 240          extern bit Pin17_Trigger_Mode;
 241          
 242          extern bit Pin20_Trigger_Mode;
 243          extern bit Pin21_Trigger_Mode;
 244          extern bit Pin22_Trigger_Mode;
 245          extern bit Pin23_Trigger_Mode;
 246          extern bit Pin24_Trigger_Mode;
 247          
 248          extern bit Pin35_Trigger_Mode;
 249          extern bit Pin36_Trigger_Mode;
 250          extern bit Pin37_Trigger_Mode;
 251          
 252          extern s8 hour,minute,second;
 253          extern s16 Year;
 254          extern s8 Month;
 255          extern s8 Day;
 256          extern u8 xdata Max_Month_Days[];
 257          
 258          extern u8 xdata ESP8266_Return_Value;
 259          
 260          //TCP服务器端口
 261          extern s32 xdata TcpServerPort;
 262          /*设置TCP服务器信息*/
 263          extern u8 xdata ATCIPSERVER[]; //="AT+CIPSERVER=1,65535";
 264          
 265          extern u8 xdata STAIPTable[];
 266          extern u8 xdata APIPTable[];
 267          
 268          /*时间区间间歇模式*/
 269          
 270          /*任务一*/
 271          extern s16 xdata Task1_StartTime;//任务1起始运行时间
 272          extern s16 xdata Task1_EndTime;//任务1结束运行时间
 273          extern s32 xdata Task1_OverTime; //任务1运行超时时间
 274          extern bit Task1_OverTime_Reset; //任务1运行超时自动复位控制位
 275                                        //用于控制任务是否永久运行
 276                                        //1:自动复位 ，任务超时将复位超时计数，任务永久运行
 277                                        //0:不自动复位 任务超时将关闭
 278          
 279          extern s32 xdata Task1_OnTime;  //表示Task1输出ON状态的时间
 280          extern s32 xdata Task1_OffTime; //表示Task1输出OFF状态的时间
 281          
 282          /*任务二*/
 283          extern s16 xdata Task2_StartTime;//任务2起始运行时间
 284          extern s16 xdata Task2_EndTime;//任务2结束运行时间
 285          extern s32 xdata Task2_OverTime; //任务2运行超时时间
 286          extern bit Task2_OverTime_Reset; //任务2运行超时自动复位控制位
 287                                        //用于控制任务是否永久运行
 288                                        //1:自动复位 ，任务超时将复位超时计数，任务永久运行
 289                                        //0:不自动复位 任务超时将关闭
 290          
 291          extern s32 xdata Task2_OnTime;  //表示Task2输出ON状态的时间
 292          extern s32 xdata Task2_OffTime; //表示Task2输出OFF状态的时间
 293          
 294          
 295          /*任务三*/
 296          extern s16 xdata Task3_StartTime;//任务3起始运行时间
 297          extern s16 xdata Task3_EndTime;//任务3结束运行时间
 298          extern s32 xdata Task3_OverTime; //任务3运行超时时间
 299          extern bit Task3_OverTime_Reset; //任务3运行超时自动复位控制位
 300                                        //用于控制任务是否永久运行
 301                                        //1:自动复位 ，任务超时将复位超时计数，任务永久运行
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 6   

 302                                        //0:不自动复位 任务超时将关闭
 303          
 304          extern s32 xdata Task3_OnTime;  //表示Task3输出ON状态的时间
 305          extern s32 xdata Task3_OffTime; //表示Task3输出OFF状态的时间
 306          
 307          
 308          /*任务四*/
 309          extern s16 xdata Task4_StartTime;//任务4起始运行时间
 310          extern s16 xdata Task4_EndTime;//任务4结束运行时间
 311          extern s32 xdata Task4_OverTime; //任务4运行超时时间
 312          extern bit Task4_OverTime_Reset; //任务4运行超时自动复位控制位
 313                                        //用于控制任务是否永久运行
 314                                        //1:自动复位 ，任务超时将复位超时计数，任务永久运行
 315                                        //0:不自动复位 任务超时将关闭
 316          
 317          extern s32 xdata Task4_OnTime;  //表示Task4输出ON状态的时间
 318          extern s32 xdata Task4_OffTime; //表示Task4输出OFF状态的时间
 319          
 320          /*任务五*/
 321          extern s16 xdata Task5_StartTime;//任务5起始运行时间
 322          extern s16 xdata Task5_EndTime;//任务5结束运行时间
 323          extern s32 xdata Task5_OverTime; //任务5运行超时时间
 324          extern bit Task5_OverTime_Reset; //任务5运行超时自动复位控制位
 325                                        //用于控制任务是否永久运行
 326                                        //1:自动复位 ，任务超时将复位超时计数，任务永久运行
 327                                        //0:不自动复位 任务超时将关闭
 328          
 329          extern s32 xdata Task5_OnTime;  //表示Task5输出ON状态的时间
 330          extern s32 xdata Task5_OffTime; //表示Task5输出OFF状态的时间
 331          
 332          /*任务六*/
 333          extern s16 xdata Task6_StartTime;//任务6起始运行时间
 334          extern s16 xdata Task6_EndTime;//任务6结束运行时间
 335          extern s32 xdata Task6_OverTime; //任务6运行超时时间
 336          extern bit Task6_OverTime_Reset; //任务6运行超时自动复位控制位
 337                                        //用于控制任务是否永久运行
 338                                        //1:自动复位 ，任务超时将复位超时计数，任务永久运行
 339                                        //0:不自动复位 任务超时将关闭
 340          
 341          extern s32 xdata Task6_OnTime;  //表示Task6输出ON状态的时间
 342          extern s32 xdata Task6_OffTime; //表示Task6输出OFF状态的时间
 343          
 344          
 345          extern u8 xdata STA_MODE_Table[150]; //={"AT+CWJAP_CUR=\"TP-LINK_888F\",\"asdfghjkl\"\r\n        "};
 346          extern u8 xdata AP_MODE_Table[150]; //={"AT+CWSAP_CUR=\"Wireless_Controller_Test\",\"asdfghjkl\",3,4\r\n  
             -    "};
 347          extern uint8 xdata rcvTable[200];
 348          extern u8 xdata apTable[16];
 349          
 350          /*执行当前菜单索引号下的具体操作函数*/
 351          void (*current_operation_index)();   //设定显示状态以及对参数进行操作
 352          
 353          /******************************************************************************/
 354          // LCD1602菜单索引表
 355          /******************************************************************************/
 356          Menu_table code table[52]=
 357          {
 358            /*第一级菜单*/
 359            {0,5,1,6,(*TASKS_CTRL_1_0)},
 360            {1,0,2,13, (*TASKS_SET_1_1)},
 361            {2,1,3,20,  (*PORT_SET_1_2)},
 362            {3,2,4,37,  (*TIME_SET_1_3)},
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 7   

 363            {4,3,51,40,  (*WIFI_SET_1_4)},
 364            {5,51,0,5,    (*RETURN_1_5)},
 365            
 366            /*第二级菜单*/
 367            //TASKS_CTRL_1_0下项目
 368            {6,12,7,6,   (*TASK1_CTRL_2_6)},
 369            {7,6,8,7,    (*TASK2_CTRL_2_7)},
 370            {8,7,9,8,    (*TASK3_CTRL_2_8)},
 371            {9,8,10,9,   (*TASK4_CTRL_2_9)},
 372            {10,9,11,10, (*TASK5_CTRL_2_10)},
 373            {11,10,12,11,(*TASK6_CTRL_2_11)},
 374            {12,11,6,0,      (*RETURN_2_12)},
 375            
 376            /*第二级菜单*/
 377            //TASKS_SET_1_1下项目
 378            {13,19,14,44, (*TASK1_SET_2_13)},
 379            {14,13,15,44, (*TASK2_SET_2_14)},
 380            {15,14,16,44, (*TASK3_SET_2_15)},
 381            {16,15,17,44, (*TASK4_SET_2_16)},
 382            {17,16,18,44, (*TASK5_SET_2_17)},
 383            {18,17,19,44, (*TASK6_SET_2_18)},
 384            {19,18,13,1,  (*RETURN_2_19)},
 385            
 386            /*第二级菜单*/
 387            //PORT_SET_1_2下项目
 388            {20,36,21,20, (*PIN10_SET_2_20)},
 389            {21,20,22,21, (*PIN11_SET_2_21)},
 390            {22,21,23,22, (*PIN12_SET_2_22)},
 391            {23,22,24,23, (*PIN13_SET_2_23)},
 392            {24,23,25,24, (*PIN14_SET_2_24)},
 393            {25,24,26,25, (*PIN15_SET_2_25)},
 394            {26,25,27,26, (*PIN16_SET_2_26)},
 395            {27,26,28,27, (*PIN17_SET_2_27)},
 396            
 397            {28,27,29,28, (*PIN20_SET_2_28)},
 398            {29,28,30,29, (*PIN21_SET_2_29)},
 399            {30,29,31,30, (*PIN22_SET_2_30)},
 400            {31,30,32,31, (*PIN23_SET_2_31)},
 401            {32,31,33,32, (*PIN24_SET_2_32)},
 402            
 403            {33,32,34,33, (*PIN35_SET_2_33)},
 404            {34,33,35,34, (*PIN36_SET_2_34)},
 405            {35,34,36,35, (*PIN37_SET_2_35)},
 406            
 407            {36,35,20,2, (*RETURN_2_36)},
 408            
 409            /*第二级菜单*/
 410            //TIME_SET_1_3下项目
 411            {37,39,38,37,(*TIME_SET_Manual_Set_2_37)},
 412            {38,37,39,38,(*TIME_SET_Auto_Set_2_38)},
 413            {39,38,37,3,(*RETURN_2_39)},
 414          
 415            /*第二级菜单*/
 416            //WIFI_SET_1_4下项目
 417            {40,43,41,40,(*TCP_PORT_SET_2_40)},
 418            {41,40,42,41,(*STA_IP_2_41)},
 419            {42,41,43,42,(*AP_IP_2_42)},
 420            {43,42,40,4,(*RETURN_2_43)},
 421          
 422            /*第三级菜单*/
 423            //TASK_SET下项目（TASK1-TASK1复用）
 424            {44,50,45,44,(*TASK_StartTime_SET_3_44)},
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 8   

 425            {45,44,46,45,(*TASK_EndTime_SET_3_45)},
 426            {46,45,47,46,(*TASK_OverTime_SET_3_46)},
 427            {47,46,48,47,(*TASK_OverTime_MODE_SET_3_47)},
 428            {48,47,49,48,(*TASK_OnTime_SET_3_48)},
 429            {49,48,50,49,(*TASK_OffTime_SET_3_49)},
 430            {50,49,44,50,(*RETURN_3_50)},
 431            
 432            //补充菜单条目
 433            {51,4,5,51,(*SYSTEM_RESET_1_51)},
 434            
 435          };
 436          
 437          /******************************************************************************/
 438          // LCD1602菜单显示函数
 439          // 函数名称：Lcd1602_Menu
 440          // 输入参数：无
 441          // 输出参数：无 
 442          // 函数功能：LCD1602显示菜单
 443          /******************************************************************************/
 444          void LCD1602_Menu_Update()
 445          {
 446   1        
 447   1        //编辑位的闪烁
 448   1        if(++Menu_Edit_Tips==4)
 449   1        {
 450   2          Menu_Edit_Tips=0;  //复位显示控制变量
 451   2          Menu_Edit_Show=~Menu_Edit_Show;  //切换显示状态
 452   2        }
 453   1        
 454   1        /*响应EC11状态并复位EC11状态*/
 455   1        /*并更新菜单索引号*/
 456   1        switch(EC11_State)  
 457   1        {
 458   2          case 1:  //EC11为逆时针旋转状态
 459   2            switch(Menu_Flag)
 460   2            {
 461   3              case 0:
 462   3                Menu_Index = table[Menu_Index].Left_Index;
 463   3                break;
 464   3              case 1:
 465   3                Menu_Index = table[Menu_Index].Left_Index;
 466   3                break;
 467   3              case 2:
 468   3                Menu_Index = table[Menu_Index].Left_Index;
 469   3                break;
 470   3              case 3:
 471   3                Menu_Index = table[Menu_Index].Left_Index;
 472   3                break;
 473   3              case 4:
 474   3                
 475   3                break;
 476   3              case 5:
 477   3                Menu_Index = table[Menu_Index].Left_Index;
 478   3                break;
 479   3            }
 480   2            
 481   2            EC11_State = 0; //复位EC11状态
 482   2            break;
 483   2          case 2:  //EC11为顺时针旋转状态
 484   2            switch(Menu_Flag)
 485   2            {
 486   3              case 0:
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 9   

 487   3                Menu_Index = table[Menu_Index].Right_Index;
 488   3                break;
 489   3              case 1:
 490   3                Menu_Index = table[Menu_Index].Right_Index;
 491   3                break;
 492   3              case 2:
 493   3                Menu_Index = table[Menu_Index].Right_Index;
 494   3                break;
 495   3              case 3:
 496   3                Menu_Index = table[Menu_Index].Right_Index;
 497   3                break;
 498   3              case 4:
 499   3                
 500   3                break;
 501   3              case 5:
 502   3                Menu_Index = table[Menu_Index].Right_Index;
 503   3                break;
 504   3            }
 505   2        
 506   2            
 507   2            EC11_State = 0; //复位EC11状态
 508   2            break;
 509   2          case 3:  //EC11为按键按下的状态
 510   2            
 511   2            //Menu_Flag确定当前的EC11的操作行为
 512   2            switch(Menu_Flag)
 513   2            {
 514   3              case 0:  //处于菜单条目切换状态，单击进入下一级菜单
 515   3                
 516   3                if(Menu_Index==19||Menu_Index==36||Menu_Index==43){
 517   4                  EA=0;  //编程前关闭总中断
 518   4                  EEPROM_Program_Sector_1();
 519   4                  EA=1;  //编程后开启总中断
 520   4                }
 521   3              
 522   3                Menu_Index = table[Menu_Index].Enter_Index;
 523   3                break;
 524   3              case 1:  //处于返回状态，单击退出菜单
 525   3                //通过索引号执行指定内容
 526   3                switch(Menu_Index)
 527   3                {
 528   4                  case 5: LCD1602_Show_State = 0;break;
 529   4                }
 530   3                break;
 531   3              
 532   3              case 2:  //处于TASK_CTRL状态，单击控制任务
 533   3                switch(Menu_Index)
 534   3                {
 535   4                  case 6:Task1=~Task1;break;
 536   4                  case 7:Task2=~Task2;break;
 537   4                  case 8:Task3=~Task3;break;
 538   4                  case 9:Task4=~Task4;break;
 539   4                  case 10:Task5=~Task5;break;
 540   4                  case 11:Task6=~Task6;break;
 541   4                }
 542   3                break;
 543   3              
 544   3              case 3:  //处于条目状态，单击进入编辑位
 545   3                Menu_Edit++; //切换编辑显示位
 546   3                break;
 547   3              case 4: //处于编辑状态，单击切换编辑位
 548   3                Menu_Edit++; //切换编辑显示位
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 10  

 549   3                break;
 550   3              case 5:
 551   3                if(Menu_Index==50){EEPROM_Program_Sector_1();}
 552   3                switch(TASK_SET_Number)
 553   3                {
 554   4                  case 1:
 555   4                    Menu_Index = 13;
 556   4                    break;
 557   4                  case 2:
 558   4                    Menu_Index = 14;
 559   4                    break;
 560   4                  case 3:
 561   4                    Menu_Index = 15;
 562   4                    break;
 563   4                  case 4:
 564   4                    Menu_Index = 16;
 565   4                    break;
 566   4                  case 5:
 567   4                    Menu_Index = 17;
 568   4                    break;
 569   4                  case 6:
 570   4                    Menu_Index = 18;
 571   4                    break;
 572   4                }
 573   3              
 574   3                break;
 575   3            }
 576   2            
 577   2            EC11_State = 0; //复位EC11状态
 578   2            break;
 579   2        }
 580   1        
 581   1        /*更新对应索引号下的函数指针*/
 582   1        current_operation_index = table[Menu_Index].current_operation;
 583   1        (*current_operation_index)();////设定显示状态以及对参数进行操作
 584   1        
 585   1        /*显示当前菜单页面*/
 586   1        LCD1602_Show_Current_Page();
 587   1      }
 588          
 589          /******************************************************************************/
 590          // LCD1602菜单页面显示函数
 591          // 函数名称：LCD1602_Show_Current_Page()
 592          // 输入参数：无
 593          // 输出参数：无 
 594          // 函数功能：显示LCD1602菜单当前页面
 595          /******************************************************************************/
 596          void LCD1602_Show_Current_Page()
 597          {
 598   1        if(((Menu_Index>=0)&&(Menu_Index<=19))||((Menu_Index>=36)&&Menu_Index<=51)){
 599   2          Lcd1602_Show_String(1,1,LCD1602_First_Line);
 600   2          Lcd1602_Show_String(2,1,LCD1602_Second_Line);
 601   2        }else if((Menu_Index>=20)&&(Menu_Index<=35)){
 602   2          Lcd1602_Show_String(1,1,LCD1602_First_Line);
 603   2          Lcd1602_Show_String(1,16,LCD1602_First_Line_16);
 604   2          Lcd1602_Show_String(2,1,LCD1602_Second_Line);
 605   2        }
 606   1        
 607   1      }
 608          
 609          
 610          
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 11  

 611          
 612          
 613          /******************************************************************************/
 614          // LCD1602菜单操作函数
 615          // 函数名称：
 616          // 输入参数：无
 617          // 输出参数：无 
 618          // 函数功能：执行LCD1602菜单操作函数
 619          /******************************************************************************/
 620          /*第一级菜单*/
 621          void TASKS_CTRL_1_0()
 622          {
 623   1        Menu_Flag = 0;
 624   1        LCD1602_First_Line  = Menu_TASKS_CTRL_Select;
 625   1        LCD1602_Second_Line = Menu_TASKS_SET;
 626   1      }
 627          void TASKS_SET_1_1()
 628          {
 629   1        Menu_Flag = 0;
 630   1        LCD1602_First_Line  = Menu_TASKS_CTRL;
 631   1        LCD1602_Second_Line = Menu_TASKS_SET_Select;
 632   1      }
 633          void PORT_SET_1_2()
 634          {
 635   1        Menu_Flag = 0;
 636   1        LCD1602_First_Line  = Menu_PORT_SET_Select;
 637   1        LCD1602_Second_Line = Menu_TIME_SET;
 638   1      }
 639          void TIME_SET_1_3()
 640          {
 641   1        Menu_Flag = 0;
 642   1        LCD1602_First_Line  = Menu_PORT_SET;
 643   1        LCD1602_Second_Line = Menu_TIME_SET_Select;
 644   1      }
 645          void WIFI_SET_1_4()
 646          {
 647   1        Menu_Flag = 0;
 648   1        LCD1602_First_Line  = Menu_WIFI_SET_Select;
 649   1        LCD1602_Second_Line = SYSTEM_RESET;
 650   1      }
 651          
 652          void SYSTEM_RESET_1_51()
 653          {
 654   1        //显示位超出复位0，切换为条目
 655   1        if((Menu_Edit==3)||(Menu_Edit==2)&&(isReset==0)){Menu_Edit=0;};
 656   1        
 657   1        //显示不同显示位时的状态
 658   1        switch(Menu_Edit)
 659   1        {
 660   2          case 0:   //条目状态
 661   2            
 662   2            Menu_Flag = 3;
 663   2          
 664   2            //复位菜单当前编辑值
 665   2            Menu_Edit_Value = 0;
 666   2          
 667   2            //显示当前页的所有项目
 668   2            LCD1602_First_Line = Menu_WIFI_SET;
 669   2            LCD1602_Second_Line = SYSTEM_RESET_Select;
 670   2            
 671   2            break;
 672   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 12  

 673   2          case 1:
 674   2            Menu_Flag = 4;
 675   2                
 676   2            //通过菜单编辑值来设定是否复位
 677   2            if(Menu_Edit_Value < 0){
 678   3              isReset = 1;
 679   3            }else if(Menu_Edit_Value > 0){
 680   3              isReset = 0;
 681   3            }
 682   2          
 683   2            //复位菜单当前编辑值
 684   2            Menu_Edit_Value = 0;
 685   2        
 686   2            //显示当前页的所有项目
 687   2            LCD1602_First_Line = SYSTEM_RESET_ASK;
 688   2            
 689   2            if(isReset==1){
 690   3              LCD1602_Second_Line = SYSTEM_RESET_YES;   
 691   3            }else{
 692   3              LCD1602_Second_Line = SYSTEM_RESET_NO;
 693   3            }
 694   2            
 695   2            break;
 696   2            
 697   2          case 2:
 698   2            Menu_Flag = 4;
 699   2          
 700   2            //复位菜单当前编辑值
 701   2            Menu_Edit_Value = 0;
 702   2        
 703   2            if(isReset==1){
 704   3              EA = 0;  //关闭总中断
 705   3              SYSTEM_DATA_RESET();
 706   3              EEPROM_Program_Sector_1();
 707   3              IAP_CONTR=0x60;//复位命令 
 708   3              EA = 1;
 709   3            }else{
 710   3              Menu_Edit = 0;  //切换回条目
 711   3            }
 712   2            
 713   2        }
 714   1        
 715   1      }
 716          
 717          void RETURN_1_5()
 718          {
 719   1        Menu_Flag = 1;
 720   1        
 721   1        LCD1602_First_Line  = RETURN_Select;
 722   1        LCD1602_Second_Line = Menu_Empty_Line;
 723   1      }
 724          
 725          
 726          /*第二级菜单*/
 727          //TASKS_CTRL_1_0下项目
 728          
 729          
 730          void TASK1_CTRL_2_6()
 731          {
 732   1        Menu_Flag = 2;
 733   1        
 734   1        if(Task1==1){
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 13  

 735   2          LCD1602_First_Line = Menu_TASK1_CTRL_Stop_Select;
 736   2        }else{
 737   2          LCD1602_First_Line = Menu_TASK1_CTRL_Run_Select;
 738   2        }
 739   1        
 740   1        if(Task2==1){
 741   2          LCD1602_Second_Line = Menu_TASK2_CTRL_Stop;
 742   2        }else{
 743   2          LCD1602_Second_Line = Menu_TASK2_CTRL_Run;
 744   2        }
 745   1      }
 746          void TASK2_CTRL_2_7()
 747          {
 748   1        Menu_Flag = 2;
 749   1        if(Task1==1){
 750   2          LCD1602_First_Line = Menu_TASK1_CTRL_Stop;
 751   2        }else{
 752   2          LCD1602_First_Line = Menu_TASK1_CTRL_Run;
 753   2        }
 754   1        
 755   1        if(Task2==1){
 756   2          LCD1602_Second_Line = Menu_TASK2_CTRL_Stop_Select;
 757   2        }else{
 758   2          LCD1602_Second_Line = Menu_TASK2_CTRL_Run_Select;
 759   2        }
 760   1      }
 761          void TASK3_CTRL_2_8()
 762          {
 763   1        Menu_Flag = 2;
 764   1        if(Task3==1){
 765   2          LCD1602_First_Line = Menu_TASK3_CTRL_Stop_Select;
 766   2        }else{
 767   2          LCD1602_First_Line = Menu_TASK3_CTRL_Run_Select;
 768   2        }
 769   1        
 770   1        if(Task4==1){
 771   2          LCD1602_Second_Line = Menu_TASK4_CTRL_Stop;
 772   2        }else{
 773   2          LCD1602_Second_Line = Menu_TASK4_CTRL_Run;
 774   2        }
 775   1      }
 776          void TASK4_CTRL_2_9()
 777          {
 778   1        Menu_Flag = 2;
 779   1        if(Task3==1){
 780   2          LCD1602_First_Line = Menu_TASK3_CTRL_Stop;
 781   2        }else{
 782   2          LCD1602_First_Line = Menu_TASK3_CTRL_Run;
 783   2        }
 784   1        
 785   1        if(Task4==1){
 786   2          LCD1602_Second_Line = Menu_TASK4_CTRL_Stop_Select;
 787   2        }else{
 788   2          LCD1602_Second_Line = Menu_TASK4_CTRL_Run_Select;
 789   2        }
 790   1      }
 791          void TASK5_CTRL_2_10()
 792          {
 793   1        Menu_Flag = 2;
 794   1        if(Task5==1){
 795   2          LCD1602_First_Line = Menu_TASK5_CTRL_Stop_Select;
 796   2        }else{
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 14  

 797   2          LCD1602_First_Line = Menu_TASK5_CTRL_Run_Select;
 798   2        }
 799   1        
 800   1        if(Task6==1){
 801   2          LCD1602_Second_Line = Menu_TASK6_CTRL_Stop;
 802   2        }else{
 803   2          LCD1602_Second_Line = Menu_TASK6_CTRL_Run;
 804   2        }
 805   1      }
 806          void TASK6_CTRL_2_11()
 807          {
 808   1        Menu_Flag = 2;
 809   1        if(Task5==1){
 810   2          LCD1602_First_Line = Menu_TASK5_CTRL_Stop;
 811   2        }else{
 812   2          LCD1602_First_Line = Menu_TASK5_CTRL_Run;
 813   2        }
 814   1        
 815   1        if(Task6==1){
 816   2          LCD1602_Second_Line = Menu_TASK6_CTRL_Stop_Select;
 817   2        }else{
 818   2          LCD1602_Second_Line = Menu_TASK6_CTRL_Run_Select;
 819   2        }
 820   1      }
 821          void RETURN_2_12()
 822          {
 823   1        Menu_Flag = 0;
 824   1        LCD1602_First_Line = RETURN_Select;
 825   1        LCD1602_Second_Line = Menu_Empty_Line;
 826   1      }
 827          
 828          
 829          /*第二级菜单*/
 830          //TASKS_SET_1_1下项目
 831          
 832          void TASK1_SET_2_13()
 833          {
 834   1        Menu_Flag = 0;
 835   1        
 836   1        TASK_SET_Number=1;
 837   1        
 838   1        LCD1602_First_Line = Menu_TASK1_SET_Select;
 839   1        LCD1602_Second_Line = Menu_TASK2_SET;
 840   1      }
 841          void TASK2_SET_2_14()
 842          {
 843   1        Menu_Flag = 0;
 844   1        
 845   1        TASK_SET_Number=2;
 846   1        
 847   1        LCD1602_First_Line = Menu_TASK1_SET;
 848   1        LCD1602_Second_Line = Menu_TASK2_SET_Select;
 849   1      }
 850          void TASK3_SET_2_15()
 851          {
 852   1        Menu_Flag = 0;
 853   1        
 854   1        TASK_SET_Number=3;
 855   1        
 856   1        LCD1602_First_Line = Menu_TASK3_SET_Select;
 857   1        LCD1602_Second_Line = Menu_TASK4_SET;
 858   1      }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 15  

 859          void TASK4_SET_2_16()
 860          {
 861   1        Menu_Flag = 0;
 862   1        
 863   1        TASK_SET_Number=4;
 864   1        
 865   1        LCD1602_First_Line = Menu_TASK3_SET;
 866   1        LCD1602_Second_Line = Menu_TASK4_SET_Select;
 867   1      }
 868          void TASK5_SET_2_17()
 869          {
 870   1        Menu_Flag = 0;
 871   1        
 872   1        TASK_SET_Number=5;
 873   1        
 874   1        LCD1602_First_Line = Menu_TASK5_SET_Select;
 875   1        LCD1602_Second_Line = Menu_TASK6_SET;
 876   1      }
 877          void TASK6_SET_2_18()
 878          {
 879   1        Menu_Flag = 0;
 880   1        
 881   1        TASK_SET_Number=6;
 882   1        
 883   1        LCD1602_First_Line = Menu_TASK5_SET;
 884   1        LCD1602_Second_Line = Menu_TASK6_SET_Select;
 885   1      }
 886          void RETURN_2_19()
 887          {
 888   1        Menu_Flag = 0;
 889   1        
 890   1        TASK_SET_Number=0;
 891   1        
 892   1        LCD1602_First_Line = RETURN_Select;
 893   1        LCD1602_Second_Line = Menu_Empty_Line;
 894   1      }
 895          
 896          /*第二级菜单*/
 897          //PORT_SET_1_2下项目
 898          
 899          void PIN10_SET_2_20()
 900          {
 901   1        //设置任务号显示数据
 902   1        Pin10_Number[0]=Pin10_Task_Number+'0'; 
 903   1        
 904   1        //显示位超出复位0，切换为条目
 905   1        if(Menu_Edit==4){Menu_Edit=0;};
 906   1        
 907   1        //显示不同显示位时的状态
 908   1        switch(Menu_Edit)
 909   1        {
 910   2          case 0:   //条目状态
 911   2            
 912   2            Menu_Flag = 3;
 913   2          
 914   2            //复位菜单当前编辑值
 915   2            Menu_Edit_Value = 0;
 916   2          
 917   2            //显示当前页的所有项目
 918   2          
 919   2            //显示第一行端口输入输出状态
 920   2            if(Pin10_Mode==0){
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 16  

 921   3              LCD1602_First_Line = PIN_SET_Input;
 922   3            }else{
 923   3              LCD1602_First_Line = PIN_SET_Output;
 924   3            }
 925   2            
 926   2            //显示第一行16位端口匹配任务号
 927   2            LCD1602_First_Line_16 = Pin10_Number;
 928   2      
 929   2            //显示第二行端口触发模式
 930   2            if(Pin10_Trigger_Mode == 0){
 931   3              LCD1602_Second_Line = Trigger_Mode_0;
 932   3            }else{
 933   3              LCD1602_Second_Line = Trigger_Mode_1;
 934   3            }
 935   2            
 936   2            break;
 937   2            
 938   2          case 1:  //第一个编辑位，箭头
 939   2            
 940   2            Menu_Flag = 4;
 941   2          
 942   2          
 943   2            //通过菜单编辑值来设定箭头,(输入输出模式)
 944   2            if(Menu_Edit_Value < 0){
 945   3              Pin10_Mode = 1;
 946   3            }else if(Menu_Edit_Value > 0){
 947   3              Pin10_Mode = 0;
 948   3            }
 949   2            
 950   2            //复位菜单当前编辑值
 951   2            Menu_Edit_Value = 0;
 952   2          
 953   2            //当前选中条目的闪烁
 954   2            //箭头的闪烁
 955   2            if(Menu_Edit_Show){  //如果显示箭头
 956   3              
 957   3              if(Pin10_Mode==0){
 958   4                LCD1602_First_Line = PIN_SET_Input;
 959   4              }else{
 960   4                LCD1602_First_Line = PIN_SET_Output;
 961   4              }
 962   3              
 963   3            }else{   //否则不显示箭头
 964   3              
 965   3                LCD1602_First_Line = PIN_SET_Empty;
 966   3      
 967   3            }
 968   2            
 969   2            //显示其他项目
 970   2            
 971   2            //显示第一行16位端口匹配任务号
 972   2            LCD1602_First_Line_16 = Pin10_Number;
 973   2            
 974   2            //显示第二行端口触发模式
 975   2            if(Pin10_Trigger_Mode == 0){
 976   3              LCD1602_Second_Line = Trigger_Mode_0;
 977   3            }else{
 978   3              LCD1602_Second_Line = Trigger_Mode_1;
 979   3            }
 980   2            break;
 981   2            
 982   2          case 2:  //第二个编辑位，任务号
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 17  

 983   2            
 984   2            Menu_Flag = 4;
 985   2          
 986   2            //修改任务号
 987   2            Pin10_Task_Number += Menu_Edit_Value;
 988   2            //复位菜单当前编辑值
 989   2            Menu_Edit_Value = 0;
 990   2          
 991   2            //设定任务号可以设置的范围
 992   2            if(Pin10_Task_Number<1){Pin10_Task_Number = 1;}
 993   2            else if(Pin10_Task_Number>6){Pin10_Task_Number = 6;}
 994   2          
 995   2            //当前选中条目的闪烁
 996   2            //任务号的闪烁
 997   2            if(Menu_Edit_Show){
 998   3              LCD1602_First_Line_16 = Pin10_Number;
 999   3            }else{
1000   3              LCD1602_First_Line_16 = Empty_Number;
1001   3            }
1002   2            
1003   2            //显示其他项目
1004   2            //显示第一行端口输入输出状态
1005   2            if(Pin10_Mode==0){
1006   3              LCD1602_First_Line = PIN_SET_Input;
1007   3            }else{
1008   3              LCD1602_First_Line = PIN_SET_Output;
1009   3            }
1010   2            
1011   2            //显示第二行端口触发模式
1012   2            if(Pin10_Trigger_Mode == 0){
1013   3              LCD1602_Second_Line = Trigger_Mode_0;
1014   3            }else{
1015   3              LCD1602_Second_Line = Trigger_Mode_1;
1016   3            }
1017   2                  
1018   2            break;
1019   2            
1020   2          case 3:   //第三个编辑位，端口的触发模式
1021   2            
1022   2            Menu_Flag = 4;
1023   2          
1024   2          
1025   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
1026   2            if(Menu_Edit_Value < 0){
1027   3              Pin10_Trigger_Mode = 0;
1028   3            }else if(Menu_Edit_Value > 0){
1029   3              Pin10_Trigger_Mode = 1;
1030   3            }
1031   2            
1032   2            //复位菜单当前编辑值
1033   2            Menu_Edit_Value = 0;
1034   2            
1035   2            //当前选中条目的闪烁
1036   2            //触发模式的闪烁
1037   2            if(Menu_Edit_Show){
1038   3              if(Pin10_Trigger_Mode == 0){
1039   4                LCD1602_Second_Line = Trigger_Mode_0;
1040   4              }else{
1041   4                LCD1602_Second_Line = Trigger_Mode_1;
1042   4              }
1043   3            }else{
1044   3              LCD1602_Second_Line = Trigger_Mode_Empty;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 18  

1045   3            }
1046   2            
1047   2            //显示其他项目
1048   2            //显示第一行端口输入输出状态
1049   2            if(Pin10_Mode==0){
1050   3              LCD1602_First_Line = PIN_SET_Input;
1051   3            }else{
1052   3              LCD1602_First_Line = PIN_SET_Output;
1053   3            }
1054   2            
1055   2            //显示第一行16位端口匹配任务号
1056   2            LCD1602_First_Line_16 = Pin10_Number;
1057   2            
1058   2            
1059   2            break;
1060   2            
1061   2        }
1062   1        //设置端口号显示数据
1063   1        LCD1602_First_Line[5]= '1';
1064   1        LCD1602_First_Line[6]= '0';
1065   1      }
1066          
1067          void PIN11_SET_2_21()
1068          {
1069   1        //设置任务号显示数据
1070   1        Pin11_Number[0]=Pin11_Task_Number+'0'; 
1071   1        
1072   1        //显示位超出复位0，切换为条目
1073   1        if(Menu_Edit==4){Menu_Edit=0;};
1074   1        
1075   1        //显示不同显示位时的状态
1076   1        switch(Menu_Edit)
1077   1        {
1078   2          case 0:   //条目状态
1079   2            
1080   2            Menu_Flag = 3;
1081   2          
1082   2            //复位菜单当前编辑值
1083   2            Menu_Edit_Value = 0;
1084   2          
1085   2            //显示当前页的所有项目
1086   2          
1087   2            //显示第一行端口输入输出状态
1088   2            if(Pin11_Mode==0){
1089   3              LCD1602_First_Line = PIN_SET_Input;
1090   3            }else{
1091   3              LCD1602_First_Line = PIN_SET_Output;
1092   3            }
1093   2            
1094   2            //显示第一行16位端口匹配任务号
1095   2            LCD1602_First_Line_16 = Pin11_Number;
1096   2      
1097   2            //显示第二行端口触发模式
1098   2            if(Pin11_Trigger_Mode == 0){
1099   3              LCD1602_Second_Line = Trigger_Mode_0;
1100   3            }else{
1101   3              LCD1602_Second_Line = Trigger_Mode_1;
1102   3            }
1103   2            
1104   2            break;
1105   2            
1106   2          case 1:  //第一个编辑位，箭头
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 19  

1107   2            
1108   2            Menu_Flag = 4;
1109   2          
1110   2          
1111   2            //通过菜单编辑值来设定箭头,(输入输出模式)
1112   2            if(Menu_Edit_Value < 0){
1113   3              Pin11_Mode = 1;
1114   3            }else if(Menu_Edit_Value > 0){
1115   3              Pin11_Mode = 0;
1116   3            }
1117   2            
1118   2            //复位菜单当前编辑值
1119   2            Menu_Edit_Value = 0;
1120   2          
1121   2            //当前选中条目的闪烁
1122   2            //箭头的闪烁
1123   2            if(Menu_Edit_Show){  //如果显示箭头
1124   3              
1125   3              if(Pin11_Mode==0){
1126   4                LCD1602_First_Line = PIN_SET_Input;
1127   4              }else{
1128   4                LCD1602_First_Line = PIN_SET_Output;
1129   4              }
1130   3              
1131   3            }else{   //否则不显示箭头
1132   3              
1133   3                LCD1602_First_Line = PIN_SET_Empty;
1134   3      
1135   3            }
1136   2            
1137   2            //显示其他项目
1138   2            
1139   2            //显示第一行16位端口匹配任务号
1140   2            LCD1602_First_Line_16 = Pin11_Number;
1141   2            
1142   2            //显示第二行端口触发模式
1143   2            if(Pin11_Trigger_Mode == 0){
1144   3              LCD1602_Second_Line = Trigger_Mode_0;
1145   3            }else{
1146   3              LCD1602_Second_Line = Trigger_Mode_1;
1147   3            }
1148   2            break;
1149   2            
1150   2          case 2:  //第二个编辑位，任务号
1151   2            
1152   2            Menu_Flag = 4;
1153   2          
1154   2            //修改任务号
1155   2            Pin11_Task_Number += Menu_Edit_Value;
1156   2            //复位菜单当前编辑值
1157   2            Menu_Edit_Value = 0;
1158   2          
1159   2            //设定任务号可以设置的范围
1160   2            if(Pin11_Task_Number<1){Pin11_Task_Number = 1;}
1161   2            else if(Pin11_Task_Number>6){Pin11_Task_Number = 6;}
1162   2          
1163   2            //当前选中条目的闪烁
1164   2            //任务号的闪烁
1165   2            if(Menu_Edit_Show){
1166   3              LCD1602_First_Line_16 = Pin11_Number;
1167   3            }else{
1168   3              LCD1602_First_Line_16 = Empty_Number;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 20  

1169   3            }
1170   2            
1171   2            //显示其他项目
1172   2            //显示第一行端口输入输出状态
1173   2            if(Pin11_Mode==0){
1174   3              LCD1602_First_Line = PIN_SET_Input;
1175   3            }else{
1176   3              LCD1602_First_Line = PIN_SET_Output;
1177   3            }
1178   2            
1179   2            //显示第二行端口触发模式
1180   2            if(Pin11_Trigger_Mode == 0){
1181   3              LCD1602_Second_Line = Trigger_Mode_0;
1182   3            }else{
1183   3              LCD1602_Second_Line = Trigger_Mode_1;
1184   3            }
1185   2                  
1186   2            break;
1187   2            
1188   2          case 3:   //第三个编辑位，端口的触发模式
1189   2            
1190   2            Menu_Flag = 4;
1191   2          
1192   2          
1193   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
1194   2            if(Menu_Edit_Value < 0){
1195   3              Pin11_Trigger_Mode = 0;
1196   3            }else if(Menu_Edit_Value > 0){
1197   3              Pin11_Trigger_Mode = 1;
1198   3            }
1199   2            
1200   2            //复位菜单当前编辑值
1201   2            Menu_Edit_Value = 0;
1202   2            
1203   2            //当前选中条目的闪烁
1204   2            //触发模式的闪烁
1205   2            if(Menu_Edit_Show){
1206   3              if(Pin11_Trigger_Mode == 0){
1207   4                LCD1602_Second_Line = Trigger_Mode_0;
1208   4              }else{
1209   4                LCD1602_Second_Line = Trigger_Mode_1;
1210   4              }
1211   3            }else{
1212   3              LCD1602_Second_Line = Trigger_Mode_Empty;
1213   3            }
1214   2            
1215   2            //显示其他项目
1216   2            //显示第一行端口输入输出状态
1217   2            if(Pin11_Mode==0){
1218   3              LCD1602_First_Line = PIN_SET_Input;
1219   3            }else{
1220   3              LCD1602_First_Line = PIN_SET_Output;
1221   3            }
1222   2            
1223   2            //显示第一行16位端口匹配任务号
1224   2            LCD1602_First_Line_16 = Pin11_Number;
1225   2            
1226   2            break;
1227   2            
1228   2        }
1229   1        
1230   1        //设置端口号显示数据
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 21  

1231   1        LCD1602_First_Line[5]= '1';
1232   1        LCD1602_First_Line[6]= '1';
1233   1        
1234   1      }
1235          
1236          void PIN12_SET_2_22()
1237          {
1238   1        //设置任务号显示数据
1239   1        Pin12_Number[0]=Pin12_Task_Number+'0'; 
1240   1        
1241   1        //显示位超出复位0，切换为条目
1242   1        if(Menu_Edit==4){Menu_Edit=0;};
1243   1        
1244   1        //显示不同显示位时的状态
1245   1        switch(Menu_Edit)
1246   1        {
1247   2          case 0:   //条目状态
1248   2            
1249   2            Menu_Flag = 3;
1250   2          
1251   2            //复位菜单当前编辑值
1252   2            Menu_Edit_Value = 0;
1253   2          
1254   2            //显示当前页的所有项目
1255   2          
1256   2            //显示第一行端口输入输出状态
1257   2            if(Pin12_Mode==0){
1258   3              LCD1602_First_Line = PIN_SET_Input;
1259   3            }else{
1260   3              LCD1602_First_Line = PIN_SET_Output;
1261   3            }
1262   2            
1263   2            //显示第一行16位端口匹配任务号
1264   2            LCD1602_First_Line_16 = Pin12_Number;
1265   2      
1266   2            //显示第二行端口触发模式
1267   2            if(Pin12_Trigger_Mode == 0){
1268   3              LCD1602_Second_Line = Trigger_Mode_0;
1269   3            }else{
1270   3              LCD1602_Second_Line = Trigger_Mode_1;
1271   3            }
1272   2            
1273   2            break;
1274   2            
1275   2          case 1:  //第一个编辑位，箭头
1276   2            
1277   2            Menu_Flag = 4;
1278   2          
1279   2          
1280   2            //通过菜单编辑值来设定箭头,(输入输出模式)
1281   2            if(Menu_Edit_Value < 0){
1282   3              Pin12_Mode = 1;
1283   3            }else if(Menu_Edit_Value > 0){
1284   3              Pin12_Mode = 0;
1285   3            }
1286   2            
1287   2            //复位菜单当前编辑值
1288   2            Menu_Edit_Value = 0;
1289   2          
1290   2            //当前选中条目的闪烁
1291   2            //箭头的闪烁
1292   2            if(Menu_Edit_Show){  //如果显示箭头
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 22  

1293   3              
1294   3              if(Pin12_Mode==0){
1295   4                LCD1602_First_Line = PIN_SET_Input;
1296   4              }else{
1297   4                LCD1602_First_Line = PIN_SET_Output;
1298   4              }
1299   3              
1300   3            }else{   //否则不显示箭头
1301   3              
1302   3                LCD1602_First_Line = PIN_SET_Empty;
1303   3      
1304   3            }
1305   2            
1306   2            //显示其他项目
1307   2            
1308   2            //显示第一行16位端口匹配任务号
1309   2            LCD1602_First_Line_16 = Pin12_Number;
1310   2            
1311   2            //显示第二行端口触发模式
1312   2            if(Pin12_Trigger_Mode == 0){
1313   3              LCD1602_Second_Line = Trigger_Mode_0;
1314   3            }else{
1315   3              LCD1602_Second_Line = Trigger_Mode_1;
1316   3            }
1317   2            break;
1318   2            
1319   2          case 2:  //第二个编辑位，任务号
1320   2            
1321   2            Menu_Flag = 4;
1322   2          
1323   2            //修改任务号
1324   2            Pin12_Task_Number += Menu_Edit_Value;
1325   2            //复位菜单当前编辑值
1326   2            Menu_Edit_Value = 0;
1327   2          
1328   2            //设定任务号可以设置的范围
1329   2            if(Pin12_Task_Number<1){Pin12_Task_Number = 1;}
1330   2            else if(Pin12_Task_Number>6){Pin12_Task_Number = 6;}
1331   2          
1332   2            //当前选中条目的闪烁
1333   2            //任务号的闪烁
1334   2            if(Menu_Edit_Show){
1335   3              LCD1602_First_Line_16 = Pin12_Number;
1336   3            }else{
1337   3              LCD1602_First_Line_16 = Empty_Number;
1338   3            }
1339   2            
1340   2            //显示其他项目
1341   2            //显示第一行端口输入输出状态
1342   2            if(Pin12_Mode==0){
1343   3              LCD1602_First_Line = PIN_SET_Input;
1344   3            }else{
1345   3              LCD1602_First_Line = PIN_SET_Output;
1346   3            }
1347   2            
1348   2            //显示第二行端口触发模式
1349   2            if(Pin12_Trigger_Mode == 0){
1350   3              LCD1602_Second_Line = Trigger_Mode_0;
1351   3            }else{
1352   3              LCD1602_Second_Line = Trigger_Mode_1;
1353   3            }
1354   2                  
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 23  

1355   2            break;
1356   2            
1357   2          case 3:   //第三个编辑位，端口的触发模式
1358   2            
1359   2            Menu_Flag = 4;
1360   2          
1361   2          
1362   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
1363   2            if(Menu_Edit_Value < 0){
1364   3              Pin12_Trigger_Mode = 0;
1365   3            }else if(Menu_Edit_Value > 0){
1366   3              Pin12_Trigger_Mode = 1;
1367   3            }
1368   2            
1369   2            //复位菜单当前编辑值
1370   2            Menu_Edit_Value = 0;
1371   2            
1372   2            //当前选中条目的闪烁
1373   2            //触发模式的闪烁
1374   2            if(Menu_Edit_Show){
1375   3              if(Pin12_Trigger_Mode == 0){
1376   4                LCD1602_Second_Line = Trigger_Mode_0;
1377   4              }else{
1378   4                LCD1602_Second_Line = Trigger_Mode_1;
1379   4              }
1380   3            }else{
1381   3              LCD1602_Second_Line = Trigger_Mode_Empty;
1382   3            }
1383   2            
1384   2            //显示其他项目
1385   2            //显示第一行端口输入输出状态
1386   2            if(Pin12_Mode==0){
1387   3              LCD1602_First_Line = PIN_SET_Input;
1388   3            }else{
1389   3              LCD1602_First_Line = PIN_SET_Output;
1390   3            }
1391   2            
1392   2            //显示第一行16位端口匹配任务号
1393   2            LCD1602_First_Line_16 = Pin12_Number;
1394   2            
1395   2            break;
1396   2            
1397   2        }
1398   1        
1399   1        //设置端口号显示数据
1400   1        LCD1602_First_Line[5]= '1';
1401   1        LCD1602_First_Line[6]= '2';
1402   1        
1403   1      }
1404          
1405          void PIN13_SET_2_23()
1406          {
1407   1        //设置任务号显示数据
1408   1        Pin13_Number[0]=Pin13_Task_Number+'0'; 
1409   1        
1410   1        //显示位超出复位0，切换为条目
1411   1        if(Menu_Edit==4){Menu_Edit=0;};
1412   1        
1413   1        //显示不同显示位时的状态
1414   1        switch(Menu_Edit)
1415   1        {
1416   2          case 0:   //条目状态
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 24  

1417   2            
1418   2            Menu_Flag = 3;
1419   2          
1420   2            //复位菜单当前编辑值
1421   2            Menu_Edit_Value = 0;
1422   2          
1423   2            //显示当前页的所有项目
1424   2          
1425   2            //显示第一行端口输入输出状态
1426   2            if(Pin13_Mode==0){
1427   3              LCD1602_First_Line = PIN_SET_Input;
1428   3            }else{
1429   3              LCD1602_First_Line = PIN_SET_Output;
1430   3            }
1431   2            
1432   2            //显示第一行16位端口匹配任务号
1433   2            LCD1602_First_Line_16 = Pin13_Number;
1434   2      
1435   2            //显示第二行端口触发模式
1436   2            if(Pin13_Trigger_Mode == 0){
1437   3              LCD1602_Second_Line = Trigger_Mode_0;
1438   3            }else{
1439   3              LCD1602_Second_Line = Trigger_Mode_1;
1440   3            }
1441   2            
1442   2            break;
1443   2            
1444   2          case 1:  //第一个编辑位，箭头
1445   2            
1446   2            Menu_Flag = 4;
1447   2          
1448   2          
1449   2            //通过菜单编辑值来设定箭头,(输入输出模式)
1450   2            if(Menu_Edit_Value < 0){
1451   3              Pin13_Mode = 1;
1452   3            }else if(Menu_Edit_Value > 0){
1453   3              Pin13_Mode = 0;
1454   3            }
1455   2            
1456   2            //复位菜单当前编辑值
1457   2            Menu_Edit_Value = 0;
1458   2          
1459   2            //当前选中条目的闪烁
1460   2            //箭头的闪烁
1461   2            if(Menu_Edit_Show){  //如果显示箭头
1462   3              
1463   3              if(Pin13_Mode==0){
1464   4                LCD1602_First_Line = PIN_SET_Input;
1465   4              }else{
1466   4                LCD1602_First_Line = PIN_SET_Output;
1467   4              }
1468   3              
1469   3            }else{   //否则不显示箭头
1470   3              
1471   3                LCD1602_First_Line = PIN_SET_Empty;
1472   3      
1473   3            }
1474   2            
1475   2            //显示其他项目
1476   2            
1477   2            //显示第一行16位端口匹配任务号
1478   2            LCD1602_First_Line_16 = Pin13_Number;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 25  

1479   2            
1480   2            //显示第二行端口触发模式
1481   2            if(Pin13_Trigger_Mode == 0){
1482   3              LCD1602_Second_Line = Trigger_Mode_0;
1483   3            }else{
1484   3              LCD1602_Second_Line = Trigger_Mode_1;
1485   3            }
1486   2            break;
1487   2            
1488   2          case 2:  //第二个编辑位，任务号
1489   2            
1490   2            Menu_Flag = 4;
1491   2          
1492   2            //修改任务号
1493   2            Pin13_Task_Number += Menu_Edit_Value;
1494   2            //复位菜单当前编辑值
1495   2            Menu_Edit_Value = 0;
1496   2          
1497   2            //设定任务号可以设置的范围
1498   2            if(Pin13_Task_Number<1){Pin13_Task_Number = 1;}
1499   2            else if(Pin13_Task_Number>6){Pin13_Task_Number = 6;}
1500   2          
1501   2            //当前选中条目的闪烁
1502   2            //任务号的闪烁
1503   2            if(Menu_Edit_Show){
1504   3              LCD1602_First_Line_16 = Pin13_Number;
1505   3            }else{
1506   3              LCD1602_First_Line_16 = Empty_Number;
1507   3            }
1508   2            
1509   2            //显示其他项目
1510   2            //显示第一行端口输入输出状态
1511   2            if(Pin13_Mode==0){
1512   3              LCD1602_First_Line = PIN_SET_Input;
1513   3            }else{
1514   3              LCD1602_First_Line = PIN_SET_Output;
1515   3            }
1516   2            
1517   2            //显示第二行端口触发模式
1518   2            if(Pin13_Trigger_Mode == 0){
1519   3              LCD1602_Second_Line = Trigger_Mode_0;
1520   3            }else{
1521   3              LCD1602_Second_Line = Trigger_Mode_1;
1522   3            }
1523   2                  
1524   2            break;
1525   2            
1526   2          case 3:   //第三个编辑位，端口的触发模式
1527   2            
1528   2            Menu_Flag = 4;
1529   2          
1530   2          
1531   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
1532   2            if(Menu_Edit_Value < 0){
1533   3              Pin13_Trigger_Mode = 0;
1534   3            }else if(Menu_Edit_Value > 0){
1535   3              Pin13_Trigger_Mode = 1;
1536   3            }
1537   2            
1538   2            //复位菜单当前编辑值
1539   2            Menu_Edit_Value = 0;
1540   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 26  

1541   2            //当前选中条目的闪烁
1542   2            //触发模式的闪烁
1543   2            if(Menu_Edit_Show){
1544   3              if(Pin13_Trigger_Mode == 0){
1545   4                LCD1602_Second_Line = Trigger_Mode_0;
1546   4              }else{
1547   4                LCD1602_Second_Line = Trigger_Mode_1;
1548   4              }
1549   3            }else{
1550   3              LCD1602_Second_Line = Trigger_Mode_Empty;
1551   3            }
1552   2            
1553   2            //显示其他项目
1554   2            //显示第一行端口输入输出状态
1555   2            if(Pin13_Mode==0){
1556   3              LCD1602_First_Line = PIN_SET_Input;
1557   3            }else{
1558   3              LCD1602_First_Line = PIN_SET_Output;
1559   3            }
1560   2            
1561   2            //显示第一行16位端口匹配任务号
1562   2            LCD1602_First_Line_16 = Pin13_Number;
1563   2            
1564   2            break;
1565   2            
1566   2        }
1567   1        
1568   1        //设置端口号显示数据
1569   1        LCD1602_First_Line[5]= '1';
1570   1        LCD1602_First_Line[6]= '3';
1571   1        
1572   1      }
1573          
1574          void PIN14_SET_2_24()
1575          {
1576   1        //设置任务号显示数据
1577   1        Pin14_Number[0]=Pin14_Task_Number+'0'; 
1578   1        
1579   1        //显示位超出复位0，切换为条目
1580   1        if(Menu_Edit==4){Menu_Edit=0;};
1581   1        
1582   1        //显示不同显示位时的状态
1583   1        switch(Menu_Edit)
1584   1        {
1585   2          case 0:   //条目状态
1586   2            
1587   2            Menu_Flag = 3;
1588   2          
1589   2            //复位菜单当前编辑值
1590   2            Menu_Edit_Value = 0;
1591   2          
1592   2            //显示当前页的所有项目
1593   2          
1594   2            //显示第一行端口输入输出状态
1595   2            if(Pin14_Mode==0){
1596   3              LCD1602_First_Line = PIN_SET_Input;
1597   3            }else{
1598   3              LCD1602_First_Line = PIN_SET_Output;
1599   3            }
1600   2            
1601   2            //显示第一行16位端口匹配任务号
1602   2            LCD1602_First_Line_16 = Pin14_Number;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 27  

1603   2      
1604   2            //显示第二行端口触发模式
1605   2            if(Pin14_Trigger_Mode == 0){
1606   3              LCD1602_Second_Line = Trigger_Mode_0;
1607   3            }else{
1608   3              LCD1602_Second_Line = Trigger_Mode_1;
1609   3            }
1610   2            
1611   2            break;
1612   2            
1613   2          case 1:  //第一个编辑位，箭头
1614   2            
1615   2            Menu_Flag = 4;
1616   2          
1617   2          
1618   2            //通过菜单编辑值来设定箭头,(输入输出模式)
1619   2            if(Menu_Edit_Value < 0){
1620   3              Pin14_Mode = 1;
1621   3            }else if(Menu_Edit_Value > 0){
1622   3              Pin14_Mode = 0;
1623   3            }
1624   2            
1625   2            //复位菜单当前编辑值
1626   2            Menu_Edit_Value = 0;
1627   2          
1628   2            //当前选中条目的闪烁
1629   2            //箭头的闪烁
1630   2            if(Menu_Edit_Show){  //如果显示箭头
1631   3              
1632   3              if(Pin14_Mode==0){
1633   4                LCD1602_First_Line = PIN_SET_Input;
1634   4              }else{
1635   4                LCD1602_First_Line = PIN_SET_Output;
1636   4              }
1637   3              
1638   3            }else{   //否则不显示箭头
1639   3              
1640   3                LCD1602_First_Line = PIN_SET_Empty;
1641   3      
1642   3            }
1643   2            
1644   2            //显示其他项目
1645   2            
1646   2            //显示第一行16位端口匹配任务号
1647   2            LCD1602_First_Line_16 = Pin14_Number;
1648   2            
1649   2            //显示第二行端口触发模式
1650   2            if(Pin14_Trigger_Mode == 0){
1651   3              LCD1602_Second_Line = Trigger_Mode_0;
1652   3            }else{
1653   3              LCD1602_Second_Line = Trigger_Mode_1;
1654   3            }
1655   2            break;
1656   2            
1657   2          case 2:  //第二个编辑位，任务号
1658   2            
1659   2            Menu_Flag = 4;
1660   2          
1661   2            //修改任务号
1662   2            Pin14_Task_Number += Menu_Edit_Value;
1663   2            //复位菜单当前编辑值
1664   2            Menu_Edit_Value = 0;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 28  

1665   2          
1666   2            //设定任务号可以设置的范围
1667   2            if(Pin14_Task_Number<1){Pin14_Task_Number = 1;}
1668   2            else if(Pin14_Task_Number>6){Pin14_Task_Number = 6;}
1669   2          
1670   2            //当前选中条目的闪烁
1671   2            //任务号的闪烁
1672   2            if(Menu_Edit_Show){
1673   3              LCD1602_First_Line_16 = Pin14_Number;
1674   3            }else{
1675   3              LCD1602_First_Line_16 = Empty_Number;
1676   3            }
1677   2            
1678   2            //显示其他项目
1679   2            //显示第一行端口输入输出状态
1680   2            if(Pin14_Mode==0){
1681   3              LCD1602_First_Line = PIN_SET_Input;
1682   3            }else{
1683   3              LCD1602_First_Line = PIN_SET_Output;
1684   3            }
1685   2            
1686   2            //显示第二行端口触发模式
1687   2            if(Pin14_Trigger_Mode == 0){
1688   3              LCD1602_Second_Line = Trigger_Mode_0;
1689   3            }else{
1690   3              LCD1602_Second_Line = Trigger_Mode_1;
1691   3            }
1692   2                  
1693   2            break;
1694   2            
1695   2          case 3:   //第三个编辑位，端口的触发模式
1696   2            
1697   2            Menu_Flag = 4;
1698   2          
1699   2          
1700   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
1701   2            if(Menu_Edit_Value < 0){
1702   3              Pin14_Trigger_Mode = 0;
1703   3            }else if(Menu_Edit_Value > 0){
1704   3              Pin14_Trigger_Mode = 1;
1705   3            }
1706   2            
1707   2            //复位菜单当前编辑值
1708   2            Menu_Edit_Value = 0;
1709   2            
1710   2            //当前选中条目的闪烁
1711   2            //触发模式的闪烁
1712   2            if(Menu_Edit_Show){
1713   3              if(Pin14_Trigger_Mode == 0){
1714   4                LCD1602_Second_Line = Trigger_Mode_0;
1715   4              }else{
1716   4                LCD1602_Second_Line = Trigger_Mode_1;
1717   4              }
1718   3            }else{
1719   3              LCD1602_Second_Line = Trigger_Mode_Empty;
1720   3            }
1721   2            
1722   2            //显示其他项目
1723   2            //显示第一行端口输入输出状态
1724   2            if(Pin14_Mode==0){
1725   3              LCD1602_First_Line = PIN_SET_Input;
1726   3            }else{
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 29  

1727   3              LCD1602_First_Line = PIN_SET_Output;
1728   3            }
1729   2            
1730   2            //显示第一行16位端口匹配任务号
1731   2            LCD1602_First_Line_16 = Pin14_Number;
1732   2            
1733   2            break;
1734   2            
1735   2        }
1736   1        
1737   1        //设置端口号显示数据
1738   1        LCD1602_First_Line[5]= '1';
1739   1        LCD1602_First_Line[6]= '4';
1740   1        
1741   1      }
1742          
1743          void PIN15_SET_2_25()
1744          {
1745   1        //设置任务号显示数据
1746   1        Pin15_Number[0]=Pin15_Task_Number+'0'; 
1747   1        
1748   1        //显示位超出复位0，切换为条目
1749   1        if(Menu_Edit==4){Menu_Edit=0;};
1750   1        
1751   1        //显示不同显示位时的状态
1752   1        switch(Menu_Edit)
1753   1        {
1754   2          case 0:   //条目状态
1755   2            
1756   2            Menu_Flag = 3;
1757   2          
1758   2            //复位菜单当前编辑值
1759   2            Menu_Edit_Value = 0;
1760   2          
1761   2            //显示当前页的所有项目
1762   2          
1763   2            //显示第一行端口输入输出状态
1764   2            if(Pin15_Mode==0){
1765   3              LCD1602_First_Line = PIN_SET_Input;
1766   3            }else{
1767   3              LCD1602_First_Line = PIN_SET_Output;
1768   3            }
1769   2            
1770   2            //显示第一行16位端口匹配任务号
1771   2            LCD1602_First_Line_16 = Pin15_Number;
1772   2      
1773   2            //显示第二行端口触发模式
1774   2            if(Pin15_Trigger_Mode == 0){
1775   3              LCD1602_Second_Line = Trigger_Mode_0;
1776   3            }else{
1777   3              LCD1602_Second_Line = Trigger_Mode_1;
1778   3            }
1779   2            
1780   2            break;
1781   2            
1782   2          case 1:  //第一个编辑位，箭头
1783   2            
1784   2            Menu_Flag = 4;
1785   2          
1786   2          
1787   2            //通过菜单编辑值来设定箭头,(输入输出模式)
1788   2            if(Menu_Edit_Value < 0){
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 30  

1789   3              Pin15_Mode = 1;
1790   3            }else if(Menu_Edit_Value > 0){
1791   3              Pin15_Mode = 0;
1792   3            }
1793   2            
1794   2            //复位菜单当前编辑值
1795   2            Menu_Edit_Value = 0;
1796   2          
1797   2            //当前选中条目的闪烁
1798   2            //箭头的闪烁
1799   2            if(Menu_Edit_Show){  //如果显示箭头
1800   3              
1801   3              if(Pin15_Mode==0){
1802   4                LCD1602_First_Line = PIN_SET_Input;
1803   4              }else{
1804   4                LCD1602_First_Line = PIN_SET_Output;
1805   4              }
1806   3              
1807   3            }else{   //否则不显示箭头
1808   3              
1809   3                LCD1602_First_Line = PIN_SET_Empty;
1810   3      
1811   3            }
1812   2            
1813   2            //显示其他项目
1814   2            
1815   2            //显示第一行16位端口匹配任务号
1816   2            LCD1602_First_Line_16 = Pin15_Number;
1817   2            
1818   2            //显示第二行端口触发模式
1819   2            if(Pin15_Trigger_Mode == 0){
1820   3              LCD1602_Second_Line = Trigger_Mode_0;
1821   3            }else{
1822   3              LCD1602_Second_Line = Trigger_Mode_1;
1823   3            }
1824   2            break;
1825   2            
1826   2          case 2:  //第二个编辑位，任务号
1827   2            
1828   2            Menu_Flag = 4;
1829   2          
1830   2            //修改任务号
1831   2            Pin15_Task_Number += Menu_Edit_Value;
1832   2            //复位菜单当前编辑值
1833   2            Menu_Edit_Value = 0;
1834   2          
1835   2            //设定任务号可以设置的范围
1836   2            if(Pin15_Task_Number<1){Pin15_Task_Number = 1;}
1837   2            else if(Pin15_Task_Number>6){Pin15_Task_Number = 6;}
1838   2          
1839   2            //当前选中条目的闪烁
1840   2            //任务号的闪烁
1841   2            if(Menu_Edit_Show){
1842   3              LCD1602_First_Line_16 = Pin15_Number;
1843   3            }else{
1844   3              LCD1602_First_Line_16 = Empty_Number;
1845   3            }
1846   2            
1847   2            //显示其他项目
1848   2            //显示第一行端口输入输出状态
1849   2            if(Pin15_Mode==0){
1850   3              LCD1602_First_Line = PIN_SET_Input;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 31  

1851   3            }else{
1852   3              LCD1602_First_Line = PIN_SET_Output;
1853   3            }
1854   2            
1855   2            //显示第二行端口触发模式
1856   2            if(Pin15_Trigger_Mode == 0){
1857   3              LCD1602_Second_Line = Trigger_Mode_0;
1858   3            }else{
1859   3              LCD1602_Second_Line = Trigger_Mode_1;
1860   3            }
1861   2                  
1862   2            break;
1863   2            
1864   2          case 3:   //第三个编辑位，端口的触发模式
1865   2            
1866   2            Menu_Flag = 4;
1867   2          
1868   2          
1869   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
1870   2            if(Menu_Edit_Value < 0){
1871   3              Pin15_Trigger_Mode = 0;
1872   3            }else if(Menu_Edit_Value > 0){
1873   3              Pin15_Trigger_Mode = 1;
1874   3            }
1875   2            
1876   2            //复位菜单当前编辑值
1877   2            Menu_Edit_Value = 0;
1878   2            
1879   2            //当前选中条目的闪烁
1880   2            //触发模式的闪烁
1881   2            if(Menu_Edit_Show){
1882   3              if(Pin15_Trigger_Mode == 0){
1883   4                LCD1602_Second_Line = Trigger_Mode_0;
1884   4              }else{
1885   4                LCD1602_Second_Line = Trigger_Mode_1;
1886   4              }
1887   3            }else{
1888   3              LCD1602_Second_Line = Trigger_Mode_Empty;
1889   3            }
1890   2            
1891   2            //显示其他项目
1892   2            //显示第一行端口输入输出状态
1893   2            if(Pin15_Mode==0){
1894   3              LCD1602_First_Line = PIN_SET_Input;
1895   3            }else{
1896   3              LCD1602_First_Line = PIN_SET_Output;
1897   3            }
1898   2            
1899   2            //显示第一行16位端口匹配任务号
1900   2            LCD1602_First_Line_16 = Pin15_Number;
1901   2            
1902   2            break;
1903   2            
1904   2        }
1905   1        
1906   1        //设置端口号显示数据
1907   1        LCD1602_First_Line[5]= '1';
1908   1        LCD1602_First_Line[6]= '5';
1909   1        
1910   1      }
1911          
1912          void PIN16_SET_2_26()
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 32  

1913          {
1914   1        //设置任务号显示数据
1915   1        Pin16_Number[0]=Pin16_Task_Number+'0'; 
1916   1        
1917   1        //显示位超出复位0，切换为条目
1918   1        if(Menu_Edit==4){Menu_Edit=0;};
1919   1        
1920   1        //显示不同显示位时的状态
1921   1        switch(Menu_Edit)
1922   1        {
1923   2          case 0:   //条目状态
1924   2            
1925   2            Menu_Flag = 3;
1926   2          
1927   2            //复位菜单当前编辑值
1928   2            Menu_Edit_Value = 0;
1929   2          
1930   2            //显示当前页的所有项目
1931   2          
1932   2            //显示第一行端口输入输出状态
1933   2            if(Pin16_Mode==0){
1934   3              LCD1602_First_Line = PIN_SET_Input;
1935   3            }else{
1936   3              LCD1602_First_Line = PIN_SET_Output;
1937   3            }
1938   2            
1939   2            //显示第一行16位端口匹配任务号
1940   2            LCD1602_First_Line_16 = Pin16_Number;
1941   2      
1942   2            //显示第二行端口触发模式
1943   2            if(Pin16_Trigger_Mode == 0){
1944   3              LCD1602_Second_Line = Trigger_Mode_0;
1945   3            }else{
1946   3              LCD1602_Second_Line = Trigger_Mode_1;
1947   3            }
1948   2            
1949   2            break;
1950   2            
1951   2          case 1:  //第一个编辑位，箭头
1952   2            
1953   2            Menu_Flag = 4;
1954   2          
1955   2          
1956   2            //通过菜单编辑值来设定箭头,(输入输出模式)
1957   2            if(Menu_Edit_Value < 0){
1958   3              Pin16_Mode = 1;
1959   3            }else if(Menu_Edit_Value > 0){
1960   3              Pin16_Mode = 0;
1961   3            }
1962   2            
1963   2            //复位菜单当前编辑值
1964   2            Menu_Edit_Value = 0;
1965   2          
1966   2            //当前选中条目的闪烁
1967   2            //箭头的闪烁
1968   2            if(Menu_Edit_Show){  //如果显示箭头
1969   3              
1970   3              if(Pin16_Mode==0){
1971   4                LCD1602_First_Line = PIN_SET_Input;
1972   4              }else{
1973   4                LCD1602_First_Line = PIN_SET_Output;
1974   4              }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 33  

1975   3              
1976   3            }else{   //否则不显示箭头
1977   3              
1978   3                LCD1602_First_Line = PIN_SET_Empty;
1979   3      
1980   3            }
1981   2            
1982   2            //显示其他项目
1983   2            
1984   2            //显示第一行16位端口匹配任务号
1985   2            LCD1602_First_Line_16 = Pin16_Number;
1986   2            
1987   2            //显示第二行端口触发模式
1988   2            if(Pin16_Trigger_Mode == 0){
1989   3              LCD1602_Second_Line = Trigger_Mode_0;
1990   3            }else{
1991   3              LCD1602_Second_Line = Trigger_Mode_1;
1992   3            }
1993   2            break;
1994   2            
1995   2          case 2:  //第二个编辑位，任务号
1996   2            
1997   2            Menu_Flag = 4;
1998   2          
1999   2            //修改任务号
2000   2            Pin16_Task_Number += Menu_Edit_Value;
2001   2            //复位菜单当前编辑值
2002   2            Menu_Edit_Value = 0;
2003   2          
2004   2            //设定任务号可以设置的范围
2005   2            if(Pin16_Task_Number<1){Pin16_Task_Number = 1;}
2006   2            else if(Pin16_Task_Number>6){Pin16_Task_Number = 6;}
2007   2          
2008   2            //当前选中条目的闪烁
2009   2            //任务号的闪烁
2010   2            if(Menu_Edit_Show){
2011   3              LCD1602_First_Line_16 = Pin16_Number;
2012   3            }else{
2013   3              LCD1602_First_Line_16 = Empty_Number;
2014   3            }
2015   2            
2016   2            //显示其他项目
2017   2            //显示第一行端口输入输出状态
2018   2            if(Pin16_Mode==0){
2019   3              LCD1602_First_Line = PIN_SET_Input;
2020   3            }else{
2021   3              LCD1602_First_Line = PIN_SET_Output;
2022   3            }
2023   2            
2024   2            //显示第二行端口触发模式
2025   2            if(Pin16_Trigger_Mode == 0){
2026   3              LCD1602_Second_Line = Trigger_Mode_0;
2027   3            }else{
2028   3              LCD1602_Second_Line = Trigger_Mode_1;
2029   3            }
2030   2                  
2031   2            break;
2032   2            
2033   2          case 3:   //第三个编辑位，端口的触发模式
2034   2            
2035   2            Menu_Flag = 4;
2036   2          
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 34  

2037   2          
2038   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
2039   2            if(Menu_Edit_Value < 0){
2040   3              Pin16_Trigger_Mode = 0;
2041   3            }else if(Menu_Edit_Value > 0){
2042   3              Pin16_Trigger_Mode = 1;
2043   3            }
2044   2            
2045   2            //复位菜单当前编辑值
2046   2            Menu_Edit_Value = 0;
2047   2            
2048   2            //当前选中条目的闪烁
2049   2            //触发模式的闪烁
2050   2            if(Menu_Edit_Show){
2051   3              if(Pin16_Trigger_Mode == 0){
2052   4                LCD1602_Second_Line = Trigger_Mode_0;
2053   4              }else{
2054   4                LCD1602_Second_Line = Trigger_Mode_1;
2055   4              }
2056   3            }else{
2057   3              LCD1602_Second_Line = Trigger_Mode_Empty;
2058   3            }
2059   2            
2060   2            //显示其他项目
2061   2            //显示第一行端口输入输出状态
2062   2            if(Pin16_Mode==0){
2063   3              LCD1602_First_Line = PIN_SET_Input;
2064   3            }else{
2065   3              LCD1602_First_Line = PIN_SET_Output;
2066   3            }
2067   2            
2068   2            //显示第一行16位端口匹配任务号
2069   2            LCD1602_First_Line_16 = Pin16_Number;
2070   2            
2071   2            break;
2072   2            
2073   2        }
2074   1        
2075   1        //设置端口号显示数据
2076   1        LCD1602_First_Line[5]= '1';
2077   1        LCD1602_First_Line[6]= '6';
2078   1        
2079   1      }
2080          
2081          void PIN17_SET_2_27()
2082          {
2083   1        //设置任务号显示数据
2084   1        Pin17_Number[0]=Pin17_Task_Number+'0'; 
2085   1        
2086   1        //显示位超出复位0，切换为条目
2087   1        if(Menu_Edit==4){Menu_Edit=0;};
2088   1        
2089   1        //显示不同显示位时的状态
2090   1        switch(Menu_Edit)
2091   1        {
2092   2          case 0:   //条目状态
2093   2            
2094   2            Menu_Flag = 3;
2095   2          
2096   2            //复位菜单当前编辑值
2097   2            Menu_Edit_Value = 0;
2098   2          
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 35  

2099   2            //显示当前页的所有项目
2100   2          
2101   2            //显示第一行端口输入输出状态
2102   2            if(Pin17_Mode==0){
2103   3              LCD1602_First_Line = PIN_SET_Input;
2104   3            }else{
2105   3              LCD1602_First_Line = PIN_SET_Output;
2106   3            }
2107   2            
2108   2            //显示第一行16位端口匹配任务号
2109   2            LCD1602_First_Line_16 = Pin17_Number;
2110   2      
2111   2            //显示第二行端口触发模式
2112   2            if(Pin17_Trigger_Mode == 0){
2113   3              LCD1602_Second_Line = Trigger_Mode_0;
2114   3            }else{
2115   3              LCD1602_Second_Line = Trigger_Mode_1;
2116   3            }
2117   2            
2118   2            break;
2119   2            
2120   2          case 1:  //第一个编辑位，箭头
2121   2            
2122   2            Menu_Flag = 4;
2123   2          
2124   2          
2125   2            //通过菜单编辑值来设定箭头,(输入输出模式)
2126   2            if(Menu_Edit_Value < 0){
2127   3              Pin17_Mode = 1;
2128   3            }else if(Menu_Edit_Value > 0){
2129   3              Pin17_Mode = 0;
2130   3            }
2131   2            
2132   2            //复位菜单当前编辑值
2133   2            Menu_Edit_Value = 0;
2134   2          
2135   2            //当前选中条目的闪烁
2136   2            //箭头的闪烁
2137   2            if(Menu_Edit_Show){  //如果显示箭头
2138   3              
2139   3              if(Pin17_Mode==0){
2140   4                LCD1602_First_Line = PIN_SET_Input;
2141   4              }else{
2142   4                LCD1602_First_Line = PIN_SET_Output;
2143   4              }
2144   3              
2145   3            }else{   //否则不显示箭头
2146   3              
2147   3                LCD1602_First_Line = PIN_SET_Empty;
2148   3      
2149   3            }
2150   2            
2151   2            //显示其他项目
2152   2            
2153   2            //显示第一行16位端口匹配任务号
2154   2            LCD1602_First_Line_16 = Pin17_Number;
2155   2            
2156   2            //显示第二行端口触发模式
2157   2            if(Pin17_Trigger_Mode == 0){
2158   3              LCD1602_Second_Line = Trigger_Mode_0;
2159   3            }else{
2160   3              LCD1602_Second_Line = Trigger_Mode_1;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 36  

2161   3            }
2162   2            break;
2163   2            
2164   2          case 2:  //第二个编辑位，任务号
2165   2            
2166   2            Menu_Flag = 4;
2167   2          
2168   2            //修改任务号
2169   2            Pin17_Task_Number += Menu_Edit_Value;
2170   2            //复位菜单当前编辑值
2171   2            Menu_Edit_Value = 0;
2172   2          
2173   2            //设定任务号可以设置的范围
2174   2            if(Pin17_Task_Number<1){Pin17_Task_Number = 1;}
2175   2            else if(Pin17_Task_Number>6){Pin17_Task_Number = 6;}
2176   2          
2177   2            //当前选中条目的闪烁
2178   2            //任务号的闪烁
2179   2            if(Menu_Edit_Show){
2180   3              LCD1602_First_Line_16 = Pin17_Number;
2181   3            }else{
2182   3              LCD1602_First_Line_16 = Empty_Number;
2183   3            }
2184   2            
2185   2            //显示其他项目
2186   2            //显示第一行端口输入输出状态
2187   2            if(Pin17_Mode==0){
2188   3              LCD1602_First_Line = PIN_SET_Input;
2189   3            }else{
2190   3              LCD1602_First_Line = PIN_SET_Output;
2191   3            }
2192   2            
2193   2            //显示第二行端口触发模式
2194   2            if(Pin17_Trigger_Mode == 0){
2195   3              LCD1602_Second_Line = Trigger_Mode_0;
2196   3            }else{
2197   3              LCD1602_Second_Line = Trigger_Mode_1;
2198   3            }
2199   2                  
2200   2            break;
2201   2            
2202   2          case 3:   //第三个编辑位，端口的触发模式
2203   2            
2204   2            Menu_Flag = 4;
2205   2          
2206   2          
2207   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
2208   2            if(Menu_Edit_Value < 0){
2209   3              Pin17_Trigger_Mode = 0;
2210   3            }else if(Menu_Edit_Value > 0){
2211   3              Pin17_Trigger_Mode = 1;
2212   3            }
2213   2            
2214   2            //复位菜单当前编辑值
2215   2            Menu_Edit_Value = 0;
2216   2            
2217   2            //当前选中条目的闪烁
2218   2            //触发模式的闪烁
2219   2            if(Menu_Edit_Show){
2220   3              if(Pin17_Trigger_Mode == 0){
2221   4                LCD1602_Second_Line = Trigger_Mode_0;
2222   4              }else{
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 37  

2223   4                LCD1602_Second_Line = Trigger_Mode_1;
2224   4              }
2225   3            }else{
2226   3              LCD1602_Second_Line = Trigger_Mode_Empty;
2227   3            }
2228   2            
2229   2            //显示其他项目
2230   2            //显示第一行端口输入输出状态
2231   2            if(Pin17_Mode==0){
2232   3              LCD1602_First_Line = PIN_SET_Input;
2233   3            }else{
2234   3              LCD1602_First_Line = PIN_SET_Output;
2235   3            }
2236   2            
2237   2            //显示第一行16位端口匹配任务号
2238   2            LCD1602_First_Line_16 = Pin17_Number;
2239   2            
2240   2            break;
2241   2            
2242   2        }
2243   1        
2244   1        //设置端口号显示数据
2245   1        LCD1602_First_Line[5]= '1';
2246   1        LCD1602_First_Line[6]= '7';
2247   1        
2248   1      }
2249          
2250          void PIN20_SET_2_28()
2251          {
2252   1        //设置任务号显示数据
2253   1        Pin20_Number[0]=Pin20_Task_Number+'0'; 
2254   1        
2255   1        //显示位超出复位0，切换为条目
2256   1        if(Menu_Edit==4){Menu_Edit=0;};
2257   1        
2258   1        //显示不同显示位时的状态
2259   1        switch(Menu_Edit)
2260   1        {
2261   2          case 0:   //条目状态
2262   2            
2263   2            Menu_Flag = 3;
2264   2          
2265   2            //复位菜单当前编辑值
2266   2            Menu_Edit_Value = 0;
2267   2          
2268   2            //显示当前页的所有项目
2269   2          
2270   2            //显示第一行端口输入输出状态
2271   2            if(Pin20_Mode==0){
2272   3              LCD1602_First_Line = PIN_SET_Input;
2273   3            }else{
2274   3              LCD1602_First_Line = PIN_SET_Output;
2275   3            }
2276   2            
2277   2            //显示第一行16位端口匹配任务号
2278   2            LCD1602_First_Line_16 = Pin20_Number;
2279   2      
2280   2            //显示第二行端口触发模式
2281   2            if(Pin20_Trigger_Mode == 0){
2282   3              LCD1602_Second_Line = Trigger_Mode_0;
2283   3            }else{
2284   3              LCD1602_Second_Line = Trigger_Mode_1;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 38  

2285   3            }
2286   2            
2287   2            break;
2288   2            
2289   2          case 1:  //第一个编辑位，箭头
2290   2            
2291   2            Menu_Flag = 4;
2292   2          
2293   2          
2294   2            //通过菜单编辑值来设定箭头,(输入输出模式)
2295   2            if(Menu_Edit_Value < 0){
2296   3              Pin20_Mode = 1;
2297   3            }else if(Menu_Edit_Value > 0){
2298   3              Pin20_Mode = 0;
2299   3            }
2300   2            
2301   2            //复位菜单当前编辑值
2302   2            Menu_Edit_Value = 0;
2303   2          
2304   2            //当前选中条目的闪烁
2305   2            //箭头的闪烁
2306   2            if(Menu_Edit_Show){  //如果显示箭头
2307   3              
2308   3              if(Pin20_Mode==0){
2309   4                LCD1602_First_Line = PIN_SET_Input;
2310   4              }else{
2311   4                LCD1602_First_Line = PIN_SET_Output;
2312   4              }
2313   3              
2314   3            }else{   //否则不显示箭头
2315   3              
2316   3                LCD1602_First_Line = PIN_SET_Empty;
2317   3      
2318   3            }
2319   2            
2320   2            //显示其他项目
2321   2            
2322   2            //显示第一行16位端口匹配任务号
2323   2            LCD1602_First_Line_16 = Pin20_Number;
2324   2            
2325   2            //显示第二行端口触发模式
2326   2            if(Pin20_Trigger_Mode == 0){
2327   3              LCD1602_Second_Line = Trigger_Mode_0;
2328   3            }else{
2329   3              LCD1602_Second_Line = Trigger_Mode_1;
2330   3            }
2331   2            break;
2332   2            
2333   2          case 2:  //第二个编辑位，任务号
2334   2            
2335   2            Menu_Flag = 4;
2336   2          
2337   2            //修改任务号
2338   2            Pin20_Task_Number += Menu_Edit_Value;
2339   2            //复位菜单当前编辑值
2340   2            Menu_Edit_Value = 0;
2341   2          
2342   2            //设定任务号可以设置的范围
2343   2            if(Pin20_Task_Number<1){Pin20_Task_Number = 1;}
2344   2            else if(Pin20_Task_Number>6){Pin20_Task_Number = 6;}
2345   2          
2346   2            //当前选中条目的闪烁
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 39  

2347   2            //任务号的闪烁
2348   2            if(Menu_Edit_Show){
2349   3              LCD1602_First_Line_16 = Pin20_Number;
2350   3            }else{
2351   3              LCD1602_First_Line_16 = Empty_Number;
2352   3            }
2353   2            
2354   2            //显示其他项目
2355   2            //显示第一行端口输入输出状态
2356   2            if(Pin20_Mode==0){
2357   3              LCD1602_First_Line = PIN_SET_Input;
2358   3            }else{
2359   3              LCD1602_First_Line = PIN_SET_Output;
2360   3            }
2361   2            
2362   2            //显示第二行端口触发模式
2363   2            if(Pin20_Trigger_Mode == 0){
2364   3              LCD1602_Second_Line = Trigger_Mode_0;
2365   3            }else{
2366   3              LCD1602_Second_Line = Trigger_Mode_1;
2367   3            }
2368   2                  
2369   2            break;
2370   2            
2371   2          case 3:   //第三个编辑位，端口的触发模式
2372   2            
2373   2            Menu_Flag = 4;
2374   2          
2375   2          
2376   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
2377   2            if(Menu_Edit_Value < 0){
2378   3              Pin20_Trigger_Mode = 0;
2379   3            }else if(Menu_Edit_Value > 0){
2380   3              Pin20_Trigger_Mode = 1;
2381   3            }
2382   2            
2383   2            //复位菜单当前编辑值
2384   2            Menu_Edit_Value = 0;
2385   2            
2386   2            //当前选中条目的闪烁
2387   2            //触发模式的闪烁
2388   2            if(Menu_Edit_Show){
2389   3              if(Pin20_Trigger_Mode == 0){
2390   4                LCD1602_Second_Line = Trigger_Mode_0;
2391   4              }else{
2392   4                LCD1602_Second_Line = Trigger_Mode_1;
2393   4              }
2394   3            }else{
2395   3              LCD1602_Second_Line = Trigger_Mode_Empty;
2396   3            }
2397   2            
2398   2            //显示其他项目
2399   2            //显示第一行端口输入输出状态
2400   2            if(Pin20_Mode==0){
2401   3              LCD1602_First_Line = PIN_SET_Input;
2402   3            }else{
2403   3              LCD1602_First_Line = PIN_SET_Output;
2404   3            }
2405   2            
2406   2            //显示第一行16位端口匹配任务号
2407   2            LCD1602_First_Line_16 = Pin20_Number;
2408   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 40  

2409   2            break;
2410   2            
2411   2        }
2412   1        
2413   1        //设置端口号显示数据
2414   1        LCD1602_First_Line[5]= '2';
2415   1        LCD1602_First_Line[6]= '0';
2416   1        
2417   1      }
2418          
2419          void PIN21_SET_2_29()
2420          {
2421   1        //设置任务号显示数据
2422   1        Pin21_Number[0]=Pin21_Task_Number+'0'; 
2423   1        
2424   1        //显示位超出复位0，切换为条目
2425   1        if(Menu_Edit==4){Menu_Edit=0;};
2426   1        
2427   1        //显示不同显示位时的状态
2428   1        switch(Menu_Edit)
2429   1        {
2430   2          case 0:   //条目状态
2431   2            
2432   2            Menu_Flag = 3;
2433   2          
2434   2            //复位菜单当前编辑值
2435   2            Menu_Edit_Value = 0;
2436   2          
2437   2            //显示当前页的所有项目
2438   2          
2439   2            //显示第一行端口输入输出状态
2440   2            if(Pin21_Mode==0){
2441   3              LCD1602_First_Line = PIN_SET_Input;
2442   3            }else{
2443   3              LCD1602_First_Line = PIN_SET_Output;
2444   3            }
2445   2            
2446   2            //显示第一行16位端口匹配任务号
2447   2            LCD1602_First_Line_16 = Pin21_Number;
2448   2      
2449   2            //显示第二行端口触发模式
2450   2            if(Pin21_Trigger_Mode == 0){
2451   3              LCD1602_Second_Line = Trigger_Mode_0;
2452   3            }else{
2453   3              LCD1602_Second_Line = Trigger_Mode_1;
2454   3            }
2455   2            
2456   2            break;
2457   2            
2458   2          case 1:  //第一个编辑位，箭头
2459   2            
2460   2            Menu_Flag = 4;
2461   2          
2462   2          
2463   2            //通过菜单编辑值来设定箭头,(输入输出模式)
2464   2            if(Menu_Edit_Value < 0){
2465   3              Pin21_Mode = 1;
2466   3            }else if(Menu_Edit_Value > 0){
2467   3              Pin21_Mode = 0;
2468   3            }
2469   2            
2470   2            //复位菜单当前编辑值
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 41  

2471   2            Menu_Edit_Value = 0;
2472   2          
2473   2            //当前选中条目的闪烁
2474   2            //箭头的闪烁
2475   2            if(Menu_Edit_Show){  //如果显示箭头
2476   3              
2477   3              if(Pin21_Mode==0){
2478   4                LCD1602_First_Line = PIN_SET_Input;
2479   4              }else{
2480   4                LCD1602_First_Line = PIN_SET_Output;
2481   4              }
2482   3              
2483   3            }else{   //否则不显示箭头
2484   3              
2485   3                LCD1602_First_Line = PIN_SET_Empty;
2486   3      
2487   3            }
2488   2            
2489   2            //显示其他项目
2490   2            
2491   2            //显示第一行16位端口匹配任务号
2492   2            LCD1602_First_Line_16 = Pin21_Number;
2493   2            
2494   2            //显示第二行端口触发模式
2495   2            if(Pin21_Trigger_Mode == 0){
2496   3              LCD1602_Second_Line = Trigger_Mode_0;
2497   3            }else{
2498   3              LCD1602_Second_Line = Trigger_Mode_1;
2499   3            }
2500   2            break;
2501   2            
2502   2          case 2:  //第二个编辑位，任务号
2503   2            
2504   2            Menu_Flag = 4;
2505   2          
2506   2            //修改任务号
2507   2            Pin21_Task_Number += Menu_Edit_Value;
2508   2            //复位菜单当前编辑值
2509   2            Menu_Edit_Value = 0;
2510   2          
2511   2            //设定任务号可以设置的范围
2512   2            if(Pin21_Task_Number<1){Pin21_Task_Number = 1;}
2513   2            else if(Pin21_Task_Number>6){Pin21_Task_Number = 6;}
2514   2          
2515   2            //当前选中条目的闪烁
2516   2            //任务号的闪烁
2517   2            if(Menu_Edit_Show){
2518   3              LCD1602_First_Line_16 = Pin21_Number;
2519   3            }else{
2520   3              LCD1602_First_Line_16 = Empty_Number;
2521   3            }
2522   2            
2523   2            //显示其他项目
2524   2            //显示第一行端口输入输出状态
2525   2            if(Pin21_Mode==0){
2526   3              LCD1602_First_Line = PIN_SET_Input;
2527   3            }else{
2528   3              LCD1602_First_Line = PIN_SET_Output;
2529   3            }
2530   2            
2531   2            //显示第二行端口触发模式
2532   2            if(Pin21_Trigger_Mode == 0){
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 42  

2533   3              LCD1602_Second_Line = Trigger_Mode_0;
2534   3            }else{
2535   3              LCD1602_Second_Line = Trigger_Mode_1;
2536   3            }
2537   2                  
2538   2            break;
2539   2            
2540   2          case 3:   //第三个编辑位，端口的触发模式
2541   2            
2542   2            Menu_Flag = 4;
2543   2          
2544   2          
2545   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
2546   2            if(Menu_Edit_Value < 0){
2547   3              Pin21_Trigger_Mode = 0;
2548   3            }else if(Menu_Edit_Value > 0){
2549   3              Pin21_Trigger_Mode = 1;
2550   3            }
2551   2            
2552   2            //复位菜单当前编辑值
2553   2            Menu_Edit_Value = 0;
2554   2            
2555   2            //当前选中条目的闪烁
2556   2            //触发模式的闪烁
2557   2            if(Menu_Edit_Show){
2558   3              if(Pin21_Trigger_Mode == 0){
2559   4                LCD1602_Second_Line = Trigger_Mode_0;
2560   4              }else{
2561   4                LCD1602_Second_Line = Trigger_Mode_1;
2562   4              }
2563   3            }else{
2564   3              LCD1602_Second_Line = Trigger_Mode_Empty;
2565   3            }
2566   2            
2567   2            //显示其他项目
2568   2            //显示第一行端口输入输出状态
2569   2            if(Pin21_Mode==0){
2570   3              LCD1602_First_Line = PIN_SET_Input;
2571   3            }else{
2572   3              LCD1602_First_Line = PIN_SET_Output;
2573   3            }
2574   2            
2575   2            //显示第一行16位端口匹配任务号
2576   2            LCD1602_First_Line_16 = Pin21_Number;
2577   2            
2578   2            break;
2579   2            
2580   2        }
2581   1        
2582   1        //设置端口号显示数据
2583   1        LCD1602_First_Line[5]= '2';
2584   1        LCD1602_First_Line[6]= '1';
2585   1        
2586   1      }
2587          
2588          void PIN22_SET_2_30()
2589          {
2590   1        //设置任务号显示数据
2591   1        Pin22_Number[0]=Pin22_Task_Number+'0'; 
2592   1        
2593   1        //显示位超出复位0，切换为条目
2594   1        if(Menu_Edit==4){Menu_Edit=0;};
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 43  

2595   1        
2596   1        //显示不同显示位时的状态
2597   1        switch(Menu_Edit)
2598   1        {
2599   2          case 0:   //条目状态
2600   2            
2601   2            Menu_Flag = 3;
2602   2          
2603   2            //复位菜单当前编辑值
2604   2            Menu_Edit_Value = 0;
2605   2          
2606   2            //显示当前页的所有项目
2607   2          
2608   2            //显示第一行端口输入输出状态
2609   2            if(Pin22_Mode==0){
2610   3              LCD1602_First_Line = PIN_SET_Input;
2611   3            }else{
2612   3              LCD1602_First_Line = PIN_SET_Output;
2613   3            }
2614   2            
2615   2            //显示第一行16位端口匹配任务号
2616   2            LCD1602_First_Line_16 = Pin22_Number;
2617   2      
2618   2            //显示第二行端口触发模式
2619   2            if(Pin22_Trigger_Mode == 0){
2620   3              LCD1602_Second_Line = Trigger_Mode_0;
2621   3            }else{
2622   3              LCD1602_Second_Line = Trigger_Mode_1;
2623   3            }
2624   2            
2625   2            break;
2626   2            
2627   2          case 1:  //第一个编辑位，箭头
2628   2            
2629   2            Menu_Flag = 4;
2630   2          
2631   2          
2632   2            //通过菜单编辑值来设定箭头,(输入输出模式)
2633   2            if(Menu_Edit_Value < 0){
2634   3              Pin22_Mode = 1;
2635   3            }else if(Menu_Edit_Value > 0){
2636   3              Pin22_Mode = 0;
2637   3            }
2638   2            
2639   2            //复位菜单当前编辑值
2640   2            Menu_Edit_Value = 0;
2641   2          
2642   2            //当前选中条目的闪烁
2643   2            //箭头的闪烁
2644   2            if(Menu_Edit_Show){  //如果显示箭头
2645   3              
2646   3              if(Pin22_Mode==0){
2647   4                LCD1602_First_Line = PIN_SET_Input;
2648   4              }else{
2649   4                LCD1602_First_Line = PIN_SET_Output;
2650   4              }
2651   3              
2652   3            }else{   //否则不显示箭头
2653   3              
2654   3                LCD1602_First_Line = PIN_SET_Empty;
2655   3      
2656   3            }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 44  

2657   2            
2658   2            //显示其他项目
2659   2            
2660   2            //显示第一行16位端口匹配任务号
2661   2            LCD1602_First_Line_16 = Pin22_Number;
2662   2            
2663   2            //显示第二行端口触发模式
2664   2            if(Pin22_Trigger_Mode == 0){
2665   3              LCD1602_Second_Line = Trigger_Mode_0;
2666   3            }else{
2667   3              LCD1602_Second_Line = Trigger_Mode_1;
2668   3            }
2669   2            break;
2670   2            
2671   2          case 2:  //第二个编辑位，任务号
2672   2            
2673   2            Menu_Flag = 4;
2674   2          
2675   2            //修改任务号
2676   2            Pin22_Task_Number += Menu_Edit_Value;
2677   2            //复位菜单当前编辑值
2678   2            Menu_Edit_Value = 0;
2679   2          
2680   2            //设定任务号可以设置的范围
2681   2            if(Pin22_Task_Number<1){Pin22_Task_Number = 1;}
2682   2            else if(Pin22_Task_Number>6){Pin22_Task_Number = 6;}
2683   2          
2684   2            //当前选中条目的闪烁
2685   2            //任务号的闪烁
2686   2            if(Menu_Edit_Show){
2687   3              LCD1602_First_Line_16 = Pin22_Number;
2688   3            }else{
2689   3              LCD1602_First_Line_16 = Empty_Number;
2690   3            }
2691   2            
2692   2            //显示其他项目
2693   2            //显示第一行端口输入输出状态
2694   2            if(Pin22_Mode==0){
2695   3              LCD1602_First_Line = PIN_SET_Input;
2696   3            }else{
2697   3              LCD1602_First_Line = PIN_SET_Output;
2698   3            }
2699   2            
2700   2            //显示第二行端口触发模式
2701   2            if(Pin22_Trigger_Mode == 0){
2702   3              LCD1602_Second_Line = Trigger_Mode_0;
2703   3            }else{
2704   3              LCD1602_Second_Line = Trigger_Mode_1;
2705   3            }
2706   2                  
2707   2            break;
2708   2            
2709   2          case 3:   //第三个编辑位，端口的触发模式
2710   2            
2711   2            Menu_Flag = 4;
2712   2          
2713   2          
2714   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
2715   2            if(Menu_Edit_Value < 0){
2716   3              Pin22_Trigger_Mode = 0;
2717   3            }else if(Menu_Edit_Value > 0){
2718   3              Pin22_Trigger_Mode = 1;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 45  

2719   3            }
2720   2            
2721   2            //复位菜单当前编辑值
2722   2            Menu_Edit_Value = 0;
2723   2            
2724   2            //当前选中条目的闪烁
2725   2            //触发模式的闪烁
2726   2            if(Menu_Edit_Show){
2727   3              if(Pin22_Trigger_Mode == 0){
2728   4                LCD1602_Second_Line = Trigger_Mode_0;
2729   4              }else{
2730   4                LCD1602_Second_Line = Trigger_Mode_1;
2731   4              }
2732   3            }else{
2733   3              LCD1602_Second_Line = Trigger_Mode_Empty;
2734   3            }
2735   2            
2736   2            //显示其他项目
2737   2            //显示第一行端口输入输出状态
2738   2            if(Pin22_Mode==0){
2739   3              LCD1602_First_Line = PIN_SET_Input;
2740   3            }else{
2741   3              LCD1602_First_Line = PIN_SET_Output;
2742   3            }
2743   2            
2744   2            //显示第一行16位端口匹配任务号
2745   2            LCD1602_First_Line_16 = Pin22_Number;
2746   2            
2747   2            break;
2748   2            
2749   2        }
2750   1        
2751   1        //设置端口号显示数据
2752   1        LCD1602_First_Line[5]= '2';
2753   1        LCD1602_First_Line[6]= '2';
2754   1        
2755   1      }
2756          
2757          void PIN23_SET_2_31()
2758          {
2759   1        //设置任务号显示数据
2760   1        Pin23_Number[0]=Pin23_Task_Number+'0'; 
2761   1        
2762   1        //显示位超出复位0，切换为条目
2763   1        if(Menu_Edit==4){Menu_Edit=0;};
2764   1        
2765   1        //显示不同显示位时的状态
2766   1        switch(Menu_Edit)
2767   1        {
2768   2          case 0:   //条目状态
2769   2            
2770   2            Menu_Flag = 3;
2771   2          
2772   2            //复位菜单当前编辑值
2773   2            Menu_Edit_Value = 0;
2774   2          
2775   2            //显示当前页的所有项目
2776   2          
2777   2            //显示第一行端口输入输出状态
2778   2            if(Pin23_Mode==0){
2779   3              LCD1602_First_Line = PIN_SET_Input;
2780   3            }else{
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 46  

2781   3              LCD1602_First_Line = PIN_SET_Output;
2782   3            }
2783   2            
2784   2            //显示第一行16位端口匹配任务号
2785   2            LCD1602_First_Line_16 = Pin23_Number;
2786   2      
2787   2            //显示第二行端口触发模式
2788   2            if(Pin23_Trigger_Mode == 0){
2789   3              LCD1602_Second_Line = Trigger_Mode_0;
2790   3            }else{
2791   3              LCD1602_Second_Line = Trigger_Mode_1;
2792   3            }
2793   2            
2794   2            break;
2795   2            
2796   2          case 1:  //第一个编辑位，箭头
2797   2            
2798   2            Menu_Flag = 4;
2799   2          
2800   2          
2801   2            //通过菜单编辑值来设定箭头,(输入输出模式)
2802   2            if(Menu_Edit_Value < 0){
2803   3              Pin23_Mode = 1;
2804   3            }else if(Menu_Edit_Value > 0){
2805   3              Pin23_Mode = 0;
2806   3            }
2807   2            
2808   2            //复位菜单当前编辑值
2809   2            Menu_Edit_Value = 0;
2810   2          
2811   2            //当前选中条目的闪烁
2812   2            //箭头的闪烁
2813   2            if(Menu_Edit_Show){  //如果显示箭头
2814   3              
2815   3              if(Pin23_Mode==0){
2816   4                LCD1602_First_Line = PIN_SET_Input;
2817   4              }else{
2818   4                LCD1602_First_Line = PIN_SET_Output;
2819   4              }
2820   3              
2821   3            }else{   //否则不显示箭头
2822   3              
2823   3                LCD1602_First_Line = PIN_SET_Empty;
2824   3      
2825   3            }
2826   2            
2827   2            //显示其他项目
2828   2            
2829   2            //显示第一行16位端口匹配任务号
2830   2            LCD1602_First_Line_16 = Pin23_Number;
2831   2            
2832   2            //显示第二行端口触发模式
2833   2            if(Pin23_Trigger_Mode == 0){
2834   3              LCD1602_Second_Line = Trigger_Mode_0;
2835   3            }else{
2836   3              LCD1602_Second_Line = Trigger_Mode_1;
2837   3            }
2838   2            break;
2839   2            
2840   2          case 2:  //第二个编辑位，任务号
2841   2            
2842   2            Menu_Flag = 4;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 47  

2843   2          
2844   2            //修改任务号
2845   2            Pin23_Task_Number += Menu_Edit_Value;
2846   2            //复位菜单当前编辑值
2847   2            Menu_Edit_Value = 0;
2848   2          
2849   2            //设定任务号可以设置的范围
2850   2            if(Pin23_Task_Number<1){Pin23_Task_Number = 1;}
2851   2            else if(Pin23_Task_Number>6){Pin23_Task_Number = 6;}
2852   2          
2853   2            //当前选中条目的闪烁
2854   2            //任务号的闪烁
2855   2            if(Menu_Edit_Show){
2856   3              LCD1602_First_Line_16 = Pin23_Number;
2857   3            }else{
2858   3              LCD1602_First_Line_16 = Empty_Number;
2859   3            }
2860   2            
2861   2            //显示其他项目
2862   2            //显示第一行端口输入输出状态
2863   2            if(Pin23_Mode==0){
2864   3              LCD1602_First_Line = PIN_SET_Input;
2865   3            }else{
2866   3              LCD1602_First_Line = PIN_SET_Output;
2867   3            }
2868   2            
2869   2            //显示第二行端口触发模式
2870   2            if(Pin23_Trigger_Mode == 0){
2871   3              LCD1602_Second_Line = Trigger_Mode_0;
2872   3            }else{
2873   3              LCD1602_Second_Line = Trigger_Mode_1;
2874   3            }
2875   2                  
2876   2            break;
2877   2            
2878   2          case 3:   //第三个编辑位，端口的触发模式
2879   2            
2880   2            Menu_Flag = 4;
2881   2          
2882   2          
2883   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
2884   2            if(Menu_Edit_Value < 0){
2885   3              Pin23_Trigger_Mode = 0;
2886   3            }else if(Menu_Edit_Value > 0){
2887   3              Pin23_Trigger_Mode = 1;
2888   3            }
2889   2            
2890   2            //复位菜单当前编辑值
2891   2            Menu_Edit_Value = 0;
2892   2            
2893   2            //当前选中条目的闪烁
2894   2            //触发模式的闪烁
2895   2            if(Menu_Edit_Show){
2896   3              if(Pin23_Trigger_Mode == 0){
2897   4                LCD1602_Second_Line = Trigger_Mode_0;
2898   4              }else{
2899   4                LCD1602_Second_Line = Trigger_Mode_1;
2900   4              }
2901   3            }else{
2902   3              LCD1602_Second_Line = Trigger_Mode_Empty;
2903   3            }
2904   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 48  

2905   2            //显示其他项目
2906   2            //显示第一行端口输入输出状态
2907   2            if(Pin23_Mode==0){
2908   3              LCD1602_First_Line = PIN_SET_Input;
2909   3            }else{
2910   3              LCD1602_First_Line = PIN_SET_Output;
2911   3            }
2912   2            
2913   2            //显示第一行16位端口匹配任务号
2914   2            LCD1602_First_Line_16 = Pin23_Number;
2915   2            
2916   2            break;
2917   2            
2918   2        }
2919   1        
2920   1        //设置端口号显示数据
2921   1        LCD1602_First_Line[5]= '2';
2922   1        LCD1602_First_Line[6]= '3';
2923   1        
2924   1      }
2925          
2926          void PIN24_SET_2_32()
2927          {
2928   1        //设置任务号显示数据
2929   1        Pin24_Number[0]=Pin24_Task_Number+'0'; 
2930   1        
2931   1        //显示位超出复位0，切换为条目
2932   1        if(Menu_Edit==4){Menu_Edit=0;};
2933   1        
2934   1        //显示不同显示位时的状态
2935   1        switch(Menu_Edit)
2936   1        {
2937   2          case 0:   //条目状态
2938   2            
2939   2            Menu_Flag = 3;
2940   2          
2941   2            //复位菜单当前编辑值
2942   2            Menu_Edit_Value = 0;
2943   2          
2944   2            //显示当前页的所有项目
2945   2          
2946   2            //显示第一行端口输入输出状态
2947   2            if(Pin24_Mode==0){
2948   3              LCD1602_First_Line = PIN_SET_Input;
2949   3            }else{
2950   3              LCD1602_First_Line = PIN_SET_Output;
2951   3            }
2952   2            
2953   2            //显示第一行16位端口匹配任务号
2954   2            LCD1602_First_Line_16 = Pin24_Number;
2955   2      
2956   2            //显示第二行端口触发模式
2957   2            if(Pin24_Trigger_Mode == 0){
2958   3              LCD1602_Second_Line = Trigger_Mode_0;
2959   3            }else{
2960   3              LCD1602_Second_Line = Trigger_Mode_1;
2961   3            }
2962   2            
2963   2            break;
2964   2            
2965   2          case 1:  //第一个编辑位，箭头
2966   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 49  

2967   2            Menu_Flag = 4;
2968   2          
2969   2          
2970   2            //通过菜单编辑值来设定箭头,(输入输出模式)
2971   2            if(Menu_Edit_Value < 0){
2972   3              Pin24_Mode = 1;
2973   3            }else if(Menu_Edit_Value > 0){
2974   3              Pin24_Mode = 0;
2975   3            }
2976   2            
2977   2            //复位菜单当前编辑值
2978   2            Menu_Edit_Value = 0;
2979   2          
2980   2            //当前选中条目的闪烁
2981   2            //箭头的闪烁
2982   2            if(Menu_Edit_Show){  //如果显示箭头
2983   3              
2984   3              if(Pin24_Mode==0){
2985   4                LCD1602_First_Line = PIN_SET_Input;
2986   4              }else{
2987   4                LCD1602_First_Line = PIN_SET_Output;
2988   4              }
2989   3              
2990   3            }else{   //否则不显示箭头
2991   3              
2992   3                LCD1602_First_Line = PIN_SET_Empty;
2993   3      
2994   3            }
2995   2            
2996   2            //显示其他项目
2997   2            
2998   2            //显示第一行16位端口匹配任务号
2999   2            LCD1602_First_Line_16 = Pin24_Number;
3000   2            
3001   2            //显示第二行端口触发模式
3002   2            if(Pin24_Trigger_Mode == 0){
3003   3              LCD1602_Second_Line = Trigger_Mode_0;
3004   3            }else{
3005   3              LCD1602_Second_Line = Trigger_Mode_1;
3006   3            }
3007   2            break;
3008   2            
3009   2          case 2:  //第二个编辑位，任务号
3010   2            
3011   2            Menu_Flag = 4;
3012   2          
3013   2            //修改任务号
3014   2            Pin24_Task_Number += Menu_Edit_Value;
3015   2            //复位菜单当前编辑值
3016   2            Menu_Edit_Value = 0;
3017   2          
3018   2            //设定任务号可以设置的范围
3019   2            if(Pin24_Task_Number<1){Pin24_Task_Number = 1;}
3020   2            else if(Pin24_Task_Number>6){Pin24_Task_Number = 6;}
3021   2          
3022   2            //当前选中条目的闪烁
3023   2            //任务号的闪烁
3024   2            if(Menu_Edit_Show){
3025   3              LCD1602_First_Line_16 = Pin24_Number;
3026   3            }else{
3027   3              LCD1602_First_Line_16 = Empty_Number;
3028   3            }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 50  

3029   2            
3030   2            //显示其他项目
3031   2            //显示第一行端口输入输出状态
3032   2            if(Pin24_Mode==0){
3033   3              LCD1602_First_Line = PIN_SET_Input;
3034   3            }else{
3035   3              LCD1602_First_Line = PIN_SET_Output;
3036   3            }
3037   2            
3038   2            //显示第二行端口触发模式
3039   2            if(Pin24_Trigger_Mode == 0){
3040   3              LCD1602_Second_Line = Trigger_Mode_0;
3041   3            }else{
3042   3              LCD1602_Second_Line = Trigger_Mode_1;
3043   3            }
3044   2                  
3045   2            break;
3046   2            
3047   2          case 3:   //第三个编辑位，端口的触发模式
3048   2            
3049   2            Menu_Flag = 4;
3050   2          
3051   2          
3052   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
3053   2            if(Menu_Edit_Value < 0){
3054   3              Pin24_Trigger_Mode = 0;
3055   3            }else if(Menu_Edit_Value > 0){
3056   3              Pin24_Trigger_Mode = 1;
3057   3            }
3058   2            
3059   2            //复位菜单当前编辑值
3060   2            Menu_Edit_Value = 0;
3061   2            
3062   2            //当前选中条目的闪烁
3063   2            //触发模式的闪烁
3064   2            if(Menu_Edit_Show){
3065   3              if(Pin24_Trigger_Mode == 0){
3066   4                LCD1602_Second_Line = Trigger_Mode_0;
3067   4              }else{
3068   4                LCD1602_Second_Line = Trigger_Mode_1;
3069   4              }
3070   3            }else{
3071   3              LCD1602_Second_Line = Trigger_Mode_Empty;
3072   3            }
3073   2            
3074   2            //显示其他项目
3075   2            //显示第一行端口输入输出状态
3076   2            if(Pin24_Mode==0){
3077   3              LCD1602_First_Line = PIN_SET_Input;
3078   3            }else{
3079   3              LCD1602_First_Line = PIN_SET_Output;
3080   3            }
3081   2            
3082   2            //显示第一行16位端口匹配任务号
3083   2            LCD1602_First_Line_16 = Pin24_Number;
3084   2            
3085   2            break;
3086   2            
3087   2        }
3088   1        
3089   1        //设置端口号显示数据
3090   1        LCD1602_First_Line[5]= '2';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 51  

3091   1        LCD1602_First_Line[6]= '4';
3092   1        
3093   1      }
3094          
3095          void PIN35_SET_2_33()
3096          {
3097   1        //设置任务号显示数据
3098   1        Pin35_Number[0]=Pin35_Task_Number+'0'; 
3099   1        
3100   1        //显示位超出复位0，切换为条目
3101   1        if(Menu_Edit==4){Menu_Edit=0;};
3102   1        
3103   1        //显示不同显示位时的状态
3104   1        switch(Menu_Edit)
3105   1        {
3106   2          case 0:   //条目状态
3107   2            
3108   2            Menu_Flag = 3;
3109   2          
3110   2            //复位菜单当前编辑值
3111   2            Menu_Edit_Value = 0;
3112   2          
3113   2            //显示当前页的所有项目
3114   2          
3115   2            //显示第一行端口输入输出状态
3116   2            if(Pin35_Mode==0){
3117   3              LCD1602_First_Line = PIN_SET_Input;
3118   3            }else{
3119   3              LCD1602_First_Line = PIN_SET_Output;
3120   3            }
3121   2            
3122   2            //显示第一行16位端口匹配任务号
3123   2            LCD1602_First_Line_16 = Pin35_Number;
3124   2      
3125   2            //显示第二行端口触发模式
3126   2            if(Pin35_Trigger_Mode == 0){
3127   3              LCD1602_Second_Line = Trigger_Mode_0;
3128   3            }else{
3129   3              LCD1602_Second_Line = Trigger_Mode_1;
3130   3            }
3131   2            
3132   2            break;
3133   2            
3134   2          case 1:  //第一个编辑位，箭头
3135   2            
3136   2            Menu_Flag = 4;
3137   2          
3138   2          
3139   2            //通过菜单编辑值来设定箭头,(输入输出模式)
3140   2            if(Menu_Edit_Value < 0){
3141   3              Pin35_Mode = 1;
3142   3            }else if(Menu_Edit_Value > 0){
3143   3              Pin35_Mode = 0;
3144   3            }
3145   2            
3146   2            //复位菜单当前编辑值
3147   2            Menu_Edit_Value = 0;
3148   2          
3149   2            //当前选中条目的闪烁
3150   2            //箭头的闪烁
3151   2            if(Menu_Edit_Show){  //如果显示箭头
3152   3              
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 52  

3153   3              if(Pin35_Mode==0){
3154   4                LCD1602_First_Line = PIN_SET_Input;
3155   4              }else{
3156   4                LCD1602_First_Line = PIN_SET_Output;
3157   4              }
3158   3              
3159   3            }else{   //否则不显示箭头
3160   3              
3161   3                LCD1602_First_Line = PIN_SET_Empty;
3162   3      
3163   3            }
3164   2            
3165   2            //显示其他项目
3166   2            
3167   2            //显示第一行16位端口匹配任务号
3168   2            LCD1602_First_Line_16 = Pin35_Number;
3169   2            
3170   2            //显示第二行端口触发模式
3171   2            if(Pin35_Trigger_Mode == 0){
3172   3              LCD1602_Second_Line = Trigger_Mode_0;
3173   3            }else{
3174   3              LCD1602_Second_Line = Trigger_Mode_1;
3175   3            }
3176   2            break;
3177   2            
3178   2          case 2:  //第二个编辑位，任务号
3179   2            
3180   2            Menu_Flag = 4;
3181   2          
3182   2            //修改任务号
3183   2            Pin35_Task_Number += Menu_Edit_Value;
3184   2            //复位菜单当前编辑值
3185   2            Menu_Edit_Value = 0;
3186   2          
3187   2            //设定任务号可以设置的范围
3188   2            if(Pin35_Task_Number<1){Pin35_Task_Number = 1;}
3189   2            else if(Pin35_Task_Number>6){Pin35_Task_Number = 6;}
3190   2          
3191   2            //当前选中条目的闪烁
3192   2            //任务号的闪烁
3193   2            if(Menu_Edit_Show){
3194   3              LCD1602_First_Line_16 = Pin35_Number;
3195   3            }else{
3196   3              LCD1602_First_Line_16 = Empty_Number;
3197   3            }
3198   2            
3199   2            //显示其他项目
3200   2            //显示第一行端口输入输出状态
3201   2            if(Pin35_Mode==0){
3202   3              LCD1602_First_Line = PIN_SET_Input;
3203   3            }else{
3204   3              LCD1602_First_Line = PIN_SET_Output;
3205   3            }
3206   2            
3207   2            //显示第二行端口触发模式
3208   2            if(Pin35_Trigger_Mode == 0){
3209   3              LCD1602_Second_Line = Trigger_Mode_0;
3210   3            }else{
3211   3              LCD1602_Second_Line = Trigger_Mode_1;
3212   3            }
3213   2                  
3214   2            break;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 53  

3215   2            
3216   2          case 3:   //第三个编辑位，端口的触发模式
3217   2            
3218   2            Menu_Flag = 4;
3219   2          
3220   2          
3221   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
3222   2            if(Menu_Edit_Value < 0){
3223   3              Pin35_Trigger_Mode = 0;
3224   3            }else if(Menu_Edit_Value > 0){
3225   3              Pin35_Trigger_Mode = 1;
3226   3            }
3227   2            
3228   2            //复位菜单当前编辑值
3229   2            Menu_Edit_Value = 0;
3230   2            
3231   2            //当前选中条目的闪烁
3232   2            //触发模式的闪烁
3233   2            if(Menu_Edit_Show){
3234   3              if(Pin35_Trigger_Mode == 0){
3235   4                LCD1602_Second_Line = Trigger_Mode_0;
3236   4              }else{
3237   4                LCD1602_Second_Line = Trigger_Mode_1;
3238   4              }
3239   3            }else{
3240   3              LCD1602_Second_Line = Trigger_Mode_Empty;
3241   3            }
3242   2            
3243   2            //显示其他项目
3244   2            //显示第一行端口输入输出状态
3245   2            if(Pin35_Mode==0){
3246   3              LCD1602_First_Line = PIN_SET_Input;
3247   3            }else{
3248   3              LCD1602_First_Line = PIN_SET_Output;
3249   3            }
3250   2            
3251   2            //显示第一行16位端口匹配任务号
3252   2            LCD1602_First_Line_16 = Pin35_Number;
3253   2            
3254   2            break;
3255   2            
3256   2        }
3257   1        
3258   1        //设置端口号显示数据
3259   1        LCD1602_First_Line[5]= '3';
3260   1        LCD1602_First_Line[6]= '5';
3261   1        
3262   1      }
3263          
3264          
3265          void PIN36_SET_2_34()
3266          {
3267   1        //设置任务号显示数据
3268   1        Pin36_Number[0]=Pin36_Task_Number+'0'; 
3269   1        
3270   1        //显示位超出复位0，切换为条目
3271   1        if(Menu_Edit==4){Menu_Edit=0;};
3272   1        
3273   1        //显示不同显示位时的状态
3274   1        switch(Menu_Edit)
3275   1        {
3276   2          case 0:   //条目状态
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 54  

3277   2            
3278   2            Menu_Flag = 3;
3279   2          
3280   2            //复位菜单当前编辑值
3281   2            Menu_Edit_Value = 0;
3282   2          
3283   2            //显示当前页的所有项目
3284   2          
3285   2            //显示第一行端口输入输出状态
3286   2            if(Pin36_Mode==0){
3287   3              LCD1602_First_Line = PIN_SET_Input;
3288   3            }else{
3289   3              LCD1602_First_Line = PIN_SET_Output;
3290   3            }
3291   2            
3292   2            //显示第一行16位端口匹配任务号
3293   2            LCD1602_First_Line_16 = Pin36_Number;
3294   2      
3295   2            //显示第二行端口触发模式
3296   2            if(Pin36_Trigger_Mode == 0){
3297   3              LCD1602_Second_Line = Trigger_Mode_0;
3298   3            }else{
3299   3              LCD1602_Second_Line = Trigger_Mode_1;
3300   3            }
3301   2            
3302   2            break;
3303   2            
3304   2          case 1:  //第一个编辑位，箭头
3305   2            
3306   2            Menu_Flag = 4;
3307   2          
3308   2          
3309   2            //通过菜单编辑值来设定箭头,(输入输出模式)
3310   2            if(Menu_Edit_Value < 0){
3311   3              Pin36_Mode = 1;
3312   3            }else if(Menu_Edit_Value > 0){
3313   3              Pin36_Mode = 0;
3314   3            }
3315   2            
3316   2            //复位菜单当前编辑值
3317   2            Menu_Edit_Value = 0;
3318   2          
3319   2            //当前选中条目的闪烁
3320   2            //箭头的闪烁
3321   2            if(Menu_Edit_Show){  //如果显示箭头
3322   3              
3323   3              if(Pin36_Mode==0){
3324   4                LCD1602_First_Line = PIN_SET_Input;
3325   4              }else{
3326   4                LCD1602_First_Line = PIN_SET_Output;
3327   4              }
3328   3              
3329   3            }else{   //否则不显示箭头
3330   3              
3331   3                LCD1602_First_Line = PIN_SET_Empty;
3332   3      
3333   3            }
3334   2            
3335   2            //显示其他项目
3336   2            
3337   2            //显示第一行16位端口匹配任务号
3338   2            LCD1602_First_Line_16 = Pin36_Number;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 55  

3339   2            
3340   2            //显示第二行端口触发模式
3341   2            if(Pin36_Trigger_Mode == 0){
3342   3              LCD1602_Second_Line = Trigger_Mode_0;
3343   3            }else{
3344   3              LCD1602_Second_Line = Trigger_Mode_1;
3345   3            }
3346   2            break;
3347   2            
3348   2          case 2:  //第二个编辑位，任务号
3349   2            
3350   2            Menu_Flag = 4;
3351   2          
3352   2            //修改任务号
3353   2            Pin36_Task_Number += Menu_Edit_Value;
3354   2            //复位菜单当前编辑值
3355   2            Menu_Edit_Value = 0;
3356   2          
3357   2            //设定任务号可以设置的范围
3358   2            if(Pin36_Task_Number<1){Pin36_Task_Number = 1;}
3359   2            else if(Pin36_Task_Number>6){Pin36_Task_Number = 6;}
3360   2          
3361   2            //当前选中条目的闪烁
3362   2            //任务号的闪烁
3363   2            if(Menu_Edit_Show){
3364   3              LCD1602_First_Line_16 = Pin36_Number;
3365   3            }else{
3366   3              LCD1602_First_Line_16 = Empty_Number;
3367   3            }
3368   2            
3369   2            //显示其他项目
3370   2            //显示第一行端口输入输出状态
3371   2            if(Pin36_Mode==0){
3372   3              LCD1602_First_Line = PIN_SET_Input;
3373   3            }else{
3374   3              LCD1602_First_Line = PIN_SET_Output;
3375   3            }
3376   2            
3377   2            //显示第二行端口触发模式
3378   2            if(Pin36_Trigger_Mode == 0){
3379   3              LCD1602_Second_Line = Trigger_Mode_0;
3380   3            }else{
3381   3              LCD1602_Second_Line = Trigger_Mode_1;
3382   3            }
3383   2                  
3384   2            break;
3385   2            
3386   2          case 3:   //第三个编辑位，端口的触发模式
3387   2            
3388   2            Menu_Flag = 4;
3389   2          
3390   2          
3391   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
3392   2            if(Menu_Edit_Value < 0){
3393   3              Pin36_Trigger_Mode = 0;
3394   3            }else if(Menu_Edit_Value > 0){
3395   3              Pin36_Trigger_Mode = 1;
3396   3            }
3397   2            
3398   2            //复位菜单当前编辑值
3399   2            Menu_Edit_Value = 0;
3400   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 56  

3401   2            //当前选中条目的闪烁
3402   2            //触发模式的闪烁
3403   2            if(Menu_Edit_Show){
3404   3              if(Pin36_Trigger_Mode == 0){
3405   4                LCD1602_Second_Line = Trigger_Mode_0;
3406   4              }else{
3407   4                LCD1602_Second_Line = Trigger_Mode_1;
3408   4              }
3409   3            }else{
3410   3              LCD1602_Second_Line = Trigger_Mode_Empty;
3411   3            }
3412   2            
3413   2            //显示其他项目
3414   2            //显示第一行端口输入输出状态
3415   2            if(Pin36_Mode==0){
3416   3              LCD1602_First_Line = PIN_SET_Input;
3417   3            }else{
3418   3              LCD1602_First_Line = PIN_SET_Output;
3419   3            }
3420   2            
3421   2            //显示第一行16位端口匹配任务号
3422   2            LCD1602_First_Line_16 = Pin36_Number;
3423   2            
3424   2            break;
3425   2            
3426   2        }
3427   1        
3428   1        //设置端口号显示数据
3429   1        LCD1602_First_Line[5]= '3';
3430   1        LCD1602_First_Line[6]= '6';
3431   1        
3432   1      }
3433          
3434          void PIN37_SET_2_35()
3435          {
3436   1        //设置任务号显示数据
3437   1        Pin37_Number[0]=Pin37_Task_Number+'0'; 
3438   1        
3439   1        //显示位超出复位0，切换为条目
3440   1        if(Menu_Edit==4){Menu_Edit=0;};
3441   1        
3442   1        //显示不同显示位时的状态
3443   1        switch(Menu_Edit)
3444   1        {
3445   2          case 0:   //条目状态
3446   2            
3447   2            Menu_Flag = 3;
3448   2          
3449   2            //复位菜单当前编辑值
3450   2            Menu_Edit_Value = 0;
3451   2          
3452   2            //显示当前页的所有项目
3453   2          
3454   2            //显示第一行端口输入输出状态
3455   2            if(Pin37_Mode==0){
3456   3              LCD1602_First_Line = PIN_SET_Input;
3457   3            }else{
3458   3              LCD1602_First_Line = PIN_SET_Output;
3459   3            }
3460   2            
3461   2            //显示第一行16位端口匹配任务号
3462   2            LCD1602_First_Line_16 = Pin37_Number;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 57  

3463   2      
3464   2            //显示第二行端口触发模式
3465   2            if(Pin37_Trigger_Mode == 0){
3466   3              LCD1602_Second_Line = Trigger_Mode_0;
3467   3            }else{
3468   3              LCD1602_Second_Line = Trigger_Mode_1;
3469   3            }
3470   2            
3471   2            break;
3472   2            
3473   2          case 1:  //第一个编辑位，箭头
3474   2            
3475   2            Menu_Flag = 4;
3476   2          
3477   2          
3478   2            //通过菜单编辑值来设定箭头,(输入输出模式)
3479   2            if(Menu_Edit_Value < 0){
3480   3              Pin37_Mode = 1;
3481   3            }else if(Menu_Edit_Value > 0){
3482   3              Pin37_Mode = 0;
3483   3            }
3484   2            
3485   2            //复位菜单当前编辑值
3486   2            Menu_Edit_Value = 0;
3487   2          
3488   2            //当前选中条目的闪烁
3489   2            //箭头的闪烁
3490   2            if(Menu_Edit_Show){  //如果显示箭头
3491   3              
3492   3              if(Pin37_Mode==0){
3493   4                LCD1602_First_Line = PIN_SET_Input;
3494   4              }else{
3495   4                LCD1602_First_Line = PIN_SET_Output;
3496   4              }
3497   3              
3498   3            }else{   //否则不显示箭头
3499   3              
3500   3                LCD1602_First_Line = PIN_SET_Empty;
3501   3      
3502   3            }
3503   2            
3504   2            //显示其他项目
3505   2            
3506   2            //显示第一行16位端口匹配任务号
3507   2            LCD1602_First_Line_16 = Pin37_Number;
3508   2            
3509   2            //显示第二行端口触发模式
3510   2            if(Pin37_Trigger_Mode == 0){
3511   3              LCD1602_Second_Line = Trigger_Mode_0;
3512   3            }else{
3513   3              LCD1602_Second_Line = Trigger_Mode_1;
3514   3            }
3515   2            break;
3516   2            
3517   2          case 2:  //第二个编辑位，任务号
3518   2            
3519   2            Menu_Flag = 4;
3520   2          
3521   2            //修改任务号
3522   2            Pin37_Task_Number += Menu_Edit_Value;
3523   2            //复位菜单当前编辑值
3524   2            Menu_Edit_Value = 0;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 58  

3525   2          
3526   2            //设定任务号可以设置的范围
3527   2            if(Pin37_Task_Number<1){Pin37_Task_Number = 1;}
3528   2            else if(Pin37_Task_Number>6){Pin37_Task_Number = 6;}
3529   2          
3530   2            //当前选中条目的闪烁
3531   2            //任务号的闪烁
3532   2            if(Menu_Edit_Show){
3533   3              LCD1602_First_Line_16 = Pin37_Number;
3534   3            }else{
3535   3              LCD1602_First_Line_16 = Empty_Number;
3536   3            }
3537   2            
3538   2            //显示其他项目
3539   2            //显示第一行端口输入输出状态
3540   2            if(Pin37_Mode==0){
3541   3              LCD1602_First_Line = PIN_SET_Input;
3542   3            }else{
3543   3              LCD1602_First_Line = PIN_SET_Output;
3544   3            }
3545   2            
3546   2            //显示第二行端口触发模式
3547   2            if(Pin37_Trigger_Mode == 0){
3548   3              LCD1602_Second_Line = Trigger_Mode_0;
3549   3            }else{
3550   3              LCD1602_Second_Line = Trigger_Mode_1;
3551   3            }
3552   2                  
3553   2            break;
3554   2            
3555   2          case 3:   //第三个编辑位，端口的触发模式
3556   2            
3557   2            Menu_Flag = 4;
3558   2          
3559   2          
3560   2            //通过菜单编辑值来设定触发模式,立即触发或者自锁触发
3561   2            if(Menu_Edit_Value < 0){
3562   3              Pin37_Trigger_Mode = 0;
3563   3            }else if(Menu_Edit_Value > 0){
3564   3              Pin37_Trigger_Mode = 1;
3565   3            }
3566   2            
3567   2            //复位菜单当前编辑值
3568   2            Menu_Edit_Value = 0;
3569   2            
3570   2            //当前选中条目的闪烁
3571   2            //触发模式的闪烁
3572   2            if(Menu_Edit_Show){
3573   3              if(Pin37_Trigger_Mode == 0){
3574   4                LCD1602_Second_Line = Trigger_Mode_0;
3575   4              }else{
3576   4                LCD1602_Second_Line = Trigger_Mode_1;
3577   4              }
3578   3            }else{
3579   3              LCD1602_Second_Line = Trigger_Mode_Empty;
3580   3            }
3581   2            
3582   2            //显示其他项目
3583   2            //显示第一行端口输入输出状态
3584   2            if(Pin37_Mode==0){
3585   3              LCD1602_First_Line = PIN_SET_Input;
3586   3            }else{
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 59  

3587   3              LCD1602_First_Line = PIN_SET_Output;
3588   3            }
3589   2            
3590   2            //显示第一行16位端口匹配任务号
3591   2            LCD1602_First_Line_16 = Pin37_Number;
3592   2            
3593   2            break;
3594   2            
3595   2        }
3596   1        
3597   1        //设置端口号显示数据
3598   1        LCD1602_First_Line[5]= '3';
3599   1        LCD1602_First_Line[6]= '7';
3600   1        
3601   1      }
3602          
3603          void RETURN_2_36()
3604          {
3605   1        Menu_Flag = 0;
3606   1        LCD1602_First_Line = RETURN_Select;
3607   1        LCD1602_Second_Line = Menu_Empty_Line;
3608   1      }
3609          
3610          
3611          /*第二级菜单*/
3612          //TIME_SET_1_3下项目
3613          void TIME_SET_Manual_Set_2_37()
3614          {
3615   1        
3616   1        
3617   1        //显示位超出复位0，切换为条目
3618   1        if(Menu_Edit==7){Menu_Edit=0;};
3619   1        
3620   1        //SET_DATE[]  ="DATE:2022/07/17 ";
3621   1        //SET_TIME[]  ="TIME: 00:00:00  ";
3622   1        //如果在1-6编辑位时，设定日期时间显示内容
3623   1        if(Menu_Edit>=1){
3624   2          //设置日期
3625   2          SET_DATE[5]=Year/1000%10+'0';
3626   2          SET_DATE[6]=Year/100%10+'0';
3627   2          SET_DATE[7]=Year/10%10+'0';
3628   2          SET_DATE[8]=Year%10+'0';
3629   2          
3630   2          SET_DATE[10]=Month/10%10+'0';
3631   2          SET_DATE[11]=Month%10+'0';
3632   2          
3633   2          SET_DATE[13]=Day/10%10+'0';
3634   2          SET_DATE[14]=Day%10+'0';
3635   2          
3636   2          //设置时间
3637   2          SET_TIME[6]=hour/10%10+'0';
3638   2          SET_TIME[7]=hour%10+'0';
3639   2          
3640   2          SET_TIME[9]=minute/10%10+'0';
3641   2          SET_TIME[10]=minute%10+'0';
3642   2          
3643   2          SET_TIME[12]=second/10%10+'0';
3644   2          SET_TIME[13]=second%10+'0';
3645   2          
3646   2          LCD1602_First_Line = SET_DATE;
3647   2          LCD1602_Second_Line = SET_TIME;
3648   2        }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 60  

3649   1        
3650   1        //显示不同显示位时的状态
3651   1        switch(Menu_Edit)
3652   1        {
3653   2          case 0:   //条目状态
3654   2            
3655   2            Menu_Flag = 3;
3656   2          
3657   2            //复位菜单当前编辑值
3658   2            Menu_Edit_Value = 0;
3659   2          
3660   2            //显示当前页的所有项目
3661   2            LCD1602_First_Line = SET_TIME_MANUAL_Select;
3662   2            LCD1602_Second_Line = SET_TIME_AUTO;
3663   2            
3664   2            break;
3665   2            
3666   2          case 1:
3667   2            Menu_Flag = 4;
3668   2            
3669   2            //更新Year
3670   2            Year += Menu_Edit_Value;
3671   2          
3672   2            //复位菜单当前编辑值
3673   2            Menu_Edit_Value = 0;
3674   2            
3675   2            //当前选中条目的闪烁
3676   2            //年的闪烁
3677   2            if(Menu_Edit_Show==0){
3678   3              LCD1602_First_Line[5] = ' ';
3679   3              LCD1602_First_Line[6] = ' ';
3680   3              LCD1602_First_Line[7] = ' ';
3681   3              LCD1602_First_Line[8] = ' ';
3682   3            }
3683   2            break;
3684   2            
3685   2          case 2:
3686   2            Menu_Flag = 4;
3687   2            
3688   2            //更新Month
3689   2            Month += Menu_Edit_Value;
3690   2          
3691   2            //限制Month的设置范围
3692   2            if(Month<1){Month=1;}
3693   2            else if(Month>12){Month=12;}
3694   2          
3695   2            //复位菜单当前编辑值
3696   2            Menu_Edit_Value = 0;
3697   2            
3698   2            //当前选中条目的闪烁
3699   2            //年的闪烁
3700   2            if(Menu_Edit_Show==0){
3701   3              LCD1602_First_Line[10] = ' ';
3702   3              LCD1602_First_Line[11] = ' ';
3703   3            }
3704   2            break;
3705   2            
3706   2          case 3:
3707   2            Menu_Flag = 4;
3708   2            
3709   2            //更新Day
3710   2            Day += Menu_Edit_Value;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 61  

3711   2          
3712   2            //限制Day
3713   2            if(Day<1){Day=1;}
3714   2            else if(Day>Max_Month_Days[Month]){Day=Max_Month_Days[Month];}
3715   2            
3716   2            //复位菜单当前编辑值
3717   2            Menu_Edit_Value = 0;
3718   2            
3719   2            //当前选中条目的闪烁
3720   2            //年的闪烁
3721   2            if(Menu_Edit_Show==0){
3722   3              LCD1602_First_Line[13] = ' ';
3723   3              LCD1602_First_Line[14] = ' ';
3724   3            }
3725   2            break;  
3726   2            
3727   2          case 4:
3728   2            Menu_Flag = 4;
3729   2            
3730   2            //更新小时
3731   2            hour += Menu_Edit_Value;
3732   2          
3733   2            //限制小时的设置范围
3734   2            if(hour<0){hour=0;}
3735   2            else if(hour>23){hour=23;}
3736   2          
3737   2            //复位菜单当前编辑值
3738   2            Menu_Edit_Value = 0;
3739   2            
3740   2            //当前选中条目的闪烁
3741   2            //小时的闪烁
3742   2            if(Menu_Edit_Show==0){
3743   3              LCD1602_Second_Line[6] = ' ';
3744   3              LCD1602_Second_Line[7] = ' ';
3745   3            }
3746   2            break;  
3747   2            
3748   2          case 5:
3749   2            Menu_Flag = 4;
3750   2            
3751   2            //更新分钟
3752   2            minute += Menu_Edit_Value;
3753   2          
3754   2            //限制分钟的设置范围
3755   2            if(minute<0){minute=0;}
3756   2            else if(minute>59){minute=59;}
3757   2          
3758   2            //复位菜单当前编辑值
3759   2            Menu_Edit_Value = 0;
3760   2            
3761   2            //当前选中条目的闪烁
3762   2            //分钟的闪烁
3763   2            if(Menu_Edit_Show==0){
3764   3              LCD1602_Second_Line[9] = ' ';
3765   3              LCD1602_Second_Line[10] = ' ';
3766   3            }
3767   2            break;  
3768   2            
3769   2          case 6:
3770   2            Menu_Flag = 4;
3771   2            
3772   2            //更新秒
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 62  

3773   2            second += Menu_Edit_Value;
3774   2          
3775   2            //限制秒的设置范围
3776   2            if(second<0){second=0;}
3777   2            else if(second>59){second=59;}
3778   2          
3779   2            //复位菜单当前编辑值
3780   2            Menu_Edit_Value = 0;
3781   2            
3782   2            //当前选中条目的闪烁
3783   2            //秒的闪烁
3784   2            if(Menu_Edit_Show==0){
3785   3              LCD1602_Second_Line[12] = ' ';
3786   3              LCD1602_Second_Line[13] = ' ';
3787   3            }
3788   2            break;  
3789   2        }
3790   1      }
3791          
3792          void TIME_SET_Auto_Set_2_38()
3793          {
3794   1        
3795   1          //显示位超出复位0，切换为条目
3796   1        if(Menu_Edit==1){Menu_Edit=0;};
3797   1        
3798   1        //显示不同显示位时的状态
3799   1        switch(Menu_Edit)
3800   1        {
3801   2          case 0:   //条目状态
3802   2            
3803   2            Menu_Flag = 3;
3804   2          
3805   2            //复位菜单当前编辑值
3806   2            Menu_Edit_Value = 0;
3807   2          
3808   2            //显示当前页的所有项目
3809   2            LCD1602_First_Line = SET_TIME_MANUAL;
3810   2            LCD1602_Second_Line = SET_TIME_AUTO_Select;
3811   2            
3812   2            break;
3813   2          
3814   2         }
3815   1      }
3816          
3817          void RETURN_2_39()
3818          {
3819   1        Menu_Flag = 0;
3820   1        LCD1602_First_Line = RETURN_Select;
3821   1        LCD1602_Second_Line = Menu_Empty_Line;
3822   1      }
3823          
3824          /*第二级菜单*/
3825          //WIFI_SET_1_4下项目
3826          void TCP_PORT_SET_2_40()
3827          {
3828   1        //显示位超出复位0，切换为条目
3829   1        if(Menu_Edit==4){Menu_Edit=0;};
3830   1        
3831   1        //设定显示内容
3832   1        if(Menu_Edit>=1){
3833   2          //根据当前TCP端口设定菜单显示端口
3834   2          TCP_PORT_Number[5] = TcpServerPort/10000%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 63  

3835   2          TCP_PORT_Number[6] = TcpServerPort/1000%10+'0';
3836   2          TCP_PORT_Number[7] = TcpServerPort/100%10+'0';
3837   2          TCP_PORT_Number[8] = TcpServerPort/10%10+'0';
3838   2          TCP_PORT_Number[9] = TcpServerPort/1%10+'0';
3839   2          
3840   2          //设定TCP服务器的端口
3841   2          ATCIPSERVER[15] = TcpServerPort/10000%10+'0';
3842   2          ATCIPSERVER[16] = TcpServerPort/1000%10+'0';
3843   2          ATCIPSERVER[17] = TcpServerPort/100%10+'0';
3844   2          ATCIPSERVER[18] = TcpServerPort/10%10+'0';
3845   2          ATCIPSERVER[19] = TcpServerPort/1%10+'0';
3846   2          
3847   2          //显示当前页的所有项目
3848   2          LCD1602_First_Line = TCP_SERVER_PORT;
3849   2          LCD1602_Second_Line = TCP_PORT_Number;
3850   2        }
3851   1        
3852   1        
3853   1        //显示不同显示位时的状态
3854   1        switch(Menu_Edit)
3855   1        {
3856   2          case 0:   //条目状态
3857   2            
3858   2            Menu_Flag = 3;
3859   2          
3860   2            //复位菜单当前编辑值
3861   2            Menu_Edit_Value = 0;
3862   2          
3863   2            //显示当前页的所有项目
3864   2            LCD1602_First_Line = TCP_PORT_SET_Select;
3865   2            LCD1602_Second_Line = STA_IP;
3866   2            
3867   2            break;
3868   2            
3869   2          case 1:
3870   2            Menu_Flag = 4;
3871   2                
3872   2            //复位菜单当前编辑值
3873   2            Menu_Edit_Value = 0;
3874   2        
3875   2            break;
3876   2          
3877   2          case 2:
3878   2            Menu_Flag = 4;
3879   2            
3880   2            TcpServerPort += Menu_Edit_Value*100;
3881   2            if(TcpServerPort<1){
3882   3              TcpServerPort=1;
3883   3            }else if(TcpServerPort>65535){
3884   3              TcpServerPort=65535;
3885   3            }
3886   2            
3887   2            
3888   2            //复位菜单当前编辑值
3889   2            Menu_Edit_Value = 0;
3890   2          
3891   2            //前三位的闪烁
3892   2            if(Menu_Edit_Show==0){
3893   3              LCD1602_Second_Line[5] = ' ';
3894   3              LCD1602_Second_Line[6] = ' ';
3895   3              LCD1602_Second_Line[7] = ' ';
3896   3            }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 64  

3897   2      
3898   2            break;
3899   2            
3900   2          case 3:
3901   2            Menu_Flag = 4;
3902   2          
3903   2            TcpServerPort += Menu_Edit_Value;
3904   2            
3905   2            if(TcpServerPort<1){
3906   3              TcpServerPort=1;
3907   3            }else if(TcpServerPort>65535){
3908   3              TcpServerPort=65535;
3909   3            }
3910   2          
3911   2            //复位菜单当前编辑值
3912   2            Menu_Edit_Value = 0;
3913   2          
3914   2            //后两位的闪烁
3915   2            if(Menu_Edit_Show==0){
3916   3              LCD1602_Second_Line[8] = ' ';
3917   3              LCD1602_Second_Line[9] = ' ';
3918   3            }
3919   2      
3920   2            break;
3921   2          
3922   2        }
3923   1      }
3924          
3925          void STA_IP_2_41()
3926          {
3927   1        //显示位超出复位0，切换为条目
3928   1        if(Menu_Edit==2){Menu_Edit=0;};
3929   1        
3930   1        //显示不同显示位时的状态
3931   1        switch(Menu_Edit)
3932   1        {
3933   2          case 0:   //条目状态
3934   2            
3935   2            Menu_Flag = 3;
3936   2          
3937   2            //复位菜单当前编辑值
3938   2            Menu_Edit_Value = 0;
3939   2          
3940   2            //显示当前页的所有项目
3941   2            LCD1602_First_Line = TCP_PORT_SET;
3942   2            LCD1602_Second_Line = STA_IP_Select;
3943   2            
3944   2            break;
3945   2            
3946   2          case 1:
3947   2            Menu_Flag = 4;
3948   2                
3949   2            //复位菜单当前编辑值
3950   2            Menu_Edit_Value = 0;
3951   2          
3952   2            //显示当前页的所有项目
3953   2            LCD1602_First_Line = STA_IP_ADDRESS;
3954   2            LCD1602_Second_Line = STAIPTable;
3955   2              
3956   2            break;
3957   2        }
3958   1        
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 65  

3959   1      }
3960          
3961          void AP_IP_2_42()
3962          {
3963   1        //显示位超出复位0，切换为条目
3964   1        if(Menu_Edit==2){Menu_Edit=0;};
3965   1        
3966   1        //显示不同显示位时的状态
3967   1        switch(Menu_Edit)
3968   1        {
3969   2          case 0:   //条目状态
3970   2            
3971   2            Menu_Flag = 3;
3972   2          
3973   2            //复位菜单当前编辑值
3974   2            Menu_Edit_Value = 0;
3975   2          
3976   2            //显示当前页的所有项目
3977   2            LCD1602_First_Line = AP_IP_Select;
3978   2            LCD1602_Second_Line = RETURN;
3979   2            
3980   2            break;
3981   2            
3982   2          case 1:
3983   2            Menu_Flag = 4;
3984   2                
3985   2            //复位菜单当前编辑值
3986   2            Menu_Edit_Value = 0;
3987   2          
3988   2            //显示当前页的所有项目
3989   2            LCD1602_First_Line = AP_IP_ADDRESS;
3990   2            LCD1602_Second_Line = APIPTable;
3991   2              
3992   2            break;
3993   2        }
3994   1        
3995   1      }
3996          
3997          void RETURN_2_43()
3998          {
3999   1        Menu_Flag = 0;
4000   1        LCD1602_First_Line = AP_IP;
4001   1        LCD1602_Second_Line = RETURN_Select;
4002   1      }
4003          
4004          
4005          
4006          /*第三级菜单*/
4007          //TASK_SET下项目（TASK1-TASK1复用）
4008          void TASK_StartTime_SET_3_44()
4009          {
4010   1        //显示位超出复位0，切换为条目
4011   1        if(Menu_Edit==3){Menu_Edit=0;};
4012   1        
4013   1        //显示当前页的所有项目
4014   1        LCD1602_First_Line = TASK_StartTime;
4015   1        switch(TASK_SET_Number)
4016   1        {
4017   2          case 1: 
4018   2            LCD1602_First_Line[4]='1';
4019   2            //1234分钟
4020   2            //取出小时
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 66  

4021   2            //1234/60  =  20小时   20x60=1200  余数34
4022   2            //1299/60  =  21小时   21x60=1260  余数39
4023   2            
4024   2            Time_Minute[3]=Task1_StartTime/60/10%10+'0';
4025   2            Time_Minute[4]=Task1_StartTime/60/1%10+'0';
4026   2            Time_Minute[6]=(Task1_StartTime-(Task1_StartTime/60)*60)/10%10+'0';
4027   2            Time_Minute[7]=(Task1_StartTime-(Task1_StartTime/60)*60)/1%10+'0';
4028   2            break;
4029   2          case 2: 
4030   2            LCD1602_First_Line[4]='2';
4031   2            Time_Minute[3]=Task2_StartTime/60/10%10+'0';
4032   2            Time_Minute[4]=Task2_StartTime/60/1%10+'0';
4033   2            Time_Minute[6]=(Task2_StartTime-(Task2_StartTime/60)*60)/10%10+'0';
4034   2            Time_Minute[7]=(Task2_StartTime-(Task2_StartTime/60)*60)/1%10+'0';
4035   2            break;
4036   2          case 3: 
4037   2            LCD1602_First_Line[4]='3';
4038   2            Time_Minute[3]=Task3_StartTime/60/10%10+'0';
4039   2            Time_Minute[4]=Task3_StartTime/60/1%10+'0';
4040   2            Time_Minute[6]=(Task3_StartTime-(Task3_StartTime/60)*60)/10%10+'0';
4041   2            Time_Minute[7]=(Task3_StartTime-(Task3_StartTime/60)*60)/1%10+'0';
4042   2            break;
4043   2          case 4: 
4044   2            LCD1602_First_Line[4]='4';
4045   2            Time_Minute[3]=Task4_StartTime/60/10%10+'0';
4046   2            Time_Minute[4]=Task4_StartTime/60/1%10+'0';
4047   2            Time_Minute[6]=(Task4_StartTime-(Task4_StartTime/60)*60)/10%10+'0';
4048   2            Time_Minute[7]=(Task4_StartTime-(Task4_StartTime/60)*60)/1%10+'0';
4049   2            break;
4050   2          case 5: 
4051   2            LCD1602_First_Line[4]='5';
4052   2            Time_Minute[3]=Task5_StartTime/60/10%10+'0';
4053   2            Time_Minute[4]=Task5_StartTime/60/1%10+'0';
4054   2            Time_Minute[6]=(Task5_StartTime-(Task5_StartTime/60)*60)/10%10+'0';
4055   2            Time_Minute[7]=(Task5_StartTime-(Task5_StartTime/60)*60)/1%10+'0';
4056   2            break;
4057   2          case 6: 
4058   2            LCD1602_First_Line[4]='6';
4059   2            Time_Minute[3]=Task6_StartTime/60/10%10+'0';
4060   2            Time_Minute[4]=Task6_StartTime/60/1%10+'0';
4061   2            Time_Minute[6]=(Task6_StartTime-(Task6_StartTime/60)*60)/10%10+'0';
4062   2            Time_Minute[7]=(Task6_StartTime-(Task6_StartTime/60)*60)/1%10+'0';
4063   2            break;
4064   2        }
4065   1        LCD1602_Second_Line = Time_Minute;
4066   1        
4067   1        //显示不同显示位时的状态
4068   1        switch(Menu_Edit)
4069   1        {
4070   2          case 0:   //条目状态
4071   2            
4072   2            Menu_Flag = 3;
4073   2          
4074   2            //复位菜单当前编辑值
4075   2            Menu_Edit_Value = 0;
4076   2            
4077   2            
4078   2          
4079   2            break;
4080   2            
4081   2          case 1:
4082   2            Menu_Flag = 4;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 67  

4083   2          
4084   2            switch(TASK_SET_Number)
4085   2            {
4086   3              case 1:
4087   3                Task1_StartTime+=Menu_Edit_Value*60;
4088   3                if(Task1_StartTime<0){Task1_StartTime=0;}
4089   3                else if(Task1_StartTime>1439){Task1_StartTime=1439;}
4090   3                break;
4091   3              
4092   3              case 2:
4093   3                Task2_StartTime+=Menu_Edit_Value*60;
4094   3                if(Task2_StartTime<0){Task2_StartTime=0;}
4095   3                else if(Task2_StartTime>1439){Task2_StartTime=1439;}
4096   3                break;
4097   3                
4098   3              case 3:
4099   3                Task3_StartTime+=Menu_Edit_Value*60;
4100   3                if(Task3_StartTime<0){Task3_StartTime=0;}
4101   3                else if(Task3_StartTime>1439){Task3_StartTime=1439;}
4102   3                break;
4103   3                
4104   3              case 4:
4105   3                Task4_StartTime+=Menu_Edit_Value*60;
4106   3                if(Task4_StartTime<0){Task4_StartTime=0;}
4107   3                else if(Task4_StartTime>1439){Task4_StartTime=1439;}
4108   3                break;
4109   3                
4110   3              case 5:
4111   3                Task5_StartTime+=Menu_Edit_Value*60;
4112   3                if(Task5_StartTime<0){Task5_StartTime=0;}
4113   3                else if(Task5_StartTime>1439){Task5_StartTime=1439;}
4114   3                break;
4115   3                
4116   3              case 6:
4117   3                Task6_StartTime+=Menu_Edit_Value*60;
4118   3                if(Task6_StartTime<0){Task6_StartTime=0;}
4119   3                else if(Task6_StartTime>1439){Task6_StartTime=1439;}
4120   3                break;
4121   3            }
4122   2          
4123   2            //复位菜单当前编辑值
4124   2            Menu_Edit_Value = 0;
4125   2            
4126   2            
4127   2            
4128   2            //当前选中条目的闪烁
4129   2            //小时的闪烁
4130   2            if(Menu_Edit_Show==0){
4131   3              LCD1602_Second_Line[3] = ' ';
4132   3              LCD1602_Second_Line[4] = ' ';
4133   3            }
4134   2            break;
4135   2            
4136   2          case 2:
4137   2            Menu_Flag = 4;
4138   2          
4139   2            switch(TASK_SET_Number)
4140   2            {
4141   3              case 1:
4142   3                Task1_StartTime+=Menu_Edit_Value;
4143   3                if(Task1_StartTime<0){Task1_StartTime=0;}
4144   3                else if(Task1_StartTime>1439){Task1_StartTime=1439;}
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 68  

4145   3                break;
4146   3              
4147   3              case 2:
4148   3                Task2_StartTime+=Menu_Edit_Value;
4149   3                if(Task2_StartTime<0){Task2_StartTime=0;}
4150   3                else if(Task2_StartTime>1439){Task2_StartTime=1439;}
4151   3                break;
4152   3              
4153   3              case 3:
4154   3                Task3_StartTime+=Menu_Edit_Value;
4155   3                if(Task3_StartTime<0){Task3_StartTime=0;}
4156   3                else if(Task3_StartTime>1439){Task3_StartTime=1439;}
4157   3                break;
4158   3                
4159   3              case 4:
4160   3                Task4_StartTime+=Menu_Edit_Value;
4161   3                if(Task4_StartTime<0){Task4_StartTime=0;}
4162   3                else if(Task4_StartTime>1439){Task4_StartTime=1439;}
4163   3                break;
4164   3              
4165   3              case 5:
4166   3                Task5_StartTime+=Menu_Edit_Value;
4167   3                if(Task5_StartTime<0){Task5_StartTime=0;}
4168   3                else if(Task5_StartTime>1439){Task5_StartTime=1439;}
4169   3                break;
4170   3              
4171   3              case 6:
4172   3                Task6_StartTime+=Menu_Edit_Value;
4173   3                if(Task6_StartTime<0){Task6_StartTime=0;}
4174   3                else if(Task6_StartTime>1439){Task6_StartTime=1439;}
4175   3                break;
4176   3            }
4177   2          
4178   2            //复位菜单当前编辑值
4179   2            Menu_Edit_Value = 0;
4180   2            
4181   2            
4182   2            
4183   2            //当前选中条目的闪烁
4184   2            //分钟的闪烁
4185   2            if(Menu_Edit_Show==0){
4186   3              LCD1602_Second_Line[6] = ' ';
4187   3              LCD1602_Second_Line[7] = ' ';
4188   3            }
4189   2            break;
4190   2        }
4191   1        
4192   1      }
4193          
4194          void TASK_EndTime_SET_3_45()
4195          {
4196   1        //显示位超出复位0，切换为条目
4197   1        if(Menu_Edit==3){Menu_Edit=0;};
4198   1        
4199   1        //显示当前页的所有项目
4200   1        LCD1602_First_Line = TASK_EndTime;
4201   1        switch(TASK_SET_Number)
4202   1        {
4203   2          case 1: 
4204   2            LCD1602_First_Line[4]='1';
4205   2            Time_Minute[3]=Task1_EndTime/60/10%10+'0';
4206   2            Time_Minute[4]=Task1_EndTime/60/1%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 69  

4207   2            Time_Minute[6]=(Task1_EndTime-(Task1_EndTime/60)*60)/10%10+'0';
4208   2            Time_Minute[7]=(Task1_EndTime-(Task1_EndTime/60)*60)/1%10+'0';
4209   2            break;
4210   2          case 2: 
4211   2            LCD1602_First_Line[4]='2';
4212   2            Time_Minute[3]=Task2_EndTime/60/10%10+'0';
4213   2            Time_Minute[4]=Task2_EndTime/60/1%10+'0';
4214   2            Time_Minute[6]=(Task2_EndTime-(Task2_EndTime/60)*60)/10%10+'0';
4215   2            Time_Minute[7]=(Task2_EndTime-(Task2_EndTime/60)*60)/1%10+'0';
4216   2            break;
4217   2          case 3: 
4218   2            LCD1602_First_Line[4]='3';
4219   2            Time_Minute[3]=Task3_EndTime/60/10%10+'0';
4220   2            Time_Minute[4]=Task3_EndTime/60/1%10+'0';
4221   2            Time_Minute[6]=(Task3_EndTime-(Task3_EndTime/60)*60)/10%10+'0';
4222   2            Time_Minute[7]=(Task3_EndTime-(Task3_EndTime/60)*60)/1%10+'0';
4223   2            break;
4224   2          case 4: 
4225   2            LCD1602_First_Line[4]='4';
4226   2            Time_Minute[3]=Task4_EndTime/60/10%10+'0';
4227   2            Time_Minute[4]=Task4_EndTime/60/1%10+'0';
4228   2            Time_Minute[6]=(Task4_EndTime-(Task4_EndTime/60)*60)/10%10+'0';
4229   2            Time_Minute[7]=(Task4_EndTime-(Task4_EndTime/60)*60)/1%10+'0';
4230   2            break;
4231   2          case 5: 
4232   2            LCD1602_First_Line[4]='5';
4233   2            Time_Minute[3]=Task5_EndTime/60/10%10+'0';
4234   2            Time_Minute[4]=Task5_EndTime/60/1%10+'0';
4235   2            Time_Minute[6]=(Task5_EndTime-(Task5_EndTime/60)*60)/10%10+'0';
4236   2            Time_Minute[7]=(Task5_EndTime-(Task5_EndTime/60)*60)/1%10+'0';
4237   2            break;
4238   2          case 6: 
4239   2            LCD1602_First_Line[4]='6';
4240   2            Time_Minute[3]=Task6_EndTime/60/10%10+'0';
4241   2            Time_Minute[4]=Task6_EndTime/60/1%10+'0';
4242   2            Time_Minute[6]=(Task6_EndTime-(Task6_EndTime/60)*60)/10%10+'0';
4243   2            Time_Minute[7]=(Task6_EndTime-(Task6_EndTime/60)*60)/1%10+'0';
4244   2            break;
4245   2        }
4246   1        LCD1602_Second_Line = Time_Minute;
4247   1        
4248   1        //显示不同显示位时的状态
4249   1        switch(Menu_Edit)
4250   1        {
4251   2          case 0:   //条目状态
4252   2            
4253   2            Menu_Flag = 3;
4254   2          
4255   2            //复位菜单当前编辑值
4256   2            Menu_Edit_Value = 0;
4257   2            
4258   2            
4259   2          
4260   2            break;
4261   2            
4262   2          case 1:
4263   2            Menu_Flag = 4;
4264   2          
4265   2            switch(TASK_SET_Number)
4266   2            {
4267   3              case 1:
4268   3                Task1_EndTime+=Menu_Edit_Value*60;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 70  

4269   3                if(Task1_EndTime<0){Task1_EndTime=0;}
4270   3                else if(Task1_EndTime>1439){Task1_EndTime=1439;}
4271   3                break;
4272   3              
4273   3              case 2:
4274   3                Task2_EndTime+=Menu_Edit_Value*60;
4275   3                if(Task2_EndTime<0){Task2_EndTime=0;}
4276   3                else if(Task2_EndTime>1439){Task2_EndTime=1439;}
4277   3                break;
4278   3                
4279   3              case 3:
4280   3                Task3_EndTime+=Menu_Edit_Value*60;
4281   3                if(Task3_EndTime<0){Task3_EndTime=0;}
4282   3                else if(Task3_EndTime>1439){Task3_EndTime=1439;}
4283   3                break;
4284   3                
4285   3              case 4:
4286   3                Task4_EndTime+=Menu_Edit_Value*60;
4287   3                if(Task4_EndTime<0){Task4_EndTime=0;}
4288   3                else if(Task4_EndTime>1439){Task4_EndTime=1439;}
4289   3                break;
4290   3                
4291   3              case 5:
4292   3                Task5_EndTime+=Menu_Edit_Value*60;
4293   3                if(Task5_EndTime<0){Task5_EndTime=0;}
4294   3                else if(Task5_EndTime>1439){Task5_EndTime=1439;}
4295   3                break;
4296   3                
4297   3              case 6:
4298   3                Task6_EndTime+=Menu_Edit_Value*60;
4299   3                if(Task6_EndTime<0){Task6_EndTime=0;}
4300   3                else if(Task6_EndTime>1439){Task6_EndTime=1439;}
4301   3                break;
4302   3            }
4303   2          
4304   2            //复位菜单当前编辑值
4305   2            Menu_Edit_Value = 0;
4306   2            
4307   2            
4308   2            
4309   2            //当前选中条目的闪烁
4310   2            //小时的闪烁
4311   2            if(Menu_Edit_Show==0){
4312   3              LCD1602_Second_Line[3] = ' ';
4313   3              LCD1602_Second_Line[4] = ' ';
4314   3            }
4315   2            break;
4316   2            
4317   2          case 2:
4318   2            Menu_Flag = 4;
4319   2          
4320   2            switch(TASK_SET_Number)
4321   2            {
4322   3              case 1:
4323   3                Task1_EndTime+=Menu_Edit_Value;
4324   3                if(Task1_EndTime<0){Task1_EndTime=0;}
4325   3                else if(Task1_EndTime>1439){Task1_EndTime=1439;}
4326   3                break;
4327   3              
4328   3              case 2:
4329   3                Task2_EndTime+=Menu_Edit_Value;
4330   3                if(Task2_EndTime<0){Task2_EndTime=0;}
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 71  

4331   3                else if(Task2_EndTime>1439){Task2_EndTime=1439;}
4332   3                break;
4333   3              
4334   3              case 3:
4335   3                Task3_EndTime+=Menu_Edit_Value;
4336   3                if(Task3_EndTime<0){Task3_EndTime=0;}
4337   3                else if(Task3_EndTime>1439){Task3_EndTime=1439;}
4338   3                break;
4339   3                
4340   3              case 4:
4341   3                Task4_EndTime+=Menu_Edit_Value;
4342   3                if(Task4_EndTime<0){Task4_EndTime=0;}
4343   3                else if(Task4_EndTime>1439){Task4_EndTime=1439;}
4344   3                break;
4345   3              
4346   3              case 5:
4347   3                Task5_EndTime+=Menu_Edit_Value;
4348   3                if(Task5_EndTime<0){Task5_EndTime=0;}
4349   3                else if(Task5_EndTime>1439){Task5_EndTime=1439;}
4350   3                break;
4351   3              
4352   3              case 6:
4353   3                Task6_EndTime+=Menu_Edit_Value;
4354   3                if(Task6_EndTime<0){Task6_EndTime=0;}
4355   3                else if(Task6_EndTime>1439){Task6_EndTime=1439;}
4356   3                break;
4357   3            }
4358   2          
4359   2            //复位菜单当前编辑值
4360   2            Menu_Edit_Value = 0;
4361   2            
4362   2            
4363   2            
4364   2            //当前选中条目的闪烁
4365   2            //分钟的闪烁
4366   2            if(Menu_Edit_Show==0){
4367   3              LCD1602_Second_Line[6] = ' ';
4368   3              LCD1602_Second_Line[7] = ' ';
4369   3            }
4370   2            break;
4371   2        }
4372   1      }
4373          
4374          void TASK_OverTime_SET_3_46()
4375          {
4376   1        //显示位超出复位0，切换为条目
4377   1        if(Menu_Edit==5){Menu_Edit=0;};
4378   1        
4379   1        //显示当前页的所有项目
4380   1        LCD1602_First_Line = TASK_OverTime;
4381   1        switch(TASK_SET_Number)
4382   1        {
4383   2          case 1: 
4384   2            LCD1602_First_Line[4]='1';
4385   2            
4386   2            //864000 (100MS)
4387   2            //首先将864000个100MS转化成小时
4388   2            //   /10转换成S  /60转换成分钟 再/60转换成小时 
4389   2          //  Time_100MS[2]=Task1_OverTime/2/10/60/60/10%10+'0';
4390   2          //  Time_100MS[3]=Task1_OverTime/2/10/60/60/1%10+'0';
4391   2          
4392   2            //345643(100ms)
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 72  

4393   2            //345643-9*36000=345643-324000=21643(100MS)
4394   2            //转换成小时
4395   2            //345643/10/60/60=9.60119444小时
4396   2            //转换成分钟
4397   2            //345643/10/60=576.071667分钟
4398   2          
4399   2            //691286
4400   2            //获取小时信息
4401   2            Time_100MS[1]=Task1_OverTime/10/60/60/2/1000%10+'0';
4402   2            Time_100MS[2]=Task1_OverTime/10/60/60/2/100%10+'0';
4403   2            Time_100MS[3]=Task1_OverTime/10/60/60/2/10%10+'0';
4404   2            Time_100MS[4]=Task1_OverTime/10/60/60/2/1%10+'0';
4405   2          
4406   2            //获取分钟信息
4407   2            //总时间减去小时部分，剩下分钟部分
4408   2            //总时间转换成分钟
4409   2            Time_100MS[6]=((Task1_OverTime/10/60/2)-(Task1_OverTime/10/60/60/2)*60)/10%10+'0';
4410   2            Time_100MS[7]=((Task1_OverTime/10/60/2)-(Task1_OverTime/10/60/60/2)*60)/1%10+'0';
4411   2            
4412   2            //获取秒信息
4413   2            Time_100MS[9]=((Task1_OverTime/10/2)-(Task1_OverTime/10/60/2)*60)/10%10+'0';
4414   2            Time_100MS[10]=((Task1_OverTime/10/2)-(Task1_OverTime/10/60/2)*60)/1%10+'0';
4415   2          
4416   2            //获取100MS信息   
4417   2            Time_100MS[12]=((Task1_OverTime/2)-(Task1_OverTime/10/2)*10)/10%10+'0';
4418   2            Time_100MS[13]=((Task1_OverTime/2)-(Task1_OverTime/10/2)*10)/1%10+'0';
4419   2            break;
4420   2          case 2: 
4421   2            LCD1602_First_Line[4]='2';
4422   2            
4423   2            Time_100MS[1]=Task2_OverTime/10/60/60/2/1000%10+'0';
4424   2            Time_100MS[2]=Task2_OverTime/10/60/60/2/100%10+'0';
4425   2            Time_100MS[3]=Task2_OverTime/10/60/60/2/10%10+'0';
4426   2            Time_100MS[4]=Task2_OverTime/10/60/60/2/1%10+'0';
4427   2          
4428   2            Time_100MS[6]=((Task2_OverTime/10/60/2)-(Task2_OverTime/10/60/60/2)*60)/10%10+'0';
4429   2            Time_100MS[7]=((Task2_OverTime/10/60/2)-(Task2_OverTime/10/60/60/2)*60)/1%10+'0';
4430   2            
4431   2            Time_100MS[9]=((Task2_OverTime/10/2)-(Task2_OverTime/10/60/2)*60)/10%10+'0';
4432   2            Time_100MS[10]=((Task2_OverTime/10/2)-(Task2_OverTime/10/60/2)*60)/1%10+'0';
4433   2            
4434   2            Time_100MS[12]=((Task2_OverTime/2)-(Task2_OverTime/10/2)*10)/10%10+'0';
4435   2            Time_100MS[13]=((Task2_OverTime/2)-(Task2_OverTime/10/2)*10)/1%10+'0';
4436   2            
4437   2            break;
4438   2          case 3: 
4439   2            LCD1602_First_Line[4]='3';
4440   2            
4441   2            Time_100MS[1]=Task3_OverTime/10/60/60/2/1000%10+'0';
4442   2            Time_100MS[2]=Task3_OverTime/10/60/60/2/100%10+'0';
4443   2            Time_100MS[3]=Task3_OverTime/10/60/60/2/10%10+'0';
4444   2            Time_100MS[4]=Task3_OverTime/10/60/60/2/1%10+'0';
4445   2          
4446   2            Time_100MS[6]=((Task3_OverTime/10/60/2)-(Task3_OverTime/10/60/60/2)*60)/10%10+'0';
4447   2            Time_100MS[7]=((Task3_OverTime/10/60/2)-(Task3_OverTime/10/60/60/2)*60)/1%10+'0';
4448   2            
4449   2            Time_100MS[9]=((Task3_OverTime/10/2)-(Task3_OverTime/10/60/2)*60)/10%10+'0';
4450   2            Time_100MS[10]=((Task3_OverTime/10/2)-(Task3_OverTime/10/60/2)*60)/1%10+'0';
4451   2            
4452   2            Time_100MS[12]=((Task3_OverTime/2)-(Task3_OverTime/10/2)*10)/10%10+'0';
4453   2            Time_100MS[13]=((Task3_OverTime/2)-(Task3_OverTime/10/2)*10)/1%10+'0';
4454   2            
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 73  

4455   2            break;
4456   2          case 4: 
4457   2            LCD1602_First_Line[4]='4';
4458   2            
4459   2            Time_100MS[1]=Task4_OverTime/10/60/60/2/1000%10+'0';
4460   2            Time_100MS[2]=Task4_OverTime/10/60/60/2/100%10+'0';
4461   2            Time_100MS[3]=Task4_OverTime/10/60/60/2/10%10+'0';
4462   2            Time_100MS[4]=Task4_OverTime/10/60/60/2/1%10+'0';
4463   2          
4464   2            Time_100MS[6]=((Task4_OverTime/10/60/2)-(Task4_OverTime/10/60/60/2)*60)/10%10+'0';
4465   2            Time_100MS[7]=((Task4_OverTime/10/60/2)-(Task4_OverTime/10/60/60/2)*60)/1%10+'0';
4466   2            
4467   2            Time_100MS[9]=((Task4_OverTime/10/2)-(Task4_OverTime/10/60/2)*60)/10%10+'0';
4468   2            Time_100MS[10]=((Task4_OverTime/10/2)-(Task4_OverTime/10/60/2)*60)/1%10+'0';
4469   2            
4470   2            Time_100MS[12]=((Task4_OverTime/2)-(Task4_OverTime/10/2)*10)/10%10+'0';
4471   2            Time_100MS[13]=((Task4_OverTime/2)-(Task4_OverTime/10/2)*10)/1%10+'0';
4472   2            
4473   2            break;
4474   2          case 5: 
4475   2            LCD1602_First_Line[4]='5';
4476   2            
4477   2            Time_100MS[1]=Task5_OverTime/10/60/60/2/1000%10+'0';
4478   2            Time_100MS[2]=Task5_OverTime/10/60/60/2/100%10+'0';
4479   2            Time_100MS[3]=Task5_OverTime/10/60/60/2/10%10+'0';
4480   2            Time_100MS[4]=Task5_OverTime/10/60/60/2/1%10+'0';
4481   2          
4482   2            Time_100MS[6]=((Task5_OverTime/10/60/2)-(Task5_OverTime/10/60/60/2)*60)/10%10+'0';
4483   2            Time_100MS[7]=((Task5_OverTime/10/60/2)-(Task5_OverTime/10/60/60/2)*60)/1%10+'0';
4484   2            
4485   2            Time_100MS[9]=((Task5_OverTime/10/2)-(Task5_OverTime/10/60/2)*60)/10%10+'0';
4486   2            Time_100MS[10]=((Task5_OverTime/10/2)-(Task5_OverTime/10/60/2)*60)/1%10+'0';
4487   2            
4488   2            Time_100MS[12]=((Task5_OverTime/2)-(Task5_OverTime/10/2)*10)/10%10+'0';
4489   2            Time_100MS[13]=((Task5_OverTime/2)-(Task5_OverTime/10/2)*10)/1%10+'0';
4490   2            
4491   2            break;
4492   2          case 6: 
4493   2            LCD1602_First_Line[4]='6';
4494   2            
4495   2            Time_100MS[1]=Task6_OverTime/10/60/60/2/1000%10+'0';
4496   2            Time_100MS[2]=Task6_OverTime/10/60/60/2/100%10+'0';
4497   2            Time_100MS[3]=Task6_OverTime/10/60/60/2/10%10+'0';
4498   2            Time_100MS[4]=Task6_OverTime/10/60/60/2/1%10+'0';
4499   2          
4500   2            Time_100MS[6]=((Task6_OverTime/10/60/2)-(Task6_OverTime/10/60/60/2)*60)/10%10+'0';
4501   2            Time_100MS[7]=((Task6_OverTime/10/60/2)-(Task6_OverTime/10/60/60/2)*60)/1%10+'0';
4502   2            
4503   2            Time_100MS[9]=((Task6_OverTime/10/2)-(Task6_OverTime/10/60/2)*60)/10%10+'0';
4504   2            Time_100MS[10]=((Task6_OverTime/10/2)-(Task6_OverTime/10/60/2)*60)/1%10+'0';
4505   2            
4506   2            Time_100MS[12]=((Task6_OverTime/2)-(Task6_OverTime/10/2)*10)/10%10+'0';
4507   2            Time_100MS[13]=((Task6_OverTime/2)-(Task6_OverTime/10/2)*10)/1%10+'0';
4508   2            
4509   2            break;
4510   2        }
4511   1        LCD1602_Second_Line = Time_100MS;
4512   1        
4513   1        //显示不同显示位时的状态
4514   1        switch(Menu_Edit)
4515   1        {
4516   2          case 0:   //条目状态
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 74  

4517   2            
4518   2            Menu_Flag = 3;
4519   2          
4520   2            //复位菜单当前编辑值
4521   2            Menu_Edit_Value = 0;
4522   2            
4523   2            
4524   2          
4525   2            break;
4526   2            
4527   2          case 1:  //第一个编辑位，修改小时
4528   2            Menu_Flag = 4;
4529   2          
4530   2            switch(TASK_SET_Number)
4531   2            {
4532   3              case 1:
4533   3                Task1_OverTime+=Menu_Edit_Value*36000*2;
4534   3                if(Task1_OverTime<0){Task1_OverTime=0;}
4535   3                break;
4536   3              
4537   3              case 2:
4538   3                Task2_OverTime+=Menu_Edit_Value*36000*2;
4539   3                if(Task2_OverTime<0){Task2_OverTime=0;}
4540   3                break;
4541   3                
4542   3              case 3:
4543   3                Task3_OverTime+=Menu_Edit_Value*36000*2;
4544   3                if(Task3_OverTime<0){Task3_OverTime=0;}
4545   3                break;
4546   3                
4547   3              case 4:
4548   3                Task4_OverTime+=Menu_Edit_Value*36000*2;
4549   3                if(Task4_OverTime<0){Task4_OverTime=0;}
4550   3                break;
4551   3                
4552   3              case 5:
4553   3                Task5_OverTime+=Menu_Edit_Value*36000*2;
4554   3                if(Task5_OverTime<0){Task5_OverTime=0;}
4555   3                break;
4556   3                
4557   3              case 6:
4558   3                Task6_OverTime+=Menu_Edit_Value*36000*2;
4559   3                if(Task6_OverTime<0){Task6_OverTime=0;}
4560   3                break;
4561   3            }
4562   2          
4563   2            //复位菜单当前编辑值
4564   2            Menu_Edit_Value = 0;
4565   2            
4566   2            
4567   2            
4568   2            //当前选中条目的闪烁
4569   2            //小时的闪烁
4570   2            if(Menu_Edit_Show==0){
4571   3              LCD1602_Second_Line[1] = ' ';
4572   3              LCD1602_Second_Line[2] = ' ';
4573   3              LCD1602_Second_Line[3] = ' ';
4574   3              LCD1602_Second_Line[4] = ' ';
4575   3            }
4576   2            break;
4577   2            
4578   2          case 2:
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 75  

4579   2            Menu_Flag = 4;
4580   2          
4581   2            switch(TASK_SET_Number)
4582   2            {
4583   3              case 1:
4584   3                Task1_OverTime+=Menu_Edit_Value*600*2;
4585   3                if(Task1_OverTime<0){Task1_OverTime=0;}
4586   3                break;
4587   3              
4588   3              case 2:
4589   3                Task2_OverTime+=Menu_Edit_Value*600*2;
4590   3                if(Task2_OverTime<0){Task2_OverTime=0;}
4591   3                break;
4592   3              
4593   3              case 3:
4594   3                Task3_OverTime+=Menu_Edit_Value*600*2;
4595   3                if(Task3_OverTime<0){Task3_OverTime=0;}
4596   3                break;
4597   3                
4598   3              case 4:
4599   3                Task4_OverTime+=Menu_Edit_Value*600*2;
4600   3                if(Task4_OverTime<0){Task4_OverTime=0;}
4601   3                break;
4602   3              
4603   3              case 5:
4604   3                Task5_OverTime+=Menu_Edit_Value*600*2;
4605   3                if(Task5_OverTime<0){Task5_OverTime=0;}
4606   3                break;
4607   3              
4608   3              case 6:
4609   3                Task6_OverTime+=Menu_Edit_Value*600*2;
4610   3                if(Task6_OverTime<0){Task6_OverTime=0;}
4611   3                break;
4612   3            }
4613   2          
4614   2            //复位菜单当前编辑值
4615   2            Menu_Edit_Value = 0;
4616   2            
4617   2            
4618   2            
4619   2            //当前选中条目的闪烁
4620   2            //分钟的闪烁
4621   2            if(Menu_Edit_Show==0){
4622   3              LCD1602_Second_Line[6] = ' ';
4623   3              LCD1602_Second_Line[7] = ' ';
4624   3            }
4625   2            break;
4626   2            
4627   2          case 3:  //第三个编辑位，秒的设定
4628   2            Menu_Flag = 4;
4629   2          
4630   2            switch(TASK_SET_Number)
4631   2            {
4632   3              case 1:
4633   3                Task1_OverTime+=Menu_Edit_Value*10*2;
4634   3                if(Task1_OverTime<0){Task1_OverTime=0;}
4635   3                break;
4636   3              
4637   3              case 2:
4638   3                Task2_OverTime+=Menu_Edit_Value*10*2;
4639   3                if(Task2_OverTime<0){Task2_OverTime=0;}
4640   3                break;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 76  

4641   3              
4642   3              case 3:
4643   3                Task3_OverTime+=Menu_Edit_Value*10*2;
4644   3                if(Task3_OverTime<0){Task3_OverTime=0;}
4645   3                break;
4646   3                
4647   3              case 4:
4648   3                Task4_OverTime+=Menu_Edit_Value*10*2;
4649   3                if(Task4_OverTime<0){Task4_OverTime=0;}
4650   3                break;
4651   3              
4652   3              case 5:
4653   3                Task5_OverTime+=Menu_Edit_Value*10*2;
4654   3                if(Task5_OverTime<0){Task5_OverTime=0;}
4655   3                break;
4656   3              
4657   3              case 6:
4658   3                Task6_OverTime+=Menu_Edit_Value*10*2;
4659   3                if(Task6_OverTime<0){Task6_OverTime=0;}
4660   3                break;
4661   3            }
4662   2          
4663   2            //复位菜单当前编辑值
4664   2            Menu_Edit_Value = 0;
4665   2            
4666   2            
4667   2            
4668   2            //当前选中条目的闪烁
4669   2            //分钟的闪烁
4670   2            if(Menu_Edit_Show==0){
4671   3              LCD1602_Second_Line[9] = ' ';
4672   3              LCD1602_Second_Line[10] = ' ';
4673   3            }
4674   2            break;
4675   2          
4676   2          case 4:  //第四个编辑位，100MS
4677   2            Menu_Flag = 4;
4678   2          
4679   2            switch(TASK_SET_Number)
4680   2            {
4681   3              case 1:
4682   3                Task1_OverTime+=Menu_Edit_Value*2;
4683   3                if(Task1_OverTime<0){Task1_OverTime=0;}
4684   3                break;
4685   3              
4686   3              case 2:
4687   3                Task2_OverTime+=Menu_Edit_Value*2;
4688   3                if(Task2_OverTime<0){Task2_OverTime=0;}
4689   3                break;
4690   3              
4691   3              case 3:
4692   3                Task3_OverTime+=Menu_Edit_Value*2;
4693   3                if(Task3_OverTime<0){Task3_OverTime=0;}
4694   3                break;
4695   3                
4696   3              case 4:
4697   3                Task4_OverTime+=Menu_Edit_Value*2;
4698   3                if(Task4_OverTime<0){Task4_OverTime=0;}
4699   3                break;
4700   3              
4701   3              case 5:
4702   3                Task5_OverTime+=Menu_Edit_Value*2;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 77  

4703   3                if(Task5_OverTime<0){Task5_OverTime=0;}
4704   3                break;
4705   3              
4706   3              case 6:
4707   3                Task6_OverTime+=Menu_Edit_Value*2;
4708   3                if(Task6_OverTime<0){Task6_OverTime=0;}
4709   3                break;
4710   3            }
4711   2          
4712   2            //复位菜单当前编辑值
4713   2            Menu_Edit_Value = 0;
4714   2            
4715   2            
4716   2            
4717   2            //当前选中条目的闪烁
4718   2            //分钟的闪烁
4719   2            if(Menu_Edit_Show==0){
4720   3              LCD1602_Second_Line[12] = ' ';
4721   3              LCD1602_Second_Line[13] = ' ';
4722   3            }
4723   2            break;
4724   2          
4725   2        }
4726   1      }
4727          
4728          void TASK_OverTime_MODE_SET_3_47()
4729          {
4730   1        //显示位超出复位0，切换为条目
4731   1        if(Menu_Edit==2){Menu_Edit=0;};
4732   1        
4733   1        //显示当前页的所有项目
4734   1        LCD1602_First_Line = TASK_OverTime;
4735   1        switch(TASK_SET_Number)
4736   1        {
4737   2          case 1: 
4738   2            LCD1602_First_Line[4]='1';
4739   2            if(Task1_OverTime_Reset==1){
4740   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_ON;
4741   3            }else{
4742   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_OFF;
4743   3            }
4744   2            
4745   2            break;
4746   2          case 2: 
4747   2            LCD1602_First_Line[4]='2';
4748   2            if(Task2_OverTime_Reset==1){
4749   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_ON;
4750   3            }else{
4751   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_OFF;
4752   3            }
4753   2            break;
4754   2          case 3: 
4755   2            LCD1602_First_Line[4]='3';
4756   2            if(Task3_OverTime_Reset==1){
4757   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_ON;
4758   3            }else{
4759   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_OFF;
4760   3            }
4761   2            break;
4762   2          case 4: 
4763   2            LCD1602_First_Line[4]='4';
4764   2            if(Task4_OverTime_Reset==1){
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 78  

4765   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_ON;
4766   3            }else{
4767   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_OFF;
4768   3            }
4769   2            break;
4770   2          case 5: 
4771   2            LCD1602_First_Line[4]='5';
4772   2            if(Task5_OverTime_Reset==1){
4773   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_ON;
4774   3            }else{
4775   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_OFF;
4776   3            }
4777   2            break;
4778   2          case 6: 
4779   2            LCD1602_First_Line[4]='6';
4780   2            if(Task6_OverTime_Reset==1){
4781   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_ON;
4782   3            }else{
4783   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_OFF;
4784   3            }
4785   2            break;
4786   2        }
4787   1        
4788   1        //显示不同显示位时的状态
4789   1        switch(Menu_Edit)
4790   1        {
4791   2          case 0:   //条目状态
4792   2            
4793   2            Menu_Flag = 3;
4794   2          
4795   2            //复位菜单当前编辑值
4796   2            Menu_Edit_Value = 0;
4797   2              
4798   2            break;
4799   2            
4800   2          case 1:  //第一个编辑位，开启或者关闭自动复位
4801   2            Menu_Flag = 4;
4802   2          
4803   2            switch(TASK_SET_Number)
4804   2            {
4805   3              case 1:
4806   3                //通过菜单编辑值来设定任务超时复位
4807   3                if(Menu_Edit_Value < 0){
4808   4                  Task1_OverTime_Reset = 1;
4809   4                }else if(Menu_Edit_Value > 0){
4810   4                  Task1_OverTime_Reset = 0;
4811   4                }
4812   3            
4813   3                //复位菜单当前编辑值
4814   3                Menu_Edit_Value = 0;
4815   3                break;
4816   3              case 2:
4817   3                //通过菜单编辑值来设定任务超时复位
4818   3                if(Menu_Edit_Value < 0){
4819   4                  Task2_OverTime_Reset = 1;
4820   4                }else if(Menu_Edit_Value > 0){
4821   4                  Task2_OverTime_Reset = 0;
4822   4                }
4823   3            
4824   3                //复位菜单当前编辑值
4825   3                Menu_Edit_Value = 0;
4826   3                break;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 79  

4827   3              case 3:
4828   3                //通过菜单编辑值来设定任务超时复位
4829   3                if(Menu_Edit_Value < 0){
4830   4                  Task3_OverTime_Reset = 1;
4831   4                }else if(Menu_Edit_Value > 0){
4832   4                  Task3_OverTime_Reset = 0;
4833   4                }
4834   3            
4835   3                //复位菜单当前编辑值
4836   3                Menu_Edit_Value = 0;
4837   3                break;
4838   3              case 4:
4839   3                //通过菜单编辑值来设定任务超时复位
4840   3                if(Menu_Edit_Value < 0){
4841   4                  Task4_OverTime_Reset = 1;
4842   4                }else if(Menu_Edit_Value > 0){
4843   4                  Task4_OverTime_Reset = 0;
4844   4                }
4845   3            
4846   3                //复位菜单当前编辑值
4847   3                Menu_Edit_Value = 0;
4848   3                break;
4849   3              case 5:
4850   3                //通过菜单编辑值来设定任务超时复位
4851   3                if(Menu_Edit_Value < 0){
4852   4                  Task5_OverTime_Reset = 1;
4853   4                }else if(Menu_Edit_Value > 0){
4854   4                  Task5_OverTime_Reset = 0;
4855   4                }
4856   3            
4857   3                //复位菜单当前编辑值
4858   3                Menu_Edit_Value = 0;
4859   3                break;
4860   3              case 6:
4861   3                //通过菜单编辑值来设定任务超时复位
4862   3                if(Menu_Edit_Value < 0){
4863   4                  Task6_OverTime_Reset = 1;
4864   4                }else if(Menu_Edit_Value > 0){
4865   4                  Task6_OverTime_Reset = 0;
4866   4                }
4867   3            
4868   3                //复位菜单当前编辑值
4869   3                Menu_Edit_Value = 0;
4870   3                break;
4871   3            }
4872   2            
4873   2              //当前选中条目的闪烁
4874   2            if(Menu_Edit_Show){  
4875   3              LCD1602_Second_Line = TASK_OverTime_AutoReset_Empty;
4876   3            }
4877   2            
4878   2            break;
4879   2          }
4880   1      }
4881          
4882          void TASK_OnTime_SET_3_48()
4883          {
4884   1        
4885   1        //显示位超出复位0，切换为条目
4886   1        if(Menu_Edit==5){Menu_Edit=0;};
4887   1        
4888   1        //显示当前页的所有项目
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 80  

4889   1        LCD1602_First_Line = TASK_OnTime;
4890   1        switch(TASK_SET_Number)
4891   1        {
4892   2          case 1: 
4893   2            LCD1602_First_Line[4]='1';
4894   2            
4895   2            //获取小时信息
4896   2            Time_100MS[1]=Task1_OnTime/10/60/60/2/1000%10+'0';
4897   2            Time_100MS[2]=Task1_OnTime/10/60/60/2/100%10+'0';
4898   2            Time_100MS[3]=Task1_OnTime/10/60/60/2/10%10+'0';
4899   2            Time_100MS[4]=Task1_OnTime/10/60/60/2/1%10+'0';
4900   2          
4901   2            //获取分钟信息
4902   2            //总时间减去小时部分，剩下分钟部分
4903   2            //总时间转换成分钟
4904   2            Time_100MS[6]=((Task1_OnTime/10/60/2)-(Task1_OnTime/10/60/60/2)*60)/10%10+'0';
4905   2            Time_100MS[7]=((Task1_OnTime/10/60/2)-(Task1_OnTime/10/60/60/2)*60)/1%10+'0';
4906   2            
4907   2            //获取秒信息
4908   2            Time_100MS[9]=((Task1_OnTime/10/2)-(Task1_OnTime/10/60/2)*60)/10%10+'0';
4909   2            Time_100MS[10]=((Task1_OnTime/10/2)-(Task1_OnTime/10/60/2)*60)/1%10+'0';
4910   2          
4911   2            //获取100MS信息   
4912   2            Time_100MS[12]=((Task1_OnTime/2)-(Task1_OnTime/10/2)*10)/10%10+'0';
4913   2            Time_100MS[13]=((Task1_OnTime/2)-(Task1_OnTime/10/2)*10)/1%10+'0';
4914   2            break;
4915   2          case 2: 
4916   2            LCD1602_First_Line[4]='2';
4917   2            //获取小时信息
4918   2            Time_100MS[1]=Task2_OnTime/10/60/60/2/1000%10+'0';
4919   2            Time_100MS[2]=Task2_OnTime/10/60/60/2/100%10+'0';
4920   2            Time_100MS[3]=Task2_OnTime/10/60/60/2/10%10+'0';
4921   2            Time_100MS[4]=Task2_OnTime/10/60/60/2/1%10+'0';
4922   2          
4923   2            //获取分钟信息
4924   2            //总时间减去小时部分，剩下分钟部分
4925   2            //总时间转换成分钟
4926   2            Time_100MS[6]=((Task2_OnTime/10/60/2)-(Task2_OnTime/10/60/60/2)*60)/10%10+'0';
4927   2            Time_100MS[7]=((Task2_OnTime/10/60/2)-(Task2_OnTime/10/60/60/2)*60)/1%10+'0';
4928   2            
4929   2            //获取秒信息
4930   2            Time_100MS[9]=((Task2_OnTime/10/2)-(Task2_OnTime/10/60/2)*60)/10%10+'0';
4931   2            Time_100MS[10]=((Task2_OnTime/10/2)-(Task2_OnTime/10/60/2)*60)/1%10+'0';
4932   2          
4933   2            //获取100MS信息   
4934   2            Time_100MS[12]=((Task2_OnTime/2)-(Task2_OnTime/10/2)*10)/10%10+'0';
4935   2            Time_100MS[13]=((Task2_OnTime/2)-(Task2_OnTime/10/2)*10)/1%10+'0';
4936   2            
4937   2            break;
4938   2          case 3: 
4939   2            LCD1602_First_Line[4]='3';
4940   2            //获取小时信息
4941   2            Time_100MS[1]=Task3_OnTime/10/60/60/2/1000%10+'0';
4942   2            Time_100MS[2]=Task3_OnTime/10/60/60/2/100%10+'0';
4943   2            Time_100MS[3]=Task3_OnTime/10/60/60/2/10%10+'0';
4944   2            Time_100MS[4]=Task3_OnTime/10/60/60/2/1%10+'0';
4945   2          
4946   2            //获取分钟信息
4947   2            //总时间减去小时部分，剩下分钟部分
4948   2            //总时间转换成分钟
4949   2            Time_100MS[6]=((Task3_OnTime/10/60/2)-(Task3_OnTime/10/60/60/2)*60)/10%10+'0';
4950   2            Time_100MS[7]=((Task3_OnTime/10/60/2)-(Task3_OnTime/10/60/60/2)*60)/1%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 81  

4951   2            
4952   2            //获取秒信息
4953   2            Time_100MS[9]=((Task3_OnTime/10/2)-(Task3_OnTime/10/60/2)*60)/10%10+'0';
4954   2            Time_100MS[10]=((Task3_OnTime/10/2)-(Task3_OnTime/10/60/2)*60)/1%10+'0';
4955   2          
4956   2            //获取100MS信息   
4957   2            Time_100MS[12]=((Task3_OnTime/2)-(Task3_OnTime/10/2)*10)/10%10+'0';
4958   2            Time_100MS[13]=((Task3_OnTime/2)-(Task3_OnTime/10/2)*10)/1%10+'0';
4959   2            
4960   2            break;
4961   2          case 4: 
4962   2            LCD1602_First_Line[4]='4';
4963   2            //获取小时信息
4964   2            Time_100MS[1]=Task4_OnTime/10/60/60/2/1000%10+'0';
4965   2            Time_100MS[2]=Task4_OnTime/10/60/60/2/100%10+'0';
4966   2            Time_100MS[3]=Task4_OnTime/10/60/60/2/10%10+'0';
4967   2            Time_100MS[4]=Task4_OnTime/10/60/60/2/1%10+'0';
4968   2          
4969   2            //获取分钟信息
4970   2            //总时间减去小时部分，剩下分钟部分
4971   2            //总时间转换成分钟
4972   2            Time_100MS[6]=((Task4_OnTime/10/60/2)-(Task4_OnTime/10/60/60/2)*60)/10%10+'0';
4973   2            Time_100MS[7]=((Task4_OnTime/10/60/2)-(Task4_OnTime/10/60/60/2)*60)/1%10+'0';
4974   2            
4975   2            //获取秒信息
4976   2            Time_100MS[9]=((Task4_OnTime/10/2)-(Task4_OnTime/10/60/2)*60)/10%10+'0';
4977   2            Time_100MS[10]=((Task4_OnTime/10/2)-(Task4_OnTime/10/60/2)*60)/1%10+'0';
4978   2          
4979   2            //获取100MS信息   
4980   2            Time_100MS[12]=((Task4_OnTime/2)-(Task4_OnTime/10/2)*10)/10%10+'0';
4981   2            Time_100MS[13]=((Task4_OnTime/2)-(Task4_OnTime/10/2)*10)/1%10+'0';
4982   2            
4983   2            break;
4984   2          case 5: 
4985   2            LCD1602_First_Line[4]='5';
4986   2            //获取小时信息
4987   2            Time_100MS[1]=Task5_OnTime/10/60/60/2/1000%10+'0';
4988   2            Time_100MS[2]=Task5_OnTime/10/60/60/2/100%10+'0';
4989   2            Time_100MS[3]=Task5_OnTime/10/60/60/2/10%10+'0';
4990   2            Time_100MS[4]=Task5_OnTime/10/60/60/2/1%10+'0';
4991   2          
4992   2            //获取分钟信息
4993   2            //总时间减去小时部分，剩下分钟部分
4994   2            //总时间转换成分钟
4995   2            Time_100MS[6]=((Task5_OnTime/10/60/2)-(Task5_OnTime/10/60/60/2)*60)/10%10+'0';
4996   2            Time_100MS[7]=((Task5_OnTime/10/60/2)-(Task5_OnTime/10/60/60/2)*60)/1%10+'0';
4997   2            
4998   2            //获取秒信息
4999   2            Time_100MS[9]=((Task5_OnTime/10/2)-(Task5_OnTime/10/60/2)*60)/10%10+'0';
5000   2            Time_100MS[10]=((Task5_OnTime/10/2)-(Task5_OnTime/10/60/2)*60)/1%10+'0';
5001   2          
5002   2            //获取100MS信息   
5003   2            Time_100MS[12]=((Task5_OnTime/2)-(Task5_OnTime/10/2)*10)/10%10+'0';
5004   2            Time_100MS[13]=((Task5_OnTime/2)-(Task5_OnTime/10/2)*10)/1%10+'0';
5005   2            
5006   2            break;
5007   2          case 6: 
5008   2            LCD1602_First_Line[4]='6';
5009   2            //获取小时信息
5010   2            Time_100MS[1]=Task6_OnTime/10/60/60/2/1000%10+'0';
5011   2            Time_100MS[2]=Task6_OnTime/10/60/60/2/100%10+'0';
5012   2            Time_100MS[3]=Task6_OnTime/10/60/60/2/10%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 82  

5013   2            Time_100MS[4]=Task6_OnTime/10/60/60/2/1%10+'0';
5014   2          
5015   2            //获取分钟信息
5016   2            //总时间减去小时部分，剩下分钟部分
5017   2            //总时间转换成分钟
5018   2            Time_100MS[6]=((Task6_OnTime/10/60/2)-(Task6_OnTime/10/60/60/2)*60)/10%10+'0';
5019   2            Time_100MS[7]=((Task6_OnTime/10/60/2)-(Task6_OnTime/10/60/60/2)*60)/1%10+'0';
5020   2            
5021   2            //获取秒信息
5022   2            Time_100MS[9]=((Task6_OnTime/10/2)-(Task6_OnTime/10/60/2)*60)/10%10+'0';
5023   2            Time_100MS[10]=((Task6_OnTime/10/2)-(Task6_OnTime/10/60/2)*60)/1%10+'0';
5024   2          
5025   2            //获取100MS信息   
5026   2            Time_100MS[12]=((Task6_OnTime/2)-(Task6_OnTime/10/2)*10)/10%10+'0';
5027   2            Time_100MS[13]=((Task6_OnTime/2)-(Task6_OnTime/10/2)*10)/1%10+'0';
5028   2            
5029   2            break;
5030   2        }
5031   1        LCD1602_Second_Line = Time_100MS;
5032   1        
5033   1        //显示不同显示位时的状态
5034   1        switch(Menu_Edit)
5035   1        {
5036   2          case 0:   //条目状态
5037   2            
5038   2            Menu_Flag = 3;
5039   2          
5040   2            //复位菜单当前编辑值
5041   2            Menu_Edit_Value = 0;
5042   2            
5043   2            break;
5044   2            
5045   2          case 1:  //第一个编辑位，修改小时
5046   2            Menu_Flag = 4;
5047   2          
5048   2            switch(TASK_SET_Number)
5049   2            {
5050   3              case 1:
5051   3                Task1_OnTime+=Menu_Edit_Value*36000*2;
5052   3                if(Task1_OnTime<0){Task1_OnTime=0;}
5053   3                break;
5054   3              
5055   3              case 2:
5056   3                Task2_OnTime+=Menu_Edit_Value*36000*2;
5057   3                if(Task2_OnTime<0){Task2_OnTime=0;}
5058   3                break;
5059   3                
5060   3              case 3:
5061   3                Task3_OnTime+=Menu_Edit_Value*36000*2;
5062   3                if(Task3_OnTime<0){Task3_OnTime=0;}
5063   3                break;
5064   3                
5065   3              case 4:
5066   3                Task4_OnTime+=Menu_Edit_Value*36000*2;
5067   3                if(Task4_OnTime<0){Task4_OnTime=0;}
5068   3                break;
5069   3                
5070   3              case 5:
5071   3                Task5_OnTime+=Menu_Edit_Value*36000*2;
5072   3                if(Task5_OnTime<0){Task5_OnTime=0;}
5073   3                break;
5074   3                
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 83  

5075   3              case 6:
5076   3                Task6_OnTime+=Menu_Edit_Value*36000*2;
5077   3                if(Task6_OnTime<0){Task6_OnTime=0;}
5078   3                break;
5079   3            }
5080   2          
5081   2            //复位菜单当前编辑值
5082   2            Menu_Edit_Value = 0;
5083   2            
5084   2            //当前选中条目的闪烁
5085   2            //小时的闪烁
5086   2            if(Menu_Edit_Show==0){
5087   3              LCD1602_Second_Line[1] = ' ';
5088   3              LCD1602_Second_Line[2] = ' ';
5089   3              LCD1602_Second_Line[3] = ' ';
5090   3              LCD1602_Second_Line[4] = ' ';
5091   3            }
5092   2            break;
5093   2            
5094   2          case 2:
5095   2            Menu_Flag = 4;
5096   2          
5097   2            switch(TASK_SET_Number)
5098   2            {
5099   3              case 1:
5100   3                Task1_OnTime+=Menu_Edit_Value*600*2;
5101   3                if(Task1_OnTime<0){Task1_OnTime=0;}
5102   3                break;
5103   3              
5104   3              case 2:
5105   3                Task2_OnTime+=Menu_Edit_Value*600*2;
5106   3                if(Task2_OnTime<0){Task2_OnTime=0;}
5107   3                break;
5108   3              
5109   3              case 3:
5110   3                Task3_OnTime+=Menu_Edit_Value*600*2;
5111   3                if(Task3_OnTime<0){Task3_OnTime=0;}
5112   3                break;
5113   3                
5114   3              case 4:
5115   3                Task4_OnTime+=Menu_Edit_Value*600*2;
5116   3                if(Task4_OnTime<0){Task4_OnTime=0;}
5117   3                break;
5118   3              
5119   3              case 5:
5120   3                Task5_OnTime+=Menu_Edit_Value*600*2;
5121   3                if(Task5_OnTime<0){Task5_OnTime=0;}
5122   3                break;
5123   3              
5124   3              case 6:
5125   3                Task6_OnTime+=Menu_Edit_Value*600*2;
5126   3                if(Task6_OnTime<0){Task6_OnTime=0;}
5127   3                break;
5128   3            }
5129   2          
5130   2            //复位菜单当前编辑值
5131   2            Menu_Edit_Value = 0;
5132   2            
5133   2            //当前选中条目的闪烁
5134   2            //分钟的闪烁
5135   2            if(Menu_Edit_Show==0){
5136   3              LCD1602_Second_Line[6] = ' ';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 84  

5137   3              LCD1602_Second_Line[7] = ' ';
5138   3            }
5139   2            break;
5140   2            
5141   2          case 3:  //第三个编辑位，秒的设定
5142   2            Menu_Flag = 4;
5143   2          
5144   2            switch(TASK_SET_Number)
5145   2            {
5146   3              case 1:
5147   3                Task1_OnTime+=Menu_Edit_Value*10*2;
5148   3                if(Task1_OnTime<0){Task1_OnTime=0;}
5149   3                break;
5150   3              
5151   3              case 2:
5152   3                Task2_OnTime+=Menu_Edit_Value*10*2;
5153   3                if(Task2_OnTime<0){Task2_OnTime=0;}
5154   3                break;
5155   3              
5156   3              case 3:
5157   3                Task3_OnTime+=Menu_Edit_Value*10*2;
5158   3                if(Task3_OnTime<0){Task3_OnTime=0;}
5159   3                break;
5160   3                
5161   3              case 4:
5162   3                Task4_OnTime+=Menu_Edit_Value*10*2;
5163   3                if(Task4_OnTime<0){Task4_OnTime=0;}
5164   3                break;
5165   3              
5166   3              case 5:
5167   3                Task5_OnTime+=Menu_Edit_Value*10*2;
5168   3                if(Task5_OnTime<0){Task5_OnTime=0;}
5169   3                break;
5170   3              
5171   3              case 6:
5172   3                Task6_OnTime+=Menu_Edit_Value*10*2;
5173   3                if(Task6_OnTime<0){Task6_OnTime=0;}
5174   3                break;
5175   3            }
5176   2          
5177   2            //复位菜单当前编辑值
5178   2            Menu_Edit_Value = 0;
5179   2            
5180   2            //当前选中条目的闪烁
5181   2            //分钟的闪烁
5182   2            if(Menu_Edit_Show==0){
5183   3              LCD1602_Second_Line[9] = ' ';
5184   3              LCD1602_Second_Line[10] = ' ';
5185   3            }
5186   2            break;
5187   2          
5188   2          case 4:  //第四个编辑位，100MS
5189   2            Menu_Flag = 4;
5190   2          
5191   2            switch(TASK_SET_Number)
5192   2            {
5193   3              case 1:
5194   3                Task1_OnTime+=Menu_Edit_Value*2;
5195   3                if(Task1_OnTime<0){Task1_OnTime=0;}
5196   3                break;
5197   3              
5198   3              case 2:
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 85  

5199   3                Task2_OnTime+=Menu_Edit_Value*2;
5200   3                if(Task2_OnTime<0){Task2_OnTime=0;}
5201   3                break;
5202   3              
5203   3              case 3:
5204   3                Task3_OnTime+=Menu_Edit_Value*2;
5205   3                if(Task3_OnTime<0){Task3_OnTime=0;}
5206   3                break;
5207   3                
5208   3              case 4:
5209   3                Task4_OnTime+=Menu_Edit_Value*2;
5210   3                if(Task4_OnTime<0){Task4_OnTime=0;}
5211   3                break;
5212   3              
5213   3              case 5:
5214   3                Task5_OnTime+=Menu_Edit_Value*2;
5215   3                if(Task5_OnTime<0){Task5_OnTime=0;}
5216   3                break;
5217   3              
5218   3              case 6:
5219   3                Task6_OnTime+=Menu_Edit_Value*2;
5220   3                if(Task6_OnTime<0){Task6_OnTime=0;}
5221   3                break;
5222   3            }
5223   2          
5224   2            //复位菜单当前编辑值
5225   2            Menu_Edit_Value = 0;
5226   2            
5227   2            //当前选中条目的闪烁
5228   2            //100MS的闪烁
5229   2            if(Menu_Edit_Show==0){
5230   3              LCD1602_Second_Line[12] = ' ';
5231   3              LCD1602_Second_Line[13] = ' ';
5232   3            }
5233   2            break;
5234   2          
5235   2        }
5236   1      }
5237          
5238          void TASK_OffTime_SET_3_49()
5239          {
5240   1        //显示位超出复位0，切换为条目
5241   1        if(Menu_Edit==5){Menu_Edit=0;};
5242   1        
5243   1        //显示当前页的所有项目
5244   1        LCD1602_First_Line = TASK_OffTime;
5245   1        switch(TASK_SET_Number)
5246   1        {
5247   2          case 1: 
5248   2            LCD1602_First_Line[4]='1';
5249   2            
5250   2            //获取小时信息
5251   2            Time_100MS[1]=Task1_OffTime/10/60/60/2/1000%10+'0';
5252   2            Time_100MS[2]=Task1_OffTime/10/60/60/2/100%10+'0';
5253   2            Time_100MS[3]=Task1_OffTime/10/60/60/2/10%10+'0';
5254   2            Time_100MS[4]=Task1_OffTime/10/60/60/2/1%10+'0';
5255   2          
5256   2            //获取分钟信息
5257   2            //总时间减去小时部分，剩下分钟部分
5258   2            //总时间转换成分钟
5259   2            Time_100MS[6]=((Task1_OffTime/10/60/2)-(Task1_OffTime/10/60/60/2)*60)/10%10+'0';
5260   2            Time_100MS[7]=((Task1_OffTime/10/60/2)-(Task1_OffTime/10/60/60/2)*60)/1%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 86  

5261   2            
5262   2            //获取秒信息
5263   2            Time_100MS[9]=((Task1_OffTime/10/2)-(Task1_OffTime/10/60/2)*60)/10%10+'0';
5264   2            Time_100MS[10]=((Task1_OffTime/10/2)-(Task1_OffTime/10/60/2)*60)/1%10+'0';
5265   2          
5266   2            //获取100MS信息   
5267   2            Time_100MS[12]=((Task1_OffTime/2)-(Task1_OffTime/10/2)*10)/10%10+'0';
5268   2            Time_100MS[13]=((Task1_OffTime/2)-(Task1_OffTime/10/2)*10)/1%10+'0';
5269   2            break;
5270   2          case 2: 
5271   2            LCD1602_First_Line[4]='2';
5272   2            //获取小时信息
5273   2            Time_100MS[1]=Task2_OffTime/10/60/60/2/1000%10+'0';
5274   2            Time_100MS[2]=Task2_OffTime/10/60/60/2/100%10+'0';
5275   2            Time_100MS[3]=Task2_OffTime/10/60/60/2/10%10+'0';
5276   2            Time_100MS[4]=Task2_OffTime/10/60/60/2/1%10+'0';
5277   2          
5278   2            //获取分钟信息
5279   2            //总时间减去小时部分，剩下分钟部分
5280   2            //总时间转换成分钟
5281   2            Time_100MS[6]=((Task2_OffTime/10/60/2)-(Task2_OffTime/10/60/60/2)*60)/10%10+'0';
5282   2            Time_100MS[7]=((Task2_OffTime/10/60/2)-(Task2_OffTime/10/60/60/2)*60)/1%10+'0';
5283   2            
5284   2            //获取秒信息
5285   2            Time_100MS[9]=((Task2_OffTime/10/2)-(Task2_OffTime/10/60/2)*60)/10%10+'0';
5286   2            Time_100MS[10]=((Task2_OffTime/10/2)-(Task2_OffTime/10/60/2)*60)/1%10+'0';
5287   2          
5288   2            //获取100MS信息   
5289   2            Time_100MS[12]=((Task2_OffTime/2)-(Task2_OffTime/10/2)*10)/10%10+'0';
5290   2            Time_100MS[13]=((Task2_OffTime/2)-(Task2_OffTime/10/2)*10)/1%10+'0';
5291   2            
5292   2            break;
5293   2          case 3: 
5294   2            LCD1602_First_Line[4]='3';
5295   2            //获取小时信息
5296   2            Time_100MS[1]=Task3_OffTime/10/60/60/2/1000%10+'0';
5297   2            Time_100MS[2]=Task3_OffTime/10/60/60/2/100%10+'0';
5298   2            Time_100MS[3]=Task3_OffTime/10/60/60/2/10%10+'0';
5299   2            Time_100MS[4]=Task3_OffTime/10/60/60/2/1%10+'0';
5300   2          
5301   2            //获取分钟信息
5302   2            //总时间减去小时部分，剩下分钟部分
5303   2            //总时间转换成分钟
5304   2            Time_100MS[6]=((Task3_OffTime/10/60/2)-(Task3_OffTime/10/60/60/2)*60)/10%10+'0';
5305   2            Time_100MS[7]=((Task3_OffTime/10/60/2)-(Task3_OffTime/10/60/60/2)*60)/1%10+'0';
5306   2            
5307   2            //获取秒信息
5308   2            Time_100MS[9]=((Task3_OffTime/10/2)-(Task3_OffTime/10/60/2)*60)/10%10+'0';
5309   2            Time_100MS[10]=((Task3_OffTime/10/2)-(Task3_OffTime/10/60/2)*60)/1%10+'0';
5310   2          
5311   2            //获取100MS信息   
5312   2            Time_100MS[12]=((Task3_OffTime/2)-(Task3_OffTime/10/2)*10)/10%10+'0';
5313   2            Time_100MS[13]=((Task3_OffTime/2)-(Task3_OffTime/10/2)*10)/1%10+'0';
5314   2            
5315   2            break;
5316   2          case 4: 
5317   2            LCD1602_First_Line[4]='4';
5318   2            //获取小时信息
5319   2            Time_100MS[1]=Task4_OffTime/10/60/60/2/1000%10+'0';
5320   2            Time_100MS[2]=Task4_OffTime/10/60/60/2/100%10+'0';
5321   2            Time_100MS[3]=Task4_OffTime/10/60/60/2/10%10+'0';
5322   2            Time_100MS[4]=Task4_OffTime/10/60/60/2/1%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 87  

5323   2          
5324   2            //获取分钟信息
5325   2            //总时间减去小时部分，剩下分钟部分
5326   2            //总时间转换成分钟
5327   2            Time_100MS[6]=((Task4_OffTime/10/60/2)-(Task4_OffTime/10/60/60/2)*60)/10%10+'0';
5328   2            Time_100MS[7]=((Task4_OffTime/10/60/2)-(Task4_OffTime/10/60/60/2)*60)/1%10+'0';
5329   2            
5330   2            //获取秒信息
5331   2            Time_100MS[9]=((Task4_OffTime/10/2)-(Task4_OffTime/10/60/2)*60)/10%10+'0';
5332   2            Time_100MS[10]=((Task4_OffTime/10/2)-(Task4_OffTime/10/60/2)*60)/1%10+'0';
5333   2          
5334   2            //获取100MS信息   
5335   2            Time_100MS[12]=((Task4_OffTime/2)-(Task4_OffTime/10/2)*10)/10%10+'0';
5336   2            Time_100MS[13]=((Task4_OffTime/2)-(Task4_OffTime/10/2)*10)/1%10+'0';
5337   2            
5338   2            break;
5339   2          case 5: 
5340   2            LCD1602_First_Line[4]='5';
5341   2            //获取小时信息
5342   2            Time_100MS[1]=Task5_OffTime/10/60/60/2/1000%10+'0';
5343   2            Time_100MS[2]=Task5_OffTime/10/60/60/2/100%10+'0';
5344   2            Time_100MS[3]=Task5_OffTime/10/60/60/2/10%10+'0';
5345   2            Time_100MS[4]=Task5_OffTime/10/60/60/2/1%10+'0';
5346   2          
5347   2            //获取分钟信息
5348   2            //总时间减去小时部分，剩下分钟部分
5349   2            //总时间转换成分钟
5350   2            Time_100MS[6]=((Task5_OffTime/10/60/2)-(Task5_OffTime/10/60/60/2)*60)/10%10+'0';
5351   2            Time_100MS[7]=((Task5_OffTime/10/60/2)-(Task5_OffTime/10/60/60/2)*60)/1%10+'0';
5352   2            
5353   2            //获取秒信息
5354   2            Time_100MS[9]=((Task5_OffTime/10/2)-(Task5_OffTime/10/60/2)*60)/10%10+'0';
5355   2            Time_100MS[10]=((Task5_OffTime/10/2)-(Task5_OffTime/10/60/2)*60)/1%10+'0';
5356   2          
5357   2            //获取100MS信息   
5358   2            Time_100MS[12]=((Task5_OffTime/2)-(Task5_OffTime/10/2)*10)/10%10+'0';
5359   2            Time_100MS[13]=((Task5_OffTime/2)-(Task5_OffTime/10/2)*10)/1%10+'0';
5360   2            
5361   2            break;
5362   2          case 6: 
5363   2            LCD1602_First_Line[4]='6';
5364   2            //获取小时信息
5365   2            Time_100MS[1]=Task6_OffTime/10/60/60/2/1000%10+'0';
5366   2            Time_100MS[2]=Task6_OffTime/10/60/60/2/100%10+'0';
5367   2            Time_100MS[3]=Task6_OffTime/10/60/60/2/10%10+'0';
5368   2            Time_100MS[4]=Task6_OffTime/10/60/60/2/1%10+'0';
5369   2          
5370   2            //获取分钟信息
5371   2            //总时间减去小时部分，剩下分钟部分
5372   2            //总时间转换成分钟
5373   2            Time_100MS[6]=((Task6_OffTime/10/60/2)-(Task6_OffTime/10/60/60/2)*60)/10%10+'0';
5374   2            Time_100MS[7]=((Task6_OffTime/10/60/2)-(Task6_OffTime/10/60/60/2)*60)/1%10+'0';
5375   2            
5376   2            //获取秒信息
5377   2            Time_100MS[9]=((Task6_OffTime/10/2)-(Task6_OffTime/10/60/2)*60)/10%10+'0';
5378   2            Time_100MS[10]=((Task6_OffTime/10/2)-(Task6_OffTime/10/60/2)*60)/1%10+'0';
5379   2          
5380   2            //获取100MS信息   
5381   2            Time_100MS[12]=((Task6_OffTime/2)-(Task6_OffTime/10/2)*10)/10%10+'0';
5382   2            Time_100MS[13]=((Task6_OffTime/2)-(Task6_OffTime/10/2)*10)/1%10+'0';
5383   2            
5384   2            break;
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 88  

5385   2        }
5386   1        LCD1602_Second_Line = Time_100MS;
5387   1        
5388   1        //显示不同显示位时的状态
5389   1        switch(Menu_Edit)
5390   1        {
5391   2          case 0:   //条目状态
5392   2            
5393   2            Menu_Flag = 3;
5394   2          
5395   2            //复位菜单当前编辑值
5396   2            Menu_Edit_Value = 0;
5397   2            
5398   2            break;
5399   2            
5400   2          case 1:  //第一个编辑位，修改小时
5401   2            Menu_Flag = 4;
5402   2          
5403   2            switch(TASK_SET_Number)
5404   2            {
5405   3              case 1:
5406   3                Task1_OffTime+=Menu_Edit_Value*36000*2;
5407   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5408   3                break;
5409   3              
5410   3              case 2:
5411   3                Task2_OffTime+=Menu_Edit_Value*36000*2;
5412   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5413   3                break;
5414   3                
5415   3              case 3:
5416   3                Task3_OffTime+=Menu_Edit_Value*36000*2;
5417   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5418   3                break;
5419   3                
5420   3              case 4:
5421   3                Task4_OffTime+=Menu_Edit_Value*36000*2;
5422   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5423   3                break;
5424   3                
5425   3              case 5:
5426   3                Task5_OffTime+=Menu_Edit_Value*36000*2;
5427   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5428   3                break;
5429   3                
5430   3              case 6:
5431   3                Task6_OffTime+=Menu_Edit_Value*36000*2;
5432   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5433   3                break;
5434   3            }
5435   2          
5436   2            //复位菜单当前编辑值
5437   2            Menu_Edit_Value = 0;
5438   2            
5439   2            //当前选中条目的闪烁
5440   2            //小时的闪烁
5441   2            if(Menu_Edit_Show==0){
5442   3              LCD1602_Second_Line[1] = ' ';
5443   3              LCD1602_Second_Line[2] = ' ';
5444   3              LCD1602_Second_Line[3] = ' ';
5445   3              LCD1602_Second_Line[4] = ' ';
5446   3            }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 89  

5447   2            break;
5448   2            
5449   2          case 2:
5450   2            Menu_Flag = 4;
5451   2          
5452   2            switch(TASK_SET_Number)
5453   2            {
5454   3              case 1:
5455   3                Task1_OffTime+=Menu_Edit_Value*600*2;
5456   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5457   3                break;
5458   3              
5459   3              case 2:
5460   3                Task2_OffTime+=Menu_Edit_Value*600*2;
5461   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5462   3                break;
5463   3              
5464   3              case 3:
5465   3                Task3_OffTime+=Menu_Edit_Value*600*2;
5466   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5467   3                break;
5468   3                
5469   3              case 4:
5470   3                Task4_OffTime+=Menu_Edit_Value*600*2;
5471   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5472   3                break;
5473   3              
5474   3              case 5:
5475   3                Task5_OffTime+=Menu_Edit_Value*600*2;
5476   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5477   3                break;
5478   3              
5479   3              case 6:
5480   3                Task6_OffTime+=Menu_Edit_Value*600*2;
5481   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5482   3                break;
5483   3            }
5484   2          
5485   2            //复位菜单当前编辑值
5486   2            Menu_Edit_Value = 0;
5487   2            
5488   2            //当前选中条目的闪烁
5489   2            //分钟的闪烁
5490   2            if(Menu_Edit_Show==0){
5491   3              LCD1602_Second_Line[6] = ' ';
5492   3              LCD1602_Second_Line[7] = ' ';
5493   3            }
5494   2            break;
5495   2            
5496   2          case 3:  //第三个编辑位，秒的设定
5497   2            Menu_Flag = 4;
5498   2          
5499   2            switch(TASK_SET_Number)
5500   2            {
5501   3              case 1:
5502   3                Task1_OffTime+=Menu_Edit_Value*10*2;
5503   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5504   3                break;
5505   3              
5506   3              case 2:
5507   3                Task2_OffTime+=Menu_Edit_Value*10*2;
5508   3                if(Task2_OffTime<0){Task2_OffTime=0;}
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 90  

5509   3                break;
5510   3              
5511   3              case 3:
5512   3                Task3_OffTime+=Menu_Edit_Value*10*2;
5513   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5514   3                break;
5515   3                
5516   3              case 4:
5517   3                Task4_OffTime+=Menu_Edit_Value*10*2;
5518   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5519   3                break;
5520   3              
5521   3              case 5:
5522   3                Task5_OffTime+=Menu_Edit_Value*10*2;
5523   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5524   3                break;
5525   3              
5526   3              case 6:
5527   3                Task6_OffTime+=Menu_Edit_Value*10*2;
5528   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5529   3                break;
5530   3            }
5531   2          
5532   2            //复位菜单当前编辑值
5533   2            Menu_Edit_Value = 0;
5534   2            
5535   2            //当前选中条目的闪烁
5536   2            //分钟的闪烁
5537   2            if(Menu_Edit_Show==0){
5538   3              LCD1602_Second_Line[9] = ' ';
5539   3              LCD1602_Second_Line[10] = ' ';
5540   3            }
5541   2            break;
5542   2          
5543   2          case 4:  //第四个编辑位，100MS
5544   2            Menu_Flag = 4;
5545   2          
5546   2            switch(TASK_SET_Number)
5547   2            {
5548   3              case 1:
5549   3                Task1_OffTime+=Menu_Edit_Value*2;
5550   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5551   3                break;
5552   3              
5553   3              case 2:
5554   3                Task2_OffTime+=Menu_Edit_Value*2;
5555   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5556   3                break;
5557   3              
5558   3              case 3:
5559   3                Task3_OffTime+=Menu_Edit_Value*2;
5560   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5561   3                break;
5562   3                
5563   3              case 4:
5564   3                Task4_OffTime+=Menu_Edit_Value*2;
5565   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5566   3                break;
5567   3              
5568   3              case 5:
5569   3                Task5_OffTime+=Menu_Edit_Value*2;
5570   3                if(Task5_OffTime<0){Task5_OffTime=0;}
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 91  

5571   3                break;
5572   3              
5573   3              case 6:
5574   3                Task6_OffTime+=Menu_Edit_Value*2;
5575   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5576   3                break;
5577   3            }
5578   2          
5579   2            //复位菜单当前编辑值
5580   2            Menu_Edit_Value = 0;
5581   2            
5582   2            //当前选中条目的闪烁
5583   2            //100MS的闪烁
5584   2            if(Menu_Edit_Show==0){
5585   3              LCD1602_Second_Line[12] = ' ';
5586   3              LCD1602_Second_Line[13] = ' ';
5587   3            }
5588   2            break;
5589   2          
5590   2        }
5591   1      
5592   1        //显示位超出复位0，切换为条目
5593   1        if(Menu_Edit==5){Menu_Edit=0;};
5594   1        
5595   1        //显示当前页的所有项目
5596   1        LCD1602_First_Line = TASK_OffTime;
5597   1        switch(TASK_SET_Number)
5598   1        {
5599   2          case 1: 
5600   2            LCD1602_First_Line[4]='1';
5601   2            
5602   2            //获取小时信息
5603   2            Time_100MS[1]=Task1_OffTime/10/60/60/2/1000%10+'0';
5604   2            Time_100MS[2]=Task1_OffTime/10/60/60/2/100%10+'0';
5605   2            Time_100MS[3]=Task1_OffTime/10/60/60/2/10%10+'0';
5606   2            Time_100MS[4]=Task1_OffTime/10/60/60/2/1%10+'0';
5607   2          
5608   2            //获取分钟信息
5609   2            //总时间减去小时部分，剩下分钟部分
5610   2            //总时间转换成分钟
5611   2            Time_100MS[6]=((Task1_OffTime/10/60/2)-(Task1_OffTime/10/60/60/2)*60)/10%10+'0';
5612   2            Time_100MS[7]=((Task1_OffTime/10/60/2)-(Task1_OffTime/10/60/60/2)*60)/1%10+'0';
5613   2            
5614   2            //获取秒信息
5615   2            Time_100MS[9]=((Task1_OffTime/10/2)-(Task1_OffTime/10/60/2)*60)/10%10+'0';
5616   2            Time_100MS[10]=((Task1_OffTime/10/2)-(Task1_OffTime/10/60/2)*60)/1%10+'0';
5617   2          
5618   2            //获取100MS信息   
5619   2            Time_100MS[12]=((Task1_OffTime/2)-(Task1_OffTime/10/2)*10)/10%10+'0';
5620   2            Time_100MS[13]=((Task1_OffTime/2)-(Task1_OffTime/10/2)*10)/1%10+'0';
5621   2            break;
5622   2          case 2: 
5623   2            LCD1602_First_Line[4]='2';
5624   2            //获取小时信息
5625   2            Time_100MS[1]=Task2_OffTime/10/60/60/2/1000%10+'0';
5626   2            Time_100MS[2]=Task2_OffTime/10/60/60/2/100%10+'0';
5627   2            Time_100MS[3]=Task2_OffTime/10/60/60/2/10%10+'0';
5628   2            Time_100MS[4]=Task2_OffTime/10/60/60/2/1%10+'0';
5629   2          
5630   2            //获取分钟信息
5631   2            //总时间减去小时部分，剩下分钟部分
5632   2            //总时间转换成分钟
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 92  

5633   2            Time_100MS[6]=((Task2_OffTime/10/60/2)-(Task2_OffTime/10/60/60/2)*60)/10%10+'0';
5634   2            Time_100MS[7]=((Task2_OffTime/10/60/2)-(Task2_OffTime/10/60/60/2)*60)/1%10+'0';
5635   2            
5636   2            //获取秒信息
5637   2            Time_100MS[9]=((Task2_OffTime/10/2)-(Task2_OffTime/10/60/2)*60)/10%10+'0';
5638   2            Time_100MS[10]=((Task2_OffTime/10/2)-(Task2_OffTime/10/60/2)*60)/1%10+'0';
5639   2          
5640   2            //获取100MS信息   
5641   2            Time_100MS[12]=((Task2_OffTime/2)-(Task2_OffTime/10/2)*10)/10%10+'0';
5642   2            Time_100MS[13]=((Task2_OffTime/2)-(Task2_OffTime/10/2)*10)/1%10+'0';
5643   2            
5644   2            break;
5645   2          case 3: 
5646   2            LCD1602_First_Line[4]='3';
5647   2            //获取小时信息
5648   2            Time_100MS[1]=Task3_OffTime/10/60/60/2/1000%10+'0';
5649   2            Time_100MS[2]=Task3_OffTime/10/60/60/2/100%10+'0';
5650   2            Time_100MS[3]=Task3_OffTime/10/60/60/2/10%10+'0';
5651   2            Time_100MS[4]=Task3_OffTime/10/60/60/2/1%10+'0';
5652   2          
5653   2            //获取分钟信息
5654   2            //总时间减去小时部分，剩下分钟部分
5655   2            //总时间转换成分钟
5656   2            Time_100MS[6]=((Task3_OffTime/10/60/2)-(Task3_OffTime/10/60/60/2)*60)/10%10+'0';
5657   2            Time_100MS[7]=((Task3_OffTime/10/60/2)-(Task3_OffTime/10/60/60/2)*60)/1%10+'0';
5658   2            
5659   2            //获取秒信息
5660   2            Time_100MS[9]=((Task3_OffTime/10/2)-(Task3_OffTime/10/60/2)*60)/10%10+'0';
5661   2            Time_100MS[10]=((Task3_OffTime/10/2)-(Task3_OffTime/10/60/2)*60)/1%10+'0';
5662   2          
5663   2            //获取100MS信息   
5664   2            Time_100MS[12]=((Task3_OffTime/2)-(Task3_OffTime/10/2)*10)/10%10+'0';
5665   2            Time_100MS[13]=((Task3_OffTime/2)-(Task3_OffTime/10/2)*10)/1%10+'0';
5666   2            
5667   2            break;
5668   2          case 4: 
5669   2            LCD1602_First_Line[4]='4';
5670   2            //获取小时信息
5671   2            Time_100MS[1]=Task4_OffTime/10/60/60/2/1000%10+'0';
5672   2            Time_100MS[2]=Task4_OffTime/10/60/60/2/100%10+'0';
5673   2            Time_100MS[3]=Task4_OffTime/10/60/60/2/10%10+'0';
5674   2            Time_100MS[4]=Task4_OffTime/10/60/60/2/1%10+'0';
5675   2          
5676   2            //获取分钟信息
5677   2            //总时间减去小时部分，剩下分钟部分
5678   2            //总时间转换成分钟
5679   2            Time_100MS[6]=((Task4_OffTime/10/60/2)-(Task4_OffTime/10/60/60/2)*60)/10%10+'0';
5680   2            Time_100MS[7]=((Task4_OffTime/10/60/2)-(Task4_OffTime/10/60/60/2)*60)/1%10+'0';
5681   2            
5682   2            //获取秒信息
5683   2            Time_100MS[9]=((Task4_OffTime/10/2)-(Task4_OffTime/10/60/2)*60)/10%10+'0';
5684   2            Time_100MS[10]=((Task4_OffTime/10/2)-(Task4_OffTime/10/60/2)*60)/1%10+'0';
5685   2          
5686   2            //获取100MS信息   
5687   2            Time_100MS[12]=((Task4_OffTime/2)-(Task4_OffTime/10/2)*10)/10%10+'0';
5688   2            Time_100MS[13]=((Task4_OffTime/2)-(Task4_OffTime/10/2)*10)/1%10+'0';
5689   2            
5690   2            break;
5691   2          case 5: 
5692   2            LCD1602_First_Line[4]='5';
5693   2            //获取小时信息
5694   2            Time_100MS[1]=Task5_OffTime/10/60/60/2/1000%10+'0';
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 93  

5695   2            Time_100MS[2]=Task5_OffTime/10/60/60/2/100%10+'0';
5696   2            Time_100MS[3]=Task5_OffTime/10/60/60/2/10%10+'0';
5697   2            Time_100MS[4]=Task5_OffTime/10/60/60/2/1%10+'0';
5698   2          
5699   2            //获取分钟信息
5700   2            //总时间减去小时部分，剩下分钟部分
5701   2            //总时间转换成分钟
5702   2            Time_100MS[6]=((Task5_OffTime/10/60/2)-(Task5_OffTime/10/60/60/2)*60)/10%10+'0';
5703   2            Time_100MS[7]=((Task5_OffTime/10/60/2)-(Task5_OffTime/10/60/60/2)*60)/1%10+'0';
5704   2            
5705   2            //获取秒信息
5706   2            Time_100MS[9]=((Task5_OffTime/10/2)-(Task5_OffTime/10/60/2)*60)/10%10+'0';
5707   2            Time_100MS[10]=((Task5_OffTime/10/2)-(Task5_OffTime/10/60/2)*60)/1%10+'0';
5708   2          
5709   2            //获取100MS信息   
5710   2            Time_100MS[12]=((Task5_OffTime/2)-(Task5_OffTime/10/2)*10)/10%10+'0';
5711   2            Time_100MS[13]=((Task5_OffTime/2)-(Task5_OffTime/10/2)*10)/1%10+'0';
5712   2            
5713   2            break;
5714   2          case 6: 
5715   2            LCD1602_First_Line[4]='6';
5716   2            //获取小时信息
5717   2            Time_100MS[1]=Task6_OffTime/10/60/60/2/1000%10+'0';
5718   2            Time_100MS[2]=Task6_OffTime/10/60/60/2/100%10+'0';
5719   2            Time_100MS[3]=Task6_OffTime/10/60/60/2/10%10+'0';
5720   2            Time_100MS[4]=Task6_OffTime/10/60/60/2/1%10+'0';
5721   2          
5722   2            //获取分钟信息
5723   2            //总时间减去小时部分，剩下分钟部分
5724   2            //总时间转换成分钟
5725   2            Time_100MS[6]=((Task6_OffTime/10/60/2)-(Task6_OffTime/10/60/60/2)*60)/10%10+'0';
5726   2            Time_100MS[7]=((Task6_OffTime/10/60/2)-(Task6_OffTime/10/60/60/2)*60)/1%10+'0';
5727   2            
5728   2            //获取秒信息
5729   2            Time_100MS[9]=((Task6_OffTime/10/2)-(Task6_OffTime/10/60/2)*60)/10%10+'0';
5730   2            Time_100MS[10]=((Task6_OffTime/10/2)-(Task6_OffTime/10/60/2)*60)/1%10+'0';
5731   2          
5732   2            //获取100MS信息   
5733   2            Time_100MS[12]=((Task6_OffTime/2)-(Task6_OffTime/10/2)*10)/10%10+'0';
5734   2            Time_100MS[13]=((Task6_OffTime/2)-(Task6_OffTime/10/2)*10)/1%10+'0';
5735   2            
5736   2            break;
5737   2        }
5738   1        LCD1602_Second_Line = Time_100MS;
5739   1        
5740   1        //显示不同显示位时的状态
5741   1        switch(Menu_Edit)
5742   1        {
5743   2          case 0:   //条目状态
5744   2            
5745   2            Menu_Flag = 3;
5746   2          
5747   2            //复位菜单当前编辑值
5748   2            Menu_Edit_Value = 0;
5749   2            
5750   2            break;
5751   2            
5752   2          case 1:  //第一个编辑位，修改小时
5753   2            Menu_Flag = 4;
5754   2          
5755   2            switch(TASK_SET_Number)
5756   2            {
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 94  

5757   3              case 1:
5758   3                Task1_OffTime+=Menu_Edit_Value*36000*2;
5759   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5760   3                break;
5761   3              
5762   3              case 2:
5763   3                Task2_OffTime+=Menu_Edit_Value*36000*2;
5764   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5765   3                break;
5766   3                
5767   3              case 3:
5768   3                Task3_OffTime+=Menu_Edit_Value*36000*2;
5769   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5770   3                break;
5771   3                
5772   3              case 4:
5773   3                Task4_OffTime+=Menu_Edit_Value*36000*2;
5774   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5775   3                break;
5776   3                
5777   3              case 5:
5778   3                Task5_OffTime+=Menu_Edit_Value*36000*2;
5779   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5780   3                break;
5781   3                
5782   3              case 6:
5783   3                Task6_OffTime+=Menu_Edit_Value*36000*2;
5784   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5785   3                break;
5786   3            }
5787   2          
5788   2            //复位菜单当前编辑值
5789   2            Menu_Edit_Value = 0;
5790   2            
5791   2            //当前选中条目的闪烁
5792   2            //小时的闪烁
5793   2            if(Menu_Edit_Show==0){
5794   3              LCD1602_Second_Line[1] = ' ';
5795   3              LCD1602_Second_Line[2] = ' ';
5796   3              LCD1602_Second_Line[3] = ' ';
5797   3              LCD1602_Second_Line[4] = ' ';
5798   3            }
5799   2            break;
5800   2            
5801   2          case 2:
5802   2            Menu_Flag = 4;
5803   2          
5804   2            switch(TASK_SET_Number)
5805   2            {
5806   3              case 1:
5807   3                Task1_OffTime+=Menu_Edit_Value*600*2;
5808   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5809   3                break;
5810   3              
5811   3              case 2:
5812   3                Task2_OffTime+=Menu_Edit_Value*600*2;
5813   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5814   3                break;
5815   3              
5816   3              case 3:
5817   3                Task3_OffTime+=Menu_Edit_Value*600*2;
5818   3                if(Task3_OffTime<0){Task3_OffTime=0;}
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 95  

5819   3                break;
5820   3                
5821   3              case 4:
5822   3                Task4_OffTime+=Menu_Edit_Value*600*2;
5823   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5824   3                break;
5825   3              
5826   3              case 5:
5827   3                Task5_OffTime+=Menu_Edit_Value*600*2;
5828   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5829   3                break;
5830   3              
5831   3              case 6:
5832   3                Task6_OffTime+=Menu_Edit_Value*600*2;
5833   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5834   3                break;
5835   3            }
5836   2          
5837   2            //复位菜单当前编辑值
5838   2            Menu_Edit_Value = 0;
5839   2            
5840   2            //当前选中条目的闪烁
5841   2            //分钟的闪烁
5842   2            if(Menu_Edit_Show==0){
5843   3              LCD1602_Second_Line[6] = ' ';
5844   3              LCD1602_Second_Line[7] = ' ';
5845   3            }
5846   2            break;
5847   2            
5848   2          case 3:  //第三个编辑位，秒的设定
5849   2            Menu_Flag = 4;
5850   2          
5851   2            switch(TASK_SET_Number)
5852   2            {
5853   3              case 1:
5854   3                Task1_OffTime+=Menu_Edit_Value*10*2;
5855   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5856   3                break;
5857   3              
5858   3              case 2:
5859   3                Task2_OffTime+=Menu_Edit_Value*10*2;
5860   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5861   3                break;
5862   3              
5863   3              case 3:
5864   3                Task3_OffTime+=Menu_Edit_Value*10*2;
5865   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5866   3                break;
5867   3                
5868   3              case 4:
5869   3                Task4_OffTime+=Menu_Edit_Value*10*2;
5870   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5871   3                break;
5872   3              
5873   3              case 5:
5874   3                Task5_OffTime+=Menu_Edit_Value*10*2;
5875   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5876   3                break;
5877   3              
5878   3              case 6:
5879   3                Task6_OffTime+=Menu_Edit_Value*10*2;
5880   3                if(Task6_OffTime<0){Task6_OffTime=0;}
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 96  

5881   3                break;
5882   3            }
5883   2          
5884   2            //复位菜单当前编辑值
5885   2            Menu_Edit_Value = 0;
5886   2            
5887   2            //当前选中条目的闪烁
5888   2            //分钟的闪烁
5889   2            if(Menu_Edit_Show==0){
5890   3              LCD1602_Second_Line[9] = ' ';
5891   3              LCD1602_Second_Line[10] = ' ';
5892   3            }
5893   2            break;
5894   2          
5895   2          case 4:  //第四个编辑位，100MS
5896   2            Menu_Flag = 4;
5897   2          
5898   2            switch(TASK_SET_Number)
5899   2            {
5900   3              case 1:
5901   3                Task1_OffTime+=Menu_Edit_Value*2;
5902   3                if(Task1_OffTime<0){Task1_OffTime=0;}
5903   3                break;
5904   3              
5905   3              case 2:
5906   3                Task2_OffTime+=Menu_Edit_Value*2;
5907   3                if(Task2_OffTime<0){Task2_OffTime=0;}
5908   3                break;
5909   3              
5910   3              case 3:
5911   3                Task3_OffTime+=Menu_Edit_Value*2;
5912   3                if(Task3_OffTime<0){Task3_OffTime=0;}
5913   3                break;
5914   3                
5915   3              case 4:
5916   3                Task4_OffTime+=Menu_Edit_Value*2;
5917   3                if(Task4_OffTime<0){Task4_OffTime=0;}
5918   3                break;
5919   3              
5920   3              case 5:
5921   3                Task5_OffTime+=Menu_Edit_Value*2;
5922   3                if(Task5_OffTime<0){Task5_OffTime=0;}
5923   3                break;
5924   3              
5925   3              case 6:
5926   3                Task6_OffTime+=Menu_Edit_Value*2;
5927   3                if(Task6_OffTime<0){Task6_OffTime=0;}
5928   3                break;
5929   3            }
5930   2          
5931   2            //复位菜单当前编辑值
5932   2            Menu_Edit_Value = 0;
5933   2            
5934   2            //当前选中条目的闪烁
5935   2            //100MS的闪烁
5936   2            if(Menu_Edit_Show==0){
5937   3              LCD1602_Second_Line[12] = ' ';
5938   3              LCD1602_Second_Line[13] = ' ';
5939   3            }
5940   2            break;
5941   2          
5942   2        }
C51 COMPILER V9.60.0.0   LCD1602_MENU                                                      07/31/2022 23:31:43 PAGE 97  

5943   1      
5944   1        
5945   1      }
5946          
5947          void RETURN_3_50()
5948          {
5949   1        Menu_Flag = 5;
5950   1        LCD1602_First_Line = RETURN_Select;
5951   1        LCD1602_Second_Line = Menu_Empty_Line;
5952   1      }
5953          
5954          
5955          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  24295    ----
   CONSTANT SIZE    =   1607    ----
   XDATA SIZE       =    219    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =     16    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
