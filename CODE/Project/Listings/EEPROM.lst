C51 COMPILER V9.60.0.0   EEPROM                                                            07/31/2022 23:33:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN ..\Output\EEPROM.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\Source\Device_Driver\EEPROM.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\Source\
                    -Application;..\Source\Device_Driver;..\Source\System;D:\Keil\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\Listings\EEPROM.lst
                    -) TABS(2) OBJECT(..\Output\EEPROM.obj)

line level    source

   1          
   2          #include "Config.h"
   3          #include "intrins.h"
   4          #include "EEPROM.h"
   5          
   6          /******************************************************************************/
   7          // 函数名称：IapIdle
   8          // 输入参数：无
   9          // 输出参数：无 
  10          // 函数功能：禁用（关闭） ISP/IAP/EEPROM , 使单片机处于安全状态
  11          /******************************************************************************/
  12          void IapIdle()
  13          {
  14   1          IAP_CONTR = 0;                  //关闭IAP功能
  15   1          IAP_CMD = 0;                    //Clear command to standby
  16   1          IAP_TRIG = 0;                   //清除触发器寄存器
  17   1          IAP_ADDRH = 0x80;               //Data ptr point to non-EEPROM area
  18   1          IAP_ADDRL = 0;                  //Clear IAP address to prevent misuse
  19   1      }
  20          
  21          /******************************************************************************/
  22          // 函数名称：IapReadByte
  23          // 输入参数：addr-扇区单元地址
  24          // 输出参数：dat-读出的数据
  25          // 函数功能：从 ISP/IAP/EEPROM 读出一字节
  26          /******************************************************************************/
  27          BYTE IapReadByte(WORD addr)
  28          {
  29   1          BYTE dat;                       //Data buffer
  30   1      
  31   1          IAP_CONTR = ENABLE_IAP;         //打开IAP功能，设置等待时间
  32   1          IAP_CMD = CMD_READ;             //设置ISP/IAP/EEPROM 读命令
  33   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  34   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  35   1          IAP_TRIG = 0x5a;                //Send trigger command1 (0x5a)
  36   1          IAP_TRIG = 0xa5;                //Send trigger command2 (0xa5)
  37   1          _nop_();                        //单片机将保持在这里，直到ISP/IAP/EEPROM操作完成
  38   1          dat = IAP_DATA;                 //读取 ISP/IAP/EEPROM 数据
  39   1          IapIdle();                      //关闭ISP/IAP/EEPROM功能
  40   1      
  41   1          return dat;                     //返回Flash数据
  42   1      }
  43          
  44          /******************************************************************************/
  45          // 函数名称：IapProgramByte
  46          // 输入参数：addr-扇区单元地址，dat-待写入的数据
  47          // 输出参数：无
  48          // 函数功能：写入一字节到 ISP/IAP/EEPROM 
  49          /******************************************************************************/
  50          void IapProgramByte(WORD addr, BYTE dat)
  51          {
  52   1          IAP_CONTR = ENABLE_IAP;         //打开IAP功能，设置等待时间
  53   1          IAP_CMD = CMD_PROGRAM;          //设置ISP/IAP/EEPROM 编程命令
C51 COMPILER V9.60.0.0   EEPROM                                                            07/31/2022 23:33:26 PAGE 2   

  54   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  55   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  56   1          IAP_DATA = dat;                 //写 ISP/IAP/EEPROM 数据
  57   1          IAP_TRIG = 0x5a;                //Send trigger command1 (0x5a)
  58   1          IAP_TRIG = 0xa5;                //Send trigger command2 (0xa5)
  59   1          _nop_();                        //单片机将保持在这里，直到ISP/IAP/EEPROM操作完成
  60   1          IapIdle();                      //关闭ISP/IAP/EEPROM功能
  61   1      }
  62          
  63          
  64          /******************************************************************************/
  65          // 函数名称：IapEraseSector
  66          // 输入参数：addr-某一扇区首地址
  67          // 输出参数：无
  68          // 函数功能：擦除某一扇区（每个扇区512字节）
  69          /******************************************************************************/
  70          void IapEraseSector(WORD addr)
  71          {
  72   1          IAP_CONTR = ENABLE_IAP;         //打开IAP功能，设置等待时间
  73   1          IAP_CMD = CMD_ERASE;            //设置 ISP/IAP/EEPROM 擦除命令
  74   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  75   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  76   1          IAP_TRIG = 0x5a;                //Send trigger command1 (0x5a)
  77   1          IAP_TRIG = 0xa5;                //Send trigger command2 (0xa5)
  78   1          _nop_();                        //单片机将保持在这里，直到ISP/IAP/EEPROM操作完成
  79   1          IapIdle();
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     71    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
